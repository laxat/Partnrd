{"ast":null,"code":"export default function validate(values) {\n  let errors = {};\n\n  if (!values.name.trim()) {\n    errors.name = \"Name required\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Email Required\";\n  } else if (!/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  }\n\n  if (!values.password) {\n    errors.password = 'Password Required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password needs to be a 8 characters or more';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Password is required';\n  }\n\n  if (values.password !== values.password2) {\n    errors.password2 = 'Password does not match';\n  }\n\n  return errors;\n}\nexport function LoginValidate(values) {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = \"Email Required\";\n  } else if (!/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Password Required\";\n  }\n\n  return errors;\n}\n_c = LoginValidate;\nexport function ResetValidate(values) {\n  let errors = {};\n\n  if (!values.password) {\n    errors.password = \"Password Required\";\n  } else if (values.password.length < 8) {\n    errors.password = \"Password needs to be a 8 characters or more\";\n  }\n\n  if (!values.password_confirmation) {\n    errors.password_confirmation = \"Password is required\";\n  }\n\n  if (values.password !== values.password_confirmation) {\n    errors.password2 = \"Password does not match\";\n  }\n\n  return errors;\n}\n_c2 = ResetValidate;\nexport function ForgotValidate(values) {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = \"Email Required\";\n  } else if (!/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(values.email)) {\n    errors.email = \"The selected email is invalid\";\n  }\n\n  return errors;\n}\n_c3 = ForgotValidate;\n;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginValidate\");\n$RefreshReg$(_c2, \"ResetValidate\");\n$RefreshReg$(_c3, \"ForgotValidate\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/clientAuth/validate.js"],"names":["validate","values","errors","name","trim","email","test","password","length","password2","LoginValidate","ResetValidate","password_confirmation","ForgotValidate"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,MAAlB,EACf;AACI,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,IAAP,CAAYC,IAAZ,EAAL,EACA;AACIF,IAAAA,MAAM,CAACC,IAAP,GAAc,eAAd;AACH;;AAED,MAAI,CAACF,MAAM,CAACI,KAAZ,EACA;AACIH,IAAAA,MAAM,CAACG,KAAP,GAAe,gBAAf;AAEH,GAJD,MAIO,IAAI,CAAC,gVAAgVC,IAAhV,CAAqVL,MAAM,CAACI,KAA5V,CAAL,EACH;AACAH,IAAAA,MAAM,CAACG,KAAP,GAAe,0BAAf;AACH;;AAGD,MAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsB;AAClBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,mBAAlB;AACH,GAFD,MAEO,IAAIN,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACnCN,IAAAA,MAAM,CAACK,QAAP,GAAkB,6CAAlB;AACH;;AAED,MAAI,CAACN,MAAM,CAACQ,SAAZ,EAAuB;AACnBP,IAAAA,MAAM,CAACO,SAAP,GAAmB,sBAAnB;AACH;;AAAC,MAAIR,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACQ,SAA/B,EAA0C;AACxCP,IAAAA,MAAM,CAACO,SAAP,GAAmB,yBAAnB;AACH;;AAED,SAAOP,MAAP;AACH;AACD,OAAO,SAASQ,aAAT,CAAuBT,MAAvB,EAAgC;AAElC,MAAIC,MAAM,GAAG,EAAb;;AAEH,MAAI,CAACD,MAAM,CAACI,KAAZ,EAAmB;AACjBH,IAAAA,MAAM,CAACG,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IACL,CAAC,gVAAgVC,IAAhV,CACCL,MAAM,CAACI,KADR,CADI,EAIL;AACAH,IAAAA,MAAM,CAACG,KAAP,GAAe,0BAAf;AACD;;AAED,MAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsB;AACpBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,mBAAlB;AACD;;AAEC,SAAOL,MAAP;AACH;KAnBeQ,a;AAsBhB,OAAO,SAASC,aAAT,CAAuBV,MAAvB,EACP;AACI,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACM,QAAZ,EAAsB;AACpBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,mBAAlB;AACD,GAFD,MAEO,IAAIN,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCN,IAAAA,MAAM,CAACK,QAAP,GAAkB,6CAAlB;AACD;;AAED,MAAI,CAACN,MAAM,CAACW,qBAAZ,EAAmC;AACjCV,IAAAA,MAAM,CAACU,qBAAP,GAA+B,sBAA/B;AACD;;AACD,MAAIX,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACW,qBAA/B,EAAsD;AACpDV,IAAAA,MAAM,CAACO,SAAP,GAAmB,yBAAnB;AACD;;AAED,SAAOP,MAAP;AAEH;MAnBeS,a;AAqBhB,OAAO,SAASE,cAAT,CAAwBZ,MAAxB,EACP;AACI,MAAIC,MAAM,GAAG,EAAb;;AAEI,MAAI,CAACD,MAAM,CAACI,KAAZ,EAAmB;AACjBH,IAAAA,MAAM,CAACG,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IACL,CAAC,gVAAgVC,IAAhV,CACCL,MAAM,CAACI,KADR,CADI,EAIL;AACAH,IAAAA,MAAM,CAACG,KAAP,GAAe,+BAAf;AACL;;AAED,SAAOH,MAAP;AACH;MAfeW,c;AAef","sourcesContent":["export default function validate(values)\r\n{\r\n    let errors = {};\r\n\r\n    if (!values.name.trim())\r\n    {\r\n        errors.name = \"Name required\"; \r\n    }\r\n\r\n    if (!values.email)\r\n    {\r\n        errors.email = \"Email Required\"; \r\n        \r\n    } else if (!/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(values.email))\r\n        {\r\n        errors.email = \"Email address is invalid\"; \r\n    }\r\n    \r\n\r\n    if (!values.password) {\r\n        errors.password = 'Password Required'; \r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password needs to be a 8 characters or more'; \r\n    }\r\n\r\n    if (!values.password2) {\r\n        errors.password2 = 'Password is required';\r\n    } if (values.password !== values.password2) {\r\n        errors.password2 = 'Password does not match'; \r\n    }\r\n\r\n    return errors; \r\n}\r\nexport function LoginValidate(values)  {\r\n\r\n     let errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email Required\";\r\n  } else if (\r\n    !/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Password Required\";\r\n  }\r\n    \r\n    return errors; \r\n}\r\n\r\n\r\nexport function ResetValidate(values)\r\n{\r\n    let errors = {};\r\n    \r\n    if (!values.password) {\r\n      errors.password = \"Password Required\";\r\n    } else if (values.password.length < 8) {\r\n      errors.password = \"Password needs to be a 8 characters or more\";\r\n    }\r\n\r\n    if (!values.password_confirmation) {\r\n      errors.password_confirmation = \"Password is required\";\r\n    }\r\n    if (values.password !== values.password_confirmation) {\r\n      errors.password2 = \"Password does not match\";\r\n    }\r\n\r\n    return errors;\r\n    \r\n}\r\n\r\nexport function ForgotValidate(values)\r\n{\r\n    let errors = {};\r\n\r\n        if (!values.email) {\r\n          errors.email = \"Email Required\";\r\n        } else if (\r\n          !/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2} | [0 - 9]{ 1, 2}) \\.) { 2 } (25[0 - 5] | 2[0 - 4][0 - 9] | 1[0 - 9]{ 2 }| [0 - 9]{ 1, 2 }) \\]?$) /i.test(\r\n            values.email\r\n          )\r\n        ) {\r\n          errors.email = \"The selected email is invalid\";\r\n    }\r\n    \r\n    return errors; \r\n}; \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}