{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\nimport \"./test.css\";\nimport { n } from \"./ShareAgreement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharesTable = /*#__PURE__*/React.forwardRef(_c = _s(({\n  columns,\n  data,\n  methods\n}, ref) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `shareInfo[${i}][shareName]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `shareInfo[${i}][shareClass]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `shareInfo[${i}][shareType]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Preferred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: `shareInfo[${i}][shareTotal]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c2 = SharesTable;\nlet i = 0;\nexport const FoundersTable = /*#__PURE__*/React.forwardRef(_c3 = _s2(({\n  columns,\n  data,\n  methods,\n  rowKey\n}, ref) => {\n  _s2();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n  // const [person, setPerson] = useState({\n  //   refNum: \"\"\n  // });\n\n  const [inputList, setInputList] = useState([[{\n    pos: {\n      name: `shareinfo[${i}]`\n    }\n  }]]);\n\n  const handleInput = (e, i) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[i] = { ...list[i],\n      [name]: value\n    };\n    setInputList({\n      list\n    });\n    console.log(inputList);\n  };\n\n  const handleAddClick = index => {\n    i += 1;\n    const d = [...inputList];\n    const item = [{\n      pos: {\n        name: `shareinfo[${i}]`\n      }\n    }];\n    d.push(item);\n    setInputList(d);\n  };\n\n  console.log(n);\n\n  const handleRemoveClick = index => {\n    i -= 1;\n    const pos = [...inputList[index]];\n    pos.splice(index, 1);\n    setInputList(pos);\n  };\n\n  console.log(inputList);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [inputList.map((x, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][refID]`,\n                      placeholder: \"Enter First Name\" //value={x.refID}\n                      ,\n                      onChange: e => handleInput(e, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][numHeld]`,\n                      placeholder: \"No. Shares held\",\n                      type: \"number\",\n                      onChange: e => handleInput(e, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: [inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: () => handleRemoveClick(i),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddClick(i),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][fname]`,\n              placeholder: \"Full Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][preferredName]`,\n              placeholder: \"Preferred Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `founderInfo[${i}][role]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Investor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Corporation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][streetName]`,\n              placeholder: \"Street Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: `founderInfo[${i}][cityName]`,\n                placeholder: \"City\",\n                innerRef: methods.register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: `founderInfo[${i}][provinceName]`,\n                placeholder: \"Province\",\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB\",\n                  children: \"Alberta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"BC\",\n                  children: \"British Columbia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MB\",\n                  children: \"Manitoba\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NB\",\n                  children: \"New Brunswick\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NL\",\n                  children: \"Newfoundland and Labrador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NS\",\n                  children: \"Nova Scotia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ON\",\n                  children: \"Ontario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PE\",\n                  children: \"Prince Edward Island\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"QC\",\n                  children: \"Quebec\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SK\",\n                  children: \"Saskatchewan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NT\",\n                  children: \"Northwest Territories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NU\",\n                  children: \"Nunavut\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"YT\",\n                  children: \"Yukon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][postalCode]`,\n              placeholder: \"Postal Code\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n              name: `founderInfo[${i}][phone]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: `founderInfo[${i}][email]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `founderInfo[${i}][onBoard]`,\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][corpName]`,\n              placeholder: \"Enter Corp Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this);\n}, \"Cme0j+ZowkvRhnmw6mpveBQvcR4=\", false, function () {\n  return [useTable];\n}));\n_c4 = FoundersTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SharesTable$React.forwardRef\");\n$RefreshReg$(_c2, \"SharesTable\");\n$RefreshReg$(_c3, \"FoundersTable$React.forwardRef\");\n$RefreshReg$(_c4, \"FoundersTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/Table.js"],"names":["React","useState","useEffect","useTable","Input","Label","Button","Row","Col","n","SharesTable","forwardRef","columns","data","methods","ref","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","register","FoundersTable","rowKey","inputList","setInputList","pos","name","handleInput","e","value","target","list","console","log","handleAddClick","index","d","item","push","handleRemoveClick","splice","x","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\r\nimport \"./test.css\";\r\nimport { n } from \"./ShareAgreement\"; \r\n\r\nexport const SharesTable = React.forwardRef(({ columns, data, methods}, ref) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>{i + 1}</td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`shareInfo[${i}][shareName]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`shareInfo[${i}][shareClass]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Class A</option>\r\n                    <option>Class B</option>\r\n                    <option>None</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`shareInfo[${i}][shareType]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Common</option>\r\n                    <option>Preferred</option>\r\n                  </Input>\r\n                </td>\r\n\r\n                <td>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name={`shareInfo[${i}][shareTotal]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nlet i = 0;\r\nexport const FoundersTable = React.forwardRef(\r\n  ({ columns, data, methods, rowKey }, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n      });\r\n\r\n    // Render the UI for your table\r\n    // const [person, setPerson] = useState({\r\n    //   refNum: \"\"\r\n\r\n    // });\r\n\r\n    const [inputList, setInputList] = useState(\r\n      [[{\r\n        pos: { name: `shareinfo[${i}]` }\r\n      }]]\r\n    );\r\n    \r\n    const handleInput = (e, i) => {\r\n      const { name, value } = e.target;\r\n      const list = [...inputList]\r\n      list[i] = {...list[i], [name]: value};\r\n      setInputList({list});\r\n      console.log(inputList)\r\n    }\r\n\r\n    const handleAddClick = (index) => {\r\n      i += 1;\r\n      const d = [...inputList];\r\n      const item = [{\r\n        pos: { name: `shareinfo[${i}]` }\r\n      }];\r\n      d.push(item);\r\n      setInputList(d);\r\n    }\r\n\r\n    console.log(n)\r\n    const handleRemoveClick = index => {\r\n      i -= 1;\r\n      const pos = [...inputList[index]];\r\n      pos.splice(index, 1);\r\n      setInputList(pos);\r\n    }\r\n\r\n    console.log(inputList)\r\n\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row); \r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>{i + 1}</td>\r\n                <td colSpan=\"2\">\r\n                  {inputList.map((x, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Row>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][refID]`}\r\n                              placeholder=\"Enter First Name\"\r\n                              //value={x.refID}\r\n                              onChange={(e) => handleInput(e, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][numHeld]`}\r\n                              placeholder=\"No. Shares held\"\r\n                              type=\"number\"\r\n                              onChange={(e) => handleInput(e, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div className=\"btn-box\">\r\n                    {inputList.length !== 1 && (\r\n                      <button\r\n                        className=\"mr10\"\r\n                        onClick={() => handleRemoveClick(i)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    )}\r\n                    {/* {inputList.length - 1 === index && ( */}\r\n                    <button onClick={() => handleAddClick(i)}>Add</button>\r\n                    {/* )} */}\r\n                  </div>\r\n                </td>\r\n                {/* <td>\r\n                  {inputList.map((x, index) => {\r\n                    return (\r\n                      <div className=\"box\">\r\n                        <Input\r\n                          name={`founderInfo[${i}][${x.name}][numHeld]`}\r\n                          placeholder=\"No. Shares held\"\r\n                          type=\"number\"\r\n                          onChange={(e) => handleInput(e, index)}\r\n                          innerRef={methods.register}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })} */}\r\n                {/* </td> */}\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][fname]`}\r\n                    placeholder=\"Full Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][preferredName]`}\r\n                    placeholder=\"Preferred Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`founderInfo[${i}][role]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Founder</option>\r\n                    <option>Investor</option>\r\n                    <option>Corporation</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][streetName]`}\r\n                    placeholder=\"Street Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name={`founderInfo[${i}][cityName]`}\r\n                      placeholder=\"City\"\r\n                      innerRef={methods.register}\r\n                    />\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name={`founderInfo[${i}][provinceName]`}\r\n                      placeholder=\"Province\"\r\n                      innerRef={methods.register}\r\n                    >\r\n                      <option value=\"AB\">Alberta</option>\r\n                      <option value=\"BC\">British Columbia</option>\r\n                      <option value=\"MB\">Manitoba</option>\r\n                      <option value=\"NB\">New Brunswick</option>\r\n                      <option value=\"NL\">Newfoundland and Labrador</option>\r\n                      <option value=\"NS\">Nova Scotia</option>\r\n                      <option value=\"ON\">Ontario</option>\r\n                      <option value=\"PE\">Prince Edward Island</option>\r\n                      <option value=\"QC\">Quebec</option>\r\n                      <option value=\"SK\">Saskatchewan</option>\r\n                      <option value=\"NT\">Northwest Territories</option>\r\n                      <option value=\"NU\">Nunavut</option>\r\n                      <option value=\"YT\">Yukon</option>\r\n                    </Input>\r\n                  </span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][postalCode]`}\r\n                    placeholder=\"Postal Code\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                    name={`founderInfo[${i}][phone]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name={`founderInfo[${i}][email]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name={`founderInfo[${i}][onBoard]`}\r\n                    ref={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][corpName]`}\r\n                    placeholder=\"Enter Corp Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}