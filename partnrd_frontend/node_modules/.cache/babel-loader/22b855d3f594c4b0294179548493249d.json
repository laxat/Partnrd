{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport ReeValidate from 'ree-validate';\n\nconst useEmail = () => {\n  _s();\n\n  const validator = new ReeValidate({\n    email: \"required|email\"\n  });\n  const [fields, setValues] = useState({\n    email: \"\"\n  });\n  const [error = {}, setErrors] = useState({});\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleEmailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n    const {\n      errors\n    } = fields;\n\n    if (name in errors) {\n      const validation = validator.errors;\n      validator.validate(name, value).then(() => {\n        if (!validation.has(name)) {\n          delete errors[name];\n          setErrors(errors);\n        }\n      });\n    }\n  };\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const validation = validator.errors;\n\n    if (value === \"\") {\n      return;\n    }\n\n    validator.validate(name, value).then(() => {\n      if (validation.has(name)) {\n        const errors = fields;\n        errors[name] = validation.first(name);\n        setErrors(errors);\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = fields;\n    axios.post(\"http://127.0.0.1:8000/api/password/email\", data).then(res => {\n      const success = {\n        state: true,\n        message: res.message\n      };\n      setSuccess(success);\n    }).catch(err => {\n      const errors = err.response.data;\n      const response = {\n        error: true,\n        message: errors\n      };\n      console.log(response); //setResponse(response);\n    });\n  };\n\n  return {\n    handleEmailChange,\n    fields,\n    handleSubmit,\n    handleBlur,\n    response,\n    success\n  };\n};\n\n_s(useEmail, \"vljQd3OIHu7uG7DiH5xKqhydy+g=\");\n\nexport default useEmail;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/pwd/useEmail.js"],"names":["useState","axios","ReeValidate","useEmail","validator","email","fields","setValues","error","setErrors","response","setResponse","message","success","setSuccess","state","handleEmailChange","e","name","value","target","errors","validation","validate","then","has","handleBlur","first","handleSubmit","preventDefault","data","post","res","catch","err","console","log"],"mappings":"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","sourcesContent":["import { useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ReeValidate from 'ree-validate'\r\n\r\nconst useEmail = () => {\r\n\r\n  const validator = new ReeValidate({\r\n    email: \"required|email\",\r\n  });\r\n\r\n  \r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [error = {}, setErrors] = useState({});\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n    \r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n\r\n    const { errors } = fields;\r\n    if (name in errors)\r\n    {\r\n      const validation = validator.errors;\r\n      validator.validate(name, value).then(() => {\r\n        if (!validation.has(name))\r\n        {\r\n          delete errors[name];\r\n          setErrors(errors);\r\n          \r\n          }\r\n      })\r\n      }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    const validation = validator.errors\r\n\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n\r\n     validator.validate(name, value).then(() => {\r\n       if (validation.has(name)) {\r\n         const errors = fields\r\n         errors[name] = validation.first(name); \r\n         setErrors(errors);\r\n       }\r\n     });\r\n\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = fields;\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/password/email\", data)\r\n      .then((res) => {\r\n          const success = {\r\n              state: true,\r\n              message: res.message\r\n          };\r\n          setSuccess(success); \r\n      })\r\n      .catch((err) => {\r\n        const errors = err.response.data; \r\n        const response = {\r\n          error: true,\r\n          message: errors,\r\n        };\r\n        console.log(response)\r\n        //setResponse(response);\r\n      });\r\n      \r\n  };\r\n\r\n  return { handleEmailChange, fields, handleSubmit, handleBlur, response, success };\r\n};\r\n\r\nexport default useEmail;\r\n"]},"metadata":{},"sourceType":"module"}