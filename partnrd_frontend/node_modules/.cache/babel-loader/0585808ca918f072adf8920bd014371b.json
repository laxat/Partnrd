{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\r\n * User Signup function, uses api to validate user looking to register \r\n * and adds them to the database.\r\n * \r\n * @param {*} validate \r\n * @returns \r\n */\n\nexport const useSignup = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(`${process.env.REACT_APP_API}/api/client/register`, data).then(res => {\n        const success = {\n          state: true,\n          message: \"Email Verification email sent\"\n        };\n        setSuccess(success);\n      }).catch(err => {\n        const error = err.response.data;\n        const s = Object.values(error.errors);\n        s.join(\" \");\n        const response = {\n          error: true,\n          message: s\n        };\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n/**\r\n * User Login logic, uses axios to post data to the server,\r\n * Validation is performed client side and server side. \r\n * Authentication is performed server side and messages are posted\r\n * to the front-end to display in the application. \r\n * @param {*} validate \r\n * @returns \r\n */\n\n_s(useSignup, \"NTxwXGZLiIQslKHKddUaTJjjZBY=\");\n\nexport const useLogin = validate => {\n  _s2();\n\n  const [fields, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    type: \"\",\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(`${process.env.REACT_APP_API}/api/login`, data).then(res => {\n        sessionStorage.setItem(\"xrsf\", res.data.access_token);\n        history.push(\"/\");\n      }).catch(err => {\n        let errors = \"\";\n        let type = \"\";\n        console.log(err.response.data);\n\n        if (err.response.data.errors.email) {\n          errors = err.response.data.errors.email;\n        } else {\n          errors = err.response.data.errors;\n          type = err.response.data.type;\n        }\n\n        const response = {\n          error: true,\n          type: type,\n          message: errors\n        };\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleLoginChange,\n    fields,\n    handleSubmit,\n    errors,\n    response\n  };\n};\n\n_s2(useLogin, \"5ItGm9J/rr+DZbdxtMig/NEs+4o=\", false, function () {\n  return [useHistory];\n});\n\nexport const useEmail = validate => {\n  _s3();\n\n  const [fields, setValues] = useState({\n    email: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleEmailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(`${process.env.REACT_APP_API}/api/password/email`, data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        setSuccess(success);\n      }).catch(err => {\n        let errors;\n\n        if (err.response.data.errors.email) {\n          errors = err.response.data.errors.email[0];\n        } else {\n          errors = err.response.data.errors;\n        }\n\n        const response = {\n          error: true,\n          message: errors\n        };\n        console.log(errors);\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleEmailChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s3(useEmail, \"sLn47ELPERy1aDEWSWGM9zOuDq8=\");\n\nconst getToken = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"token\")) {\n    return params.get(\"token\");\n  }\n\n  return \"\";\n};\n\nconst getUserId = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"id\")) {\n    return params.get(\"id\");\n  }\n\n  return \"\";\n};\n\nexport const useResetPassword = validate => {\n  _s4();\n\n  const [fields, setValues] = useState({\n    id: getUserId(),\n    token: getToken(),\n    password: \"\",\n    password_confirmation: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(`${process.env.REACT_APP_API}/api/password/reset`, data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        console.log(success);\n        setSuccess(success);\n      }).catch(err => {\n        let errors = err.response.data.errors;\n        const response = {\n          error: true,\n          message: errors\n        };\n        console.log(errors);\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s4(useResetPassword, \"jCGMW4R1kZ2a+fRAfOfsVO15Uik=\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/clientAuth/useAuth.js"],"names":["useState","useEffect","axios","useHistory","useSignup","validate","values","setValues","name","email","password","password2","response","setResponse","error","message","errors","setErrors","isSubmitting","setIsSubmitting","success","setSuccess","state","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","process","env","REACT_APP_API","then","res","catch","err","s","join","useLogin","fields","type","history","handleLoginChange","sessionStorage","setItem","access_token","push","console","log","useEmail","handleEmailChange","getToken","params","URLSearchParams","window","location","search","has","get","getUserId","useResetPassword","id","token","password_confirmation","handleChange"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n/**\r\n * User Signup function, uses api to validate user looking to register \r\n * and adds them to the database.\r\n * \r\n * @param {*} validate \r\n * @returns \r\n */\r\n\r\nexport const useSignup = (validate) =>\r\n{\r\n    const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    });\r\n   \r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n        ...values,\r\n      [name]:value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = values;\r\n      axios\r\n        .post(`${process.env.REACT_APP_API}/api/client/register`, data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: \"Email Verification email sent\",\r\n          };\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          const error = err.response.data;\r\n          const s = Object.values(error.errors);\r\n          s.join(\" \");\r\n          const response = {\r\n            error: true,\r\n            message: s,\r\n          };\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleRegisterChange,\r\n    values,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success\r\n  };\r\n};\r\n\r\n/**\r\n * User Login logic, uses axios to post data to the server,\r\n * Validation is performed client side and server side. \r\n * Authentication is performed server side and messages are posted\r\n * to the front-end to display in the application. \r\n * @param {*} validate \r\n * @returns \r\n */\r\n\r\nexport const useLogin = (validate) =>\r\n{\r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    type: \"\", \r\n    message: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleLoginChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(`${process.env.REACT_APP_API}/api/login`, data)\r\n        .then((res) => {\r\n          sessionStorage.setItem(\"xrsf\", res.data.access_token);\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          let errors = \"\";\r\n          let type = \"\";\r\n          console.log(err.response.data);\r\n          if (err.response.data.errors.email) {\r\n            errors = err.response.data.errors.email;\r\n          } else {\r\n            errors = err.response.data.errors;\r\n            type = err.response.data.type;\r\n          }\r\n          const response = {\r\n            error: true,\r\n            type: type,\r\n            message: errors,\r\n          };\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return { handleLoginChange, fields, handleSubmit, errors, response };\r\n};\r\n\r\n\r\nexport const useEmail = (validate) => {\r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(`${process.env.REACT_APP_API}/api/password/email`, data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: res.message,\r\n          };\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          let errors;\r\n          if (err.response.data.errors.email) {\r\n            errors = err.response.data.errors.email[0];\r\n          } else {\r\n            errors = err.response.data.errors;\r\n          }\r\n\r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n\r\n          console.log(errors);\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleEmailChange,\r\n    fields,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success,\r\n  };\r\n};\r\n\r\nconst getToken = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"token\")) {\r\n    return params.get(\"token\");\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst getUserId = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"id\")) {\r\n    return params.get(\"id\");\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const useResetPassword = (validate) => {\r\n  const [fields, setValues] = useState({\r\n    id: getUserId(),\r\n    token: getToken(),\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(`${process.env.REACT_APP_API}/api/password/reset`, data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: res.message,\r\n          };\r\n          console.log(success);\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          let errors = err.response.data.errors;\r\n\r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n\r\n          console.log(errors);\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleChange,\r\n    fields,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success,\r\n  };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}