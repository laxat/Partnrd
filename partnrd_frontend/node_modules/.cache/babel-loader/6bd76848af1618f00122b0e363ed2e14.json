{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\components\\\\Sidebar\\\\useSidebar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SidebarContext = /*#__PURE__*/createContext();\nexport function SidebarProvider({\n  children,\n  defaultItem\n}) {\n  _s();\n\n  const [currentItem, setCurrentItem] = useState(defaultItem);\n  useEffect(() => {\n    if (defaultItem !== currentItem) {\n      return setCurrentItem(defaultItem);\n    }\n  }, [currentItem, defaultItem]);\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      currentItem,\n      setCurrentItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidebarProvider, \"d/71ftzlNj1iBfCMHXZR9m3ibKM=\");\n\n_c = SidebarProvider;\nexport const useSidebar = ({\n  isCollapsible,\n  item,\n  items = []\n} = {}) => {\n  _s2();\n\n  const {\n    currentItem,\n    setCurrentItem\n  } = useContext(SidebarContext);\n  const isActive = item === currentItem || items.includes(currentItem);\n  const [isExpanded, setIsExpanded] = useState(isActive);\n  useEffect(() => {\n    if (!isActive && isExpanded) {\n      return setIsExpanded(false);\n    }\n\n    if (isActive && !isExpanded) {\n      return setIsExpanded(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentItem]);\n\n  const onItemClick = () => {\n    if (!isCollapsible) {\n      setCurrentItem(item);\n    }\n\n    setIsExpanded(prev => !prev);\n  };\n\n  return {\n    isExpanded,\n    isActive,\n    onItemClick\n  };\n};\n\n_s2(useSidebar, \"J525aVYWLYIIN45x4C6QSwp+zvc=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/components/Sidebar/useSidebar.js"],"names":["React","useState","useEffect","useContext","createContext","SidebarContext","SidebarProvider","children","defaultItem","currentItem","setCurrentItem","useSidebar","isCollapsible","item","items","isActive","includes","isExpanded","setIsExpanded","onItemClick","prev"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;;AAEA,OAAO,MAAMC,cAAc,gBAAGD,aAAa,EAApC;AAEP,OAAO,SAASE,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAoD;AAAA;;AACzD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACO,WAAD,CAA9C;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,WAAW,KAAKC,WAApB,EAAiC;AAC/B,aAAOC,cAAc,CAACF,WAAD,CAArB;AACD;AACF,GAJQ,EAIN,CAACC,WAAD,EAAcD,WAAd,CAJM,CAAT;AAKA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC9BC,MAAAA,WAD8B;AAE9BC,MAAAA;AAF8B,KAAhC;AAAA,cAIGH;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAfeD,e;;KAAAA,e;AAiBhB,OAAO,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,KAAK,GAAG;AAA/B,IAAsC,EAAvC,KAA8C;AAAA;;AACtE,QAAM;AAAEL,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCP,UAAU,CAACE,cAAD,CAAlD;AACA,QAAMU,QAAQ,GAAGF,IAAI,KAAKJ,WAAT,IAAwBK,KAAK,CAACE,QAAN,CAAeP,WAAf,CAAzC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACc,QAAD,CAA5C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,QAAD,IAAaE,UAAjB,EAA6B;AAC3B,aAAOC,aAAa,CAAC,KAAD,CAApB;AACD;;AACD,QAAIH,QAAQ,IAAI,CAACE,UAAjB,EAA6B;AAC3B,aAAOC,aAAa,CAAC,IAAD,CAApB;AACD,KANa,CAOd;;AACD,GARQ,EAQN,CAACT,WAAD,CARM,CAAT;;AAUA,QAAMU,WAAW,GAAG,MAAM;AACxB,QAAI,CAACP,aAAL,EAAoB;AAClBF,MAAAA,cAAc,CAACG,IAAD,CAAd;AACD;;AACDK,IAAAA,aAAa,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAb;AACD,GALD;;AAOA,SAAO;AACLH,IAAAA,UADK;AAELF,IAAAA,QAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CA3BM;;IAAMR,U","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\n\r\nexport const SidebarContext = createContext();\r\n\r\nexport function SidebarProvider({ children, defaultItem }) {\r\n  const [currentItem, setCurrentItem] = useState(defaultItem);\r\n  useEffect(() => {\r\n    if (defaultItem !== currentItem) {\r\n      return setCurrentItem(defaultItem);\r\n    }\r\n  }, [currentItem, defaultItem]);\r\n  return (\r\n    <SidebarContext.Provider value={{\r\n      currentItem,\r\n      setCurrentItem\r\n    }}>\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useSidebar = ({ isCollapsible, item, items = [] } = {}) => {\r\n  const { currentItem, setCurrentItem } = useContext(SidebarContext);\r\n  const isActive = item === currentItem || items.includes(currentItem);\r\n  const [isExpanded, setIsExpanded] = useState(isActive);\r\n\r\n  useEffect(() => {\r\n    if (!isActive && isExpanded) {\r\n      return setIsExpanded(false);\r\n    }\r\n    if (isActive && !isExpanded) {\r\n      return setIsExpanded(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentItem]);\r\n\r\n  const onItemClick = () => {\r\n    if (!isCollapsible) {\r\n      setCurrentItem(item);\r\n    }\r\n    setIsExpanded((prev) => !prev);\r\n  };\r\n\r\n  return {\r\n    isExpanded,\r\n    isActive,\r\n    onItemClick\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}