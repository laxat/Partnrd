{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Settings\\\\ProfileSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { createUseStyles } from \"react-jss\";\nimport CreateButton from \"../../components/CreateButton\";\nimport Gravatar from \"react-gravatar\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport { get } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  container: {\n    width: \"100%\",\n    maxWidth: \"1300px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  avatar: {\n    display: \"block\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    height: 50,\n    width: 50,\n    minWidth: 50,\n    borderRadius: 50,\n    marginRight: 5,\n    border: `1px solid rgb(0 0 0 / 15%)` // \"@media (max-width: 768px)\": {\n    //   marginLeft: 7,\n    // },\n\n  },\n  name: {\n    fontSize: 26,\n    textAlign: \"right\",\n    \"@media (max-width: 768px)\": {\n      display: \"none\"\n    },\n    marginRight: 5,\n    marginLeft: 5\n  },\n  formControl: {\n    border: \"1px solid #d5dae2\",\n    padding: \"15px 20px\",\n    marginBottom: \"20px\",\n    minHeight: \"15px\",\n    fontSize: \"13px\",\n    fontWeight: \"normal\",\n    width: 350\n  },\n  buttonRow: {\n    marginTop: 10,\n    \"@media (max-width: 768px)\": {\n      marginTop: 0\n    }\n  },\n  lastRow: {\n    marginTop: 30\n  },\n  rowC: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  profile: {\n    maxWidth: \"600px\",\n    margin: \"auto\",\n    marginTop: \"20px\"\n  },\n  rowLast: {\n    display: \"block !important\",\n    width: \"100%\"\n  },\n  customRow: {\n    display: \"grid !important\",\n    gridTemplateColumns: \"80% 20%\"\n  }\n});\n\nfunction ProfileSettings() {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState([]);\n  const [values, setValues] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  useEffect(() => {\n    getUser();\n  }, []);\n  const token = sessionStorage.getItem(\"xrsf\");\n  const api = \"http://localhost:8000/api/user\";\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  const getUser = async () => {\n    setIsLoading(true);\n    await axios.get(api, config).then(res => {\n      console.log(res.data);\n      const response = {\n        errors: false,\n        message: \"Profile Successfully Updated\"\n      };\n      setUser(res.data);\n      setResponse(response);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n\n  const putApi = `http://localhost:8000/api/users/${user.id}`;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.put(putApi, values).then(res => {\n      console.log(res.data);\n      setValues({\n        password: \"\",\n        new_password: \"\",\n        conf_password: \"\"\n      });\n      getUser();\n    }).catch(err => {\n      const error = err.response.data;\n\n      if (error.type === \"password\") {\n        if (error.errors.conf_password) {\n          setResponse({\n            error: true,\n            message: error.errors.conf_password[0]\n          });\n        }\n\n        if (error.errors.new_password) {\n          setResponse({\n            error: true,\n            message: error.errors.new_password[0]\n          });\n        }\n\n        if (error.errors.password) {\n          setResponse({\n            error: true,\n            message: error.errors.password[0]\n          });\n        }\n      }\n\n      if (error.type === \"email\") {\n        setResponse({\n          error: true,\n          message: error.errors\n        });\n      } else {\n        setResponse({\n          error: true,\n          message: error.errors\n        });\n      }\n    });\n  };\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n    setResponse({});\n  };\n\n  return !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.rowLast,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: classes.customRow,\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.rowC,\n          children: [/*#__PURE__*/_jsxDEV(Gravatar, {\n            email: user.email,\n            size: 100,\n            rating: \"pg\",\n            default: \"retro\",\n            className: \"CustomAvatar-image\",\n            protocol: \"https://\",\n            className: classes.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.name,\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: classes.rowLast,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"hidden\",\n        value: \"prayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"profile-form\",\n          className: classes.profile,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), response.error && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 32\n          }, this), !response.error && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              value: \"something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              autoComplete: \"off\",\n              defaultValue: user.name,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              autoComplete: \"user-email\",\n              defaultValue: user.email,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"password\",\n              name: \"password\",\n              value: values.password,\n              autoComplete: \"old-password\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"new_password\",\n              autoComplete: \"new-password\",\n              value: values.new_password,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Repeat Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"conf_password\",\n              autoComplete: \"conf-password\",\n              value: values.conf_password,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileSettings, \"FLMAIqVIVxQmmDcwma2Mg5Pf0eA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfileSettings;\nexport default ProfileSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileSettings\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Settings/ProfileSettings.js"],"names":["React","useState","useEffect","axios","Column","Row","createUseStyles","CreateButton","Gravatar","FormGroup","Input","get","useStyles","container","width","maxWidth","marginLeft","marginRight","avatar","display","overflow","textOverflow","height","minWidth","borderRadius","border","name","fontSize","textAlign","formControl","padding","marginBottom","minHeight","fontWeight","buttonRow","marginTop","lastRow","rowC","flexDirection","alignItems","profile","margin","rowLast","customRow","gridTemplateColumns","ProfileSettings","classes","user","setUser","values","setValues","isLoading","setIsLoading","response","setResponse","error","message","getUser","token","sessionStorage","getItem","api","config","headers","Authorization","then","res","console","log","data","errors","catch","err","putApi","id","handleSubmit","e","preventDefault","put","password","new_password","conf_password","type","handleInput","value","target","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Column, Row } from \"simple-flexbox\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport CreateButton from \"../../components/CreateButton\";\r\nimport Gravatar from \"react-gravatar\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport { get } from \"react-hook-form\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    width: \"100%\",\r\n    maxWidth: \"1300px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n\r\n  avatar: {\r\n    display: \"block\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    height: 50,\r\n    width: 50,\r\n    minWidth: 50,\r\n    borderRadius: 50,\r\n    marginRight: 5,\r\n    border: `1px solid rgb(0 0 0 / 15%)`,\r\n    // \"@media (max-width: 768px)\": {\r\n    //   marginLeft: 7,\r\n    // },\r\n  },\r\n\r\n  name: {\r\n    fontSize: 26,\r\n    textAlign: \"right\",\r\n    \"@media (max-width: 768px)\": {\r\n      display: \"none\",\r\n    },\r\n    marginRight: 5,\r\n    marginLeft: 5,\r\n  },\r\n\r\n  formControl: {\r\n    border: \"1px solid #d5dae2\",\r\n    padding: \"15px 20px\",\r\n    marginBottom: \"20px\",\r\n    minHeight: \"15px\",\r\n    fontSize: \"13px\",\r\n    fontWeight: \"normal\",\r\n    width: 350,\r\n  },\r\n\r\n  buttonRow: {\r\n    marginTop: 10,\r\n    \"@media (max-width: 768px)\": {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  lastRow: {\r\n    marginTop: 30,\r\n  },\r\n\r\n  rowC: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  profile: {\r\n    maxWidth: \"600px\",\r\n    margin: \"auto\",\r\n    marginTop: \"20px\",\r\n  },\r\n\r\n  rowLast: {\r\n    display: \"block !important\",\r\n    width: \"100%\",\r\n  },\r\n  customRow: {\r\n    display: \"grid !important\",\r\n    gridTemplateColumns: \"80% 20%\",\r\n  },\r\n});\r\n\r\nfunction ProfileSettings() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState([]);\r\n  const [values, setValues] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const token = sessionStorage.getItem(\"xrsf\");\r\n  const api = \"http://localhost:8000/api/user\";\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n\r\n  const getUser = async () => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(api, config)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const response = {\r\n          errors: false,\r\n          message: \"Profile Successfully Updated\",\r\n        };\r\n        setUser(res.data);\r\n        setResponse(response);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const putApi = `http://localhost:8000/api/users/${user.id}`;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .put(putApi, values)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setValues({\r\n          password: \"\",\r\n          new_password: \"\",\r\n          conf_password: \"\",\r\n        });\r\n        getUser();\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response.data;\r\n        if (error.type === \"password\") {\r\n          if (error.errors.conf_password) {\r\n            setResponse({\r\n              error: true,\r\n              message: error.errors.conf_password[0],\r\n            });\r\n          }\r\n          if (error.errors.new_password) {\r\n            setResponse({\r\n              error: true,\r\n              message: error.errors.new_password[0],\r\n            });\r\n          }\r\n          if (error.errors.password) {\r\n            setResponse({\r\n              error: true,\r\n              message: error.errors.password[0],\r\n            });\r\n          }\r\n        }\r\n        if (error.type === \"email\") {\r\n          setResponse({\r\n            error: true,\r\n            message: error.errors,\r\n          });\r\n        } else {\r\n          setResponse({\r\n            error: true,\r\n            message: error.errors,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    setResponse({});\r\n  };\r\n\r\n  return !isLoading ? (\r\n    <div className={classes.rowLast}>\r\n      <Row className={classes.customRow}>\r\n        <Column>\r\n          <div className={classes.rowC}>\r\n            <Gravatar\r\n              email={user.email}\r\n              size={100}\r\n              rating=\"pg\"\r\n              default=\"retro\"\r\n              className=\"CustomAvatar-image\"\r\n              protocol=\"https://\"\r\n              className={classes.avatar}\r\n            />\r\n            <span className={classes.name}>{user.name}</span>\r\n          </div>\r\n        </Column>\r\n      </Row>\r\n      <Row className={classes.rowLast}>\r\n        <Input type=\"hidden\" value=\"prayer\" />\r\n        <div>\r\n          <form\r\n            id=\"profile-form\"\r\n            className={classes.profile}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <h2>Update Profile</h2>\r\n            {response.error && <p>{response.message}</p>}\r\n            {!response.error && <p>{response.message}</p>}\r\n            <FormGroup>\r\n              <label>Full Name</label>\r\n              <input type=\"hidden\" value=\"something\" />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user.name}\r\n                onChange={handleInput}\r\n              />\r\n              <label>Email</label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"user-email\"\r\n                defaultValue={user.email}\r\n                onChange={handleInput}\r\n              />\r\n              <label>Current Password</label>\r\n              <Input\r\n                required\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                autoComplete=\"old-password\"\r\n                onChange={handleInput}\r\n              />\r\n              <label>New Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"new_password\"\r\n                autoComplete=\"new-password\"\r\n                value={values.new_password}\r\n                onChange={handleInput}\r\n              />\r\n              <label>Repeat Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"conf_password\"\r\n                autoComplete=\"conf-password\"\r\n                value={values.conf_password}\r\n                onChange={handleInput}\r\n              />\r\n            </FormGroup>\r\n          </form>\r\n        </div>\r\n      </Row>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n}\r\n\r\nexport default ProfileSettings;\r\n"]},"metadata":{},"sourceType":"module"}