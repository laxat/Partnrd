{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\SupportTickets\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { createUseStyles } from \"react-jss\";\nimport CreateButton from \"../../components/CreateButton\";\nimport SLUGS from \"../../resources/slugs\";\nimport TicketComponent from \"./TicketComponent\";\nimport { Row, Column } from \"simple-flexbox\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  buttonRow: {\n    \"@media (max-width: 768px)\": {\n      marginTop: 0\n    }\n  },\n  lastRow: {\n    marginTop: 30\n  },\n  tasks: {\n    flexGrow: 1,\n    marginTop: 0,\n    \"@media (max-width: 1024px)\": {\n      marginTop: 20\n    }\n  },\n  buttonStyle: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }\n});\nexport default function TicketDashboard() {\n  _s();\n\n  const {\n    push\n  } = useHistory();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState();\n  const classes = useStyles();\n  useEffect(() => {\n    getData();\n  }, []);\n  const token = sessionStorage.getItem(\"xrsf\");\n  const config = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const api = `${process.env.REACT_APP_API}/api/tickets`;\n\n  const getData = async () => {\n    setLoading(true);\n    await axios.get(api, config).then(res => {\n      console.log(res.data);\n      setData(res.data);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  return !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      horizontal: \"end\",\n      className: classes.buttonRow,\n      children: /*#__PURE__*/_jsxDEV(CreateButton, {\n        label: \"New Support Ticket\",\n        onClick: () => onClick(SLUGS.createSupportTicket)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      className: classes.lastRow,\n      children: /*#__PURE__*/_jsxDEV(TicketComponent, {\n        data: data,\n        containerStyles: classes.tasks,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TicketDashboard, \"4tAu/0876hEVOIpzcoVFKds10fQ=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = TicketDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketDashboard\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/SupportTickets/Dashboard.js"],"names":["React","useState","useEffect","axios","useHistory","createUseStyles","CreateButton","SLUGS","TicketComponent","Row","Column","CircularProgress","useStyles","buttonRow","marginTop","lastRow","tasks","flexGrow","buttonStyle","display","justifyContent","TicketDashboard","push","data","setData","loading","setLoading","classes","getData","token","sessionStorage","getItem","config","headers","api","process","env","REACT_APP_API","get","then","res","console","log","catch","err","onClick","createSupportTicket"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"; \r\nimport axios from \"axios\"; \r\nimport {useHistory} from \"react-router-dom\"; \r\nimport { createUseStyles } from \"react-jss\";\r\nimport CreateButton from \"../../components/CreateButton\";\r\nimport SLUGS from \"../../resources/slugs\";\r\nimport TicketComponent from \"./TicketComponent\";\r\nimport {Row, Column} from \"simple-flexbox\"; \r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    buttonRow: {\r\n      \"@media (max-width: 768px)\": {\r\n        marginTop: 0,\r\n      },\r\n    },\r\n    lastRow: {\r\n      marginTop: 30,\r\n    },\r\n    tasks: {\r\n      flexGrow: 1,\r\n      marginTop: 0,\r\n      \"@media (max-width: 1024px)\": {\r\n        marginTop: 20,\r\n      },\r\n    },\r\n    buttonStyle: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  });\r\n\r\nexport default function TicketDashboard() \r\n{\r\n    const {push} = useHistory();\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(); \r\n    const classes = useStyles(); \r\n\r\n    useEffect(() => {\r\n        getData(); \r\n    }, []); \r\n\r\n    const token = sessionStorage.getItem(\"xrsf\");\r\n    const config = {\r\n      headers: { 'Authorization': `Bearer ${token}` },\r\n    };\r\n\r\n    const api = `${process.env.REACT_APP_API}/api/tickets`\r\n\r\n    const getData = async () =>{\r\n        setLoading(true);\r\n        await axios\r\n        .get(api, config)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            setData(res.data); \r\n            setLoading(false);\r\n        }) \r\n        .catch((err) => {\r\n            setLoading(false); \r\n        }) \r\n    }\r\n\r\n    return(\r\n        !loading ?\r\n        <div>\r\n        <Row horizontal=\"end\" className={classes.buttonRow}>\r\n            <CreateButton\r\n            label=\"New Support Ticket\"\r\n            onClick={() => onClick(SLUGS.createSupportTicket)}\r\n            />\r\n        </Row>\r\n        <Column className={classes.lastRow}> \r\n            <TicketComponent\r\n                data={data}\r\n                containerStyles={classes.tasks}\r\n                loading={loading}\r\n            />\r\n        </Column>\r\n        </div>\r\n        :\r\n        <CircularProgress/>\r\n    ); \r\n\r\n}"]},"metadata":{},"sourceType":"module"}