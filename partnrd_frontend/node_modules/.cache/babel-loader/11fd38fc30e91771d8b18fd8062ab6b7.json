{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { Controller } from \"react-hook-form\";\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\nimport \"./test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharesTable = /*#__PURE__*/React.forwardRef(_c = _s(({\n  columns,\n  data,\n  methods\n}, ref) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  const [shareData, setShareData] = useState(data);\n\n  const handleInput = (i, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    let list = [...shareData];\n    list[i][name] = value;\n    setShareData(list);\n  };\n\n  const addShareRow = function () {\n    let l = shareData.length + 1;\n    const d = [...shareData];\n    const item = {\n      refNum: l,\n      shareName: \"\",\n      shareClass: \"Class A\",\n      shareType: \"Common\",\n      shareTotal: 0\n    };\n    d.shareinfo.push(item);\n    setShareData(d);\n  };\n\n  console.log(shareData.shareinfo); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: shareData.map((row, i) => {\n        //prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Controller, {\n              name: `shareInfo[${i}].shareID`,\n              control: methods.control,\n              defaultValue: i + 1,\n              as: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"text\",\n              name: `shareName`,\n              value: shareData[i].shareName,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"select\",\n              name: `shareClass`,\n              value: shareData[i].shareClass,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"select\",\n              name: `shareType`,\n              value: shareData[i].shareType,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Preferred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"number\",\n              name: `shareTotal`,\n              value: shareData[i].shareTotal,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addShareRow(),\n                children: \"Add Row \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), \" \", shareData.length !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const newData = [...shareData];\n                  newData.splice(i, 1);\n                  setShareData(newData);\n                },\n                children: \"Remove Row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}, \"D1I+rsqBh0K/lYhVc0mtSqPaLUg=\", false, function () {\n  return [useTable];\n}));\n_c2 = SharesTable;\nexport const FoundersTable = /*#__PURE__*/React.forwardRef(_c3 = _s2(({\n  columns,\n  data,\n  methods,\n  shareData,\n  inputList,\n  setInputList\n}, ref) => {\n  _s2();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  const handleInput = (e, i) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[i][name] = value;\n    setInputList(list);\n  };\n\n  const handleAddClick = (i, e) => {\n    e.preventDefault();\n    const list = [...inputList];\n    const lastIndex = inputList[i].length - 1;\n    list[i].push({\n      name: `shareinfo[${list[i][lastIndex].index + 1}]`,\n      index: list[i][lastIndex].index + 1\n    });\n    setInputList(list);\n  };\n\n  const handleRemoveClick = (i, e) => {\n    e.preventDefault();\n    const pos = [...inputList];\n    pos[i].pop();\n    setInputList(pos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: `founderInfo[${i}][personID]`,\n              control: methods.control,\n              defaultValue: i + 1,\n              as: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [inputList[i].map((x, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][refID]`,\n                      placeholder: \"Enter First Name\" //value={x.refID}\n                      ,\n                      onChange: e => handleInput(e, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][numHeld]`,\n                      placeholder: \"No. Shares held\",\n                      type: \"number\",\n                      onChange: e => handleInput(e, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: [shareData.length !== inputList[i].length && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleAddClick(i, e),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), inputList[i].length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleRemoveClick(i, e),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][fname]`,\n              placeholder: \"Full Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][preferredName]`,\n              placeholder: \"Preferred Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `founderInfo[${i}][role]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Investor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Corporation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][streetName]`,\n              placeholder: \"Street Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: `founderInfo[${i}][cityName]`,\n                placeholder: \"City\",\n                innerRef: methods.register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: `founderInfo[${i}][provinceName]`,\n                placeholder: \"Province\",\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB\",\n                  children: \"Alberta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"BC\",\n                  children: \"British Columbia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MB\",\n                  children: \"Manitoba\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NB\",\n                  children: \"New Brunswick\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NL\",\n                  children: \"Newfoundland and Labrador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NS\",\n                  children: \"Nova Scotia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ON\",\n                  children: \"Ontario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PE\",\n                  children: \"Prince Edward Island\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"QC\",\n                  children: \"Quebec\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SK\",\n                  children: \"Saskatchewan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NT\",\n                  children: \"Northwest Territories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NU\",\n                  children: \"Nunavut\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"YT\",\n                  children: \"Yukon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][postalCode]`,\n              placeholder: \"Postal Code\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n              name: `founderInfo[${i}][phone]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: `founderInfo[${i}][email]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `founderInfo[${i}][onBoard]`,\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][corpName]`,\n              placeholder: \"Enter Corp Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 7\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c4 = FoundersTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SharesTable$React.forwardRef\");\n$RefreshReg$(_c2, \"SharesTable\");\n$RefreshReg$(_c3, \"FoundersTable$React.forwardRef\");\n$RefreshReg$(_c4, \"FoundersTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/Table.js"],"names":["React","useState","useEffect","useTable","Controller","Input","Label","Button","Row","Col","SharesTable","forwardRef","columns","data","methods","ref","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","shareData","setShareData","handleInput","i","e","name","value","target","list","addShareRow","l","length","d","item","refNum","shareName","shareClass","shareType","shareTotal","shareinfo","push","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","control","register","newData","splice","FoundersTable","inputList","setInputList","handleAddClick","preventDefault","lastIndex","index","handleRemoveClick","pos","pop","getRowProps","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\r\nimport \"./test.css\"; \r\n\r\nexport const SharesTable = React.forwardRef(({\r\n  columns,\r\n  data,\r\n  methods\r\n  }, ref) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n  \r\n  const [shareData, setShareData] = useState(data)\r\n\r\n  const handleInput = (i, e) => {\r\n    \r\n    const { name, value } = e.target; \r\n    let list = [...shareData];\r\n    list[i][name] = value; \r\n    setShareData(list);\r\n  }\r\n\r\n   const addShareRow = function () {\r\n     let l = shareData.length + 1;\r\n     const d = [...shareData];\r\n\r\n     const item = {\r\n       refNum: l,\r\n       shareName: \"\",\r\n       shareClass: \"Class A\",\r\n       shareType: \"Common\",\r\n       shareTotal: 0,\r\n     };\r\n     d.shareinfo.push(item);\r\n     setShareData(d);\r\n  };\r\n\r\n  console.log(shareData.shareinfo); \r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {shareData.map((row, i) => {\r\n            //prepareRow(row);\r\n            return (\r\n              <tr key={i}>\r\n                <td>\r\n                  {\" \"}\r\n                  <Controller\r\n                    name={`shareInfo[${i}].shareID`}\r\n                    control={methods.control}\r\n                    defaultValue={i + 1}\r\n                    as={<p>{i + 1}</p>}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name={`shareName`}\r\n                    value={shareData[i].shareName}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {/* <Controller\r\n                    name={`shareInfo[${i}].shareClass`}\r\n                    control={methods.control}\r\n                    defaultValue={shareData[i].shareClass}\r\n                    as={ */}\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    name={`shareClass`}\r\n                    value={shareData[i].shareClass}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Class A</option>\r\n                    <option>Class B</option>\r\n                    <option>None</option>\r\n                  </Input>\r\n                  {/* }\r\n                  /> */}\r\n                </td>\r\n                <td>\r\n                  {/* <Controller\r\n                    name={`shareInfo[${i}].shareType`}\r\n                    control={methods.control}\r\n                    defaultValue={shareData[i].shareType}\r\n                    as={ */}\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    name={`shareType`}\r\n                    value={shareData[i].shareType}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Common</option>\r\n                    <option>Preferred</option>\r\n                  </Input>\r\n                  {/* }\r\n                  /> */}\r\n                </td>\r\n                <td>\r\n                  {/* <Controller\r\n                    name={`shareInfo[${i}].shareTotal`}\r\n                    control={methods.control}\r\n                    defaultValue={shareData[i].shareTotal}\r\n                    as={ */}\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name={`shareTotal`}\r\n                    value={shareData[i].shareTotal}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                  {/* //   }\r\n                  // /> */}\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Button onClick={() => addShareRow()}>Add Row </Button>{\" \"}\r\n                    {shareData.length !== 1 && (\r\n                      <Button\r\n                        onClick={() => {\r\n                          const newData = [...shareData];\r\n                          newData.splice(i, 1);\r\n                          setShareData(newData);\r\n                        }}\r\n                      >\r\n                        Remove Row\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nexport const FoundersTable = React.forwardRef(\r\n  ({ columns, data, methods, shareData, inputList, setInputList }, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n        \r\n      });\r\n    \r\n    const handleInput = (e, i) => {\r\n      const { name, value } = e.target;\r\n      const list = [...inputList];\r\n      list[i][name] = value;\r\n      setInputList(list);\r\n    };\r\n    \r\n    const handleAddClick = (i, e) => {\r\n      e.preventDefault()\r\n      const list = [...inputList];\r\n      const lastIndex = inputList[i].length - 1;\r\n      list[i].push({\r\n        name: `shareinfo[${list[i][lastIndex].index + 1}]`,\r\n        index: list[i][lastIndex].index + 1,\r\n      });\r\n      setInputList(list);\r\n    };\r\n\r\n    const handleRemoveClick = (i, e) => {\r\n      e.preventDefault(); \r\n      const pos = [...inputList];\r\n      pos[i].pop();\r\n      setInputList(pos);\r\n    };\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>\r\n                  <Controller\r\n                    name={`founderInfo[${i}][personID]`}\r\n                    control={methods.control}\r\n                    defaultValue={i+1}\r\n                    as={<p>\r\n                      {i + 1}\r\n                    </p>}\r\n                  />\r\n                </td>\r\n                <td colSpan=\"2\">\r\n                  {inputList[i].map((x, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Row>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][refID]`}\r\n                              placeholder=\"Enter First Name\"\r\n                              //value={x.refID}\r\n                              onChange={(e) => handleInput(e, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][numHeld]`}\r\n                              placeholder=\"No. Shares held\"\r\n                              type=\"number\"\r\n                              onChange={(e) => handleInput(e, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div className=\"btn-box\">\r\n                    {shareData.length !== inputList[i].length && (\r\n                      <button\r\n                        className=\"mr10\"\r\n                        onClick={(e) => handleAddClick(i, e)}>\r\n                        Add\r\n                      </button>\r\n                    )}\r\n                    {inputList[i].length !== 1 && (\r\n                      <button\r\n                        className=\"mr10\"\r\n                        onClick={(e) => handleRemoveClick(i, e)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][fname]`}\r\n                    placeholder=\"Full Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][preferredName]`}\r\n                    placeholder=\"Preferred Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`founderInfo[${i}][role]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Founder</option>\r\n                    <option>Investor</option>\r\n                    <option>Corporation</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][streetName]`}\r\n                    placeholder=\"Street Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name={`founderInfo[${i}][cityName]`}\r\n                      placeholder=\"City\"\r\n                      innerRef={methods.register}\r\n                    />\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name={`founderInfo[${i}][provinceName]`}\r\n                      placeholder=\"Province\"\r\n                      innerRef={methods.register}\r\n                    >\r\n                      <option value=\"AB\">Alberta</option>\r\n                      <option value=\"BC\">British Columbia</option>\r\n                      <option value=\"MB\">Manitoba</option>\r\n                      <option value=\"NB\">New Brunswick</option>\r\n                      <option value=\"NL\">Newfoundland and Labrador</option>\r\n                      <option value=\"NS\">Nova Scotia</option>\r\n                      <option value=\"ON\">Ontario</option>\r\n                      <option value=\"PE\">Prince Edward Island</option>\r\n                      <option value=\"QC\">Quebec</option>\r\n                      <option value=\"SK\">Saskatchewan</option>\r\n                      <option value=\"NT\">Northwest Territories</option>\r\n                      <option value=\"NU\">Nunavut</option>\r\n                      <option value=\"YT\">Yukon</option>\r\n                    </Input>\r\n                  </span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][postalCode]`}\r\n                    placeholder=\"Postal Code\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                    name={`founderInfo[${i}][phone]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name={`founderInfo[${i}][email]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name={`founderInfo[${i}][onBoard]`}\r\n                    ref={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][corpName]`}\r\n                    placeholder=\"Enter Corp Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}