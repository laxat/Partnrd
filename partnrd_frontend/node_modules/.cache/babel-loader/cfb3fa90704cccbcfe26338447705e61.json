{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\Input.js\";\nimport React from \"react\";\nimport { Input } from \"reactstrap\";\nimport { useController, useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ({\n  control,\n  name\n}) {\n  const {\n    field: {\n      ref,\n      ...inputProps\n    },\n    fieldState: {\n      invalid,\n      isTouched,\n      isDirty\n    },\n    formState: {\n      touchedFields,\n      dirtyFields\n    }\n  } = useController({\n    name,\n    control,\n    rules: {\n      required: true\n    },\n    defaultValue: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Input, { ...inputProps,\n    inputref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/Input.js"],"names":["React","Input","useController","useForm","control","name","field","ref","inputProps","fieldState","invalid","isTouched","isDirty","formState","touchedFields","dirtyFields","rules","required","defaultValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,iBAAvC;;AAEA,eAAe,UAAU;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAV,EAA4B;AACzC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,GAAF;AAAO,SAAGC;AAAV,KADH;AAEJC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,KAFR;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB;AAHP,MAIFb,aAAa,CAAC;AAChBG,IAAAA,IADgB;AAEhBD,IAAAA,OAFgB;AAGhBY,IAAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHS;AAIhBC,IAAAA,YAAY,EAAE;AAJE,GAAD,CAJjB;AAWA,sBAAO,QAAC,KAAD,OAAWV,UAAX;AAAuB,IAAA,QAAQ,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport { Input } from \"reactstrap\"; \r\nimport { useController, useForm } from \"react-hook-form\";\r\n\r\nexport default function ({ control, name}) {\r\n  const {\r\n    field: { ref, ...inputProps },\r\n    fieldState: { invalid, isTouched, isDirty },\r\n    formState: { touchedFields, dirtyFields },\r\n  } = useController({\r\n    name,\r\n    control,\r\n    rules: { required: true },\r\n    defaultValue: \"\",\r\n  });\r\n\r\n  return <Input {...inputProps} inputref={ref} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}