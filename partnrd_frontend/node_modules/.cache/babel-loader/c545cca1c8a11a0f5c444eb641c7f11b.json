{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useSignup = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    type: \"\",\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(\"http://127.0.0.1:8000/api/register\", data).then(res => {\n        const success = {\n          state: true,\n          message: \"Email Verification email sent\"\n        };\n        setSuccess(success);\n      }).catch(err => {\n        const error = err.response.data;\n        const s = Object.values(error.errors);\n        s.join(' ');\n        const response = {\n          error: true,\n          message: s\n        };\n        console.log(response);\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    }\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s(useSignup, \"VPJwJiufk4T9Ei3Fh8NvjJ9M0G8=\");\n\nexport default useSignup;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/Register/useSignup.js"],"names":["useState","useEffect","axios","useSignup","validate","values","setValues","name","email","password","password2","response","setResponse","error","type","message","errors","setErrors","isSubmitting","setIsSubmitting","success","setSuccess","state","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","catch","err","s","join","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACrCO,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,SAAS,EAAE;AAJ0B,GAAD,CAApC;AAOF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvCa,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;AAMC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAED,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AACrCsB,IAAAA,KAAK,EAAE,KAD8B;AAErCP,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,QAAMQ,oBAAoB,GAAIC,CAAD,IAAO;AAClC,UAAM;AAAEjB,MAAAA,IAAF;AAAQkB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACApB,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAER,OAACE,IAAD,GAAOkB;AAFC,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAX,IAAAA,SAAS,CAACb,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAc,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpD,YAAMc,IAAI,GAAG3B,MAAb;AACAH,MAAAA,KAAK,CACF+B,IADH,CACQ,oCADR,EAC8CD,IAD9C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACX,cAAMf,OAAO,GAAG;AACdE,UAAAA,KAAK,EAAE,IADO;AAEdP,UAAAA,OAAO,EAAE;AAFK,SAAhB;AAIAM,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH,OARH,EASGgB,KATH,CASUC,GAAD,IAAS;AACZ,cAAMxB,KAAK,GAAGwB,GAAG,CAAC1B,QAAJ,CAAaqB,IAA3B;AACA,cAAMM,CAAC,GAAGT,MAAM,CAACxB,MAAP,CAAcQ,KAAK,CAACG,MAApB,CAAV;AACAsB,QAAAA,CAAC,CAACC,IAAF,CAAO,GAAP;AACA,cAAM5B,QAAQ,GAAG;AACbE,UAAAA,KAAK,EAAE,IADM;AAEbE,UAAAA,OAAO,EAAEuB;AAFI,SAAjB;AAKFE,QAAAA,OAAO,CAACC,GAAR,CAAY9B,QAAZ;AACEC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAQ,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OArBH;AAsBD;AACF,GA1BQ,EA0BN,CAACH,MAAD,CA1BM,CAAT;AA4BA,SAAO;AACLO,IAAAA,oBADK;AAELlB,IAAAA,MAFK;AAGLsB,IAAAA,YAHK;AAILX,IAAAA,MAJK;AAKLL,IAAAA,QALK;AAMLS,IAAAA;AANK,GAAP;AAQD,CAzED;;GAAMjB,S;;AA2EN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useSignup = (validate) => {\r\n    const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n    \r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    type: \"\", \r\n    message: \"\",\r\n  });\r\n\r\n   const [errors, setErrors] = useState({});\r\n    \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n        ...values,\r\n      [name]:value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = values;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/register\", data)\r\n        .then((res) => {\r\n            const success = {\r\n              state: true,\r\n              message: \"Email Verification email sent\",\r\n            };\r\n            setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response.data;\r\n            const s = Object.values(error.errors);\r\n            s.join(' '); \r\n            const response = {\r\n                error: true,\r\n                message: s\r\n\r\n          };\r\n          console.log(response);\r\n            setResponse(response);\r\n            setIsSubmitting(false);\r\n        });\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleRegisterChange,\r\n    values,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success\r\n  };\r\n};\r\n\r\nexport default useSignup;\r\n"]},"metadata":{},"sourceType":"module"}