{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useEmail = validate => {\n  _s();\n\n  const [fields, setValues] = useState({\n    email: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleEmailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(\"http://127.0.0.1:8000/api/password/email\", data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        setSuccess(success);\n      }).catch(err => {\n        let errors = err.response.data.errors;\n        const response = {\n          error: true,\n          message: errors\n        };\n        console.log(errors); //setResponse(response);\n\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleEmailChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s(useEmail, \"sLn47ELPERy1aDEWSWGM9zOuDq8=\");\n\nexport default useEmail;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/pwd/useEmail.js"],"names":["useState","useEffect","axios","useEmail","validate","fields","setValues","email","errors","setErrors","isSubmitting","setIsSubmitting","response","setResponse","error","message","success","setSuccess","state","handleEmailChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","catch","err","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,KAAK,EAAE;AAD4B,GAAD,CAApC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAAxC;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC;AACrCkB,IAAAA,KAAK,EAAE,KAD8B;AAErCH,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAjB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACgB,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAhB,IAAAA,SAAS,CAACL,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAM,IAAAA,eAAe,CAAC,IAAD,CAAf;AAED,GALD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBoB,MAApB,KAA+B,CAA/B,IAAoClB,YAAxC,EAAsD;AACpD,YAAMmB,IAAI,GAAGxB,MAAb;AACAH,MAAAA,KAAK,CACF4B,IADH,CACQ,0CADR,EACoDD,IADpD,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,cAAMhB,OAAO,GAAG;AACdE,UAAAA,KAAK,EAAE,IADO;AAEdH,UAAAA,OAAO,EAAEiB,GAAG,CAACjB;AAFC,SAAhB;AAIAE,QAAAA,UAAU,CAACD,OAAD,CAAV;AACD,OARH,EASGiB,KATH,CASUC,GAAD,IAAS;AACd,YAAI1B,MAAM,GAAG0B,GAAG,CAACtB,QAAJ,CAAaiB,IAAb,CAAkBrB,MAA/B;AAEA,cAAMI,QAAQ,GAAG;AACfE,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAEP;AAFM,SAAjB;AAKA2B,QAAAA,OAAO,CAACC,GAAR,CAAY5B,MAAZ,EARc,CASd;;AACAG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OApBH;AAqBD,KAxBa,CAyBd;;AACD,GA1BQ,EA0BN,CAACH,MAAD,CA1BM,CAAT;AA4BA,SAAO;AACLW,IAAAA,iBADK;AAELd,IAAAA,MAFK;AAGLmB,IAAAA,YAHK;AAILhB,IAAAA,MAJK;AAKLI,IAAAA,QALK;AAMLI,IAAAA;AANK,GAAP;AASD,CAtED;;GAAMb,Q;;AAwEN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useEmail = (validate) => {\r\n\r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n    \r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(fields));\r\n    setIsSubmitting(true);\r\n      \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/password/email\", data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: res.message,\r\n          };\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          let errors = err.response.data.errors;\r\n      \r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n          \r\n          console.log(errors)\r\n          //setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleEmailChange,\r\n    fields,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success\r\n\r\n  };\r\n}\r\n\r\nexport default useEmail;\r\n"]},"metadata":{},"sourceType":"module"}