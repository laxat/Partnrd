{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\ShareAgreement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useForm, useController, Controller } from \"react-hook-form\";\nimport { Input, FormGroup, Label, Button } from \"reactstrap\";\nimport { Table1 } from \"./Table\";\nimport { NiceInput } from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet list = [];\nconst name = \"shareinfo\";\n\nfunction ShareAgreement() {\n  _s();\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    setValue,\n    control\n  } = useForm();\n  const [shareInfo, setShareInfo] = useState([]);\n  const [founderInfo, setFounderInfo] = useState([]);\n  const [corpInfo, setCorpInfo] = useState([]);\n  const onSubmit = useEffect(data => {\n    console.log(data, null, 2);\n  }); // useCallback(() => {\n  // const name = register(\"shareinfo\")\n  //     register({ name: \"founderinfo\"})\n  // }, [register])\n\n  const addShareRow = function () {\n    let l = shareInfo.length + 1;\n    const d = [...shareInfo];\n    const item = {\n      refNum: l,\n      shareName: \"\",\n      shareClass: \"\",\n      shareType: \"\",\n      shareTotal: 0\n    };\n    list.push(item.refNum);\n    d.push(item);\n    setShareInfo(d);\n  };\n\n  const removeShareRow = function () {\n    let l = [...shareInfo];\n    setValue(`shareInfo[${shareInfo.length - 1}]`, \"\"); //l.splice(-1, 1);\n\n    l.pop();\n\n    if (list[0] != null) {\n      list.pop();\n    } //reset(`shareInfo[${-1}][shareName]`);\n    //setValue(`shareinfo[${shareInfo.length}]`, l);\n    //unregister(`shareinfo[${-1}][shareName]`);\n\n\n    setShareInfo(l);\n  };\n\n  const shareColumns = [{\n    Header: \"Reference Number\",\n    accessor: \"refNum\"\n  }, {\n    Header: \"Share Name\",\n    accessor: \"shareName\",\n    Cell: ({\n      row: {\n        index\n      }\n    }) => /*#__PURE__*/_jsxDEV(NiceInput, {\n      type: \"text\",\n      name: `shareinfo[${index}][shareName]`,\n      control: control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Share Type\",\n    columns: [{\n      Header: \"Class\",\n      accessor: \"shareClass\",\n      Cell: ({\n        row: {\n          index\n        }\n      }) => /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: `shareinfo[${index}][shareClass]` // innerRef={register}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Class A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Class B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)\n    }, {\n      Header: \"Type\",\n      accessor: \"shareType\",\n      Cell: ({\n        row: {\n          index\n        }\n      }) => /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: `shareinfo[${index}][shareType]` // innerRef={register}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Preferred\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this)\n    }]\n  }, {\n    Header: \"Total Shares\",\n    accessor: \"shareTotal\",\n    Cell: ({\n      row: {\n        index\n      }\n    }) => /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      name: `shareinfo[${index}][shareTotal]` // innerRef={register}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this)\n  }];\n\n  const addFounderRow = function () {\n    let l = founderInfo.length + 1;\n    const d = [...founderInfo];\n    const item = {\n      fname: \"\",\n      refId: \"\",\n      numHeld: 0,\n      streetName: \"\",\n      cityName: \"\",\n      provinceName: \"\",\n      postalCode: \"\",\n      phone: \"\",\n      email: \"\"\n    };\n    d.push(item);\n    setValue(\"founderinfo\", d);\n    setFounderInfo(d);\n  }; // const founderColumns = [\n  //   {\n  //     Header: \"Full Name\",\n  //     accessor: \"fname\",\n  //     Cell: ({ row: { index } }) => (\n  //       <NiceInput\n  //         type=\"text\"\n  //         control={control}\n  //         name={`founderinfo[${index}][fname]`}\n  //         innerRef={register}\n  //       />\n  //     ),\n  //   },\n  //   {\n  //     Header: \"Shares Held\",\n  //     columns: [\n  //       {\n  //         Header: \"Reference #\",\n  //         accessor: \"refID\",\n  //       },\n  //       {\n  //         Header: \"# Held\",\n  //         accessor: \"numHeld\",\n  //         Cell: ({ row: { index } }) => (\n  //           <Input\n  //             type=\"number\"\n  //             name={`founderinfo[${index}][numHeld]`}\n  //             innerRef={register}\n  //           />\n  //         ),\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     Header: \"Address\",\n  //     columns: [\n  //       {\n  //         Header: \"Street Name\",\n  //         accessor: \"streetName\",\n  //         Cell: ({ row: { index } }) => (\n  //           <Input\n  //             type=\"text\"\n  //             name={`founderinfo[${index}][streetName]`}\n  //             innerRef={register}\n  //           />\n  //         ),\n  //       },\n  //       {\n  //         Header: \"City\",\n  //         accessor: \"cityName\",\n  //         Cell: ({ row: { index } }) => (\n  //           <Input\n  //             type=\"text\"\n  //             name={`founderinfo[${index}][cityName]`}\n  //             innerRef={register}\n  //           />\n  //         ),\n  //       },\n  //       {\n  //         Header: \"Province\",\n  //         accessor: \"provinceName\",\n  //         Cell: ({ row: { index } }) => (\n  //           <Input\n  //             type=\"select\"\n  //             name={`founderinfo[${index}][provinceName]`}\n  //             innerRef={register}\n  //           >\n  //             <option value=\"AB\">Alberta</option>\n  //             <option value=\"BC\">British Columbia</option>\n  //             <option value=\"MB\">Manitoba</option>\n  //             <option value=\"NB\">New Brunswick</option>\n  //             <option value=\"NL\">Newfoundland and Labrador</option>\n  //             <option value=\"NS\">Nova Scotia</option>\n  //             <option value=\"ON\">Ontario</option>\n  //             <option value=\"PE\">Prince Edward Island</option>\n  //             <option value=\"QC\">Quebec</option>\n  //             <option value=\"SK\">Saskatchewan</option>\n  //             <option value=\"NT\">Northwest Territories</option>\n  //             <option value=\"NU\">Nunavut</option>\n  //             <option value=\"YT\">Yukon</option>\n  //           </Input>\n  //         ),\n  //       },\n  //       {\n  //         Header: \"Postal Code\",\n  //         accessor: \"postalCode\",\n  //         Cell: ({ row: { index } }) => (\n  //           <Input\n  //             type=\"text\"\n  //             name={`founderinfo[${index}][postalCode]`}\n  //             innerRef={register}\n  //           />\n  //         ),\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     Header: \"Phone Number\",\n  //     accessor: \"phone\",\n  //     Cell: ({ row: { index } }) => (\n  //       <Input\n  //         type=\"tel\"\n  //         pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n  //         name={`founderinfo[${index}][phone]`}\n  //         innerRef={register}\n  //       />\n  //     ),\n  //   },\n  //   {\n  //     Header: \"Email(Optional)\",\n  //     accessor: \"email\",\n  //     Cell: ({ row: { index } }) => (\n  //       <Input\n  //         type=\"email\"\n  //         name={`founderinfo[${index}][email]`}\n  //         innerRef={register}\n  //       />\n  //     ),\n  //   },\n  // ];\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"What is your company\\u2019s Name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"companyName\",\n        inputRef: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"When was your company incorporated?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        name: \"companyDate\",\n        inputRef: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"table1\",\n        children: \"What Does Your Company Have?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table1, {\n        columns: shareColumns,\n        data: shareInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addShareRow,\n        children: \"Add Row \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: removeShareRow,\n        children: \"Remove Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ShareAgreement, \"OJ/47ogjzcC+XyIfazvsagzEz/w=\", false, function () {\n  return [useForm];\n});\n\n_c = ShareAgreement;\nexport default ShareAgreement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareAgreement\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/ShareAgreement.js"],"names":["React","useState","useEffect","useCallback","useForm","useController","Controller","Input","FormGroup","Label","Button","Table1","NiceInput","list","name","ShareAgreement","register","reset","handleSubmit","setValue","control","shareInfo","setShareInfo","founderInfo","setFounderInfo","corpInfo","setCorpInfo","onSubmit","data","console","log","addShareRow","l","length","d","item","refNum","shareName","shareClass","shareType","shareTotal","push","removeShareRow","pop","shareColumns","Header","accessor","Cell","row","index","columns","addFounderRow","fname","refId","numHeld","streetName","cityName","provinceName","postalCode","phone","email"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport { useForm, useController, Controller } from \"react-hook-form\";\r\nimport {\r\n    Input, \r\n    FormGroup,\r\n    Label,\r\n    Button\r\n} from \"reactstrap\";\r\nimport { Table1 } from \"./Table\";\r\nimport { NiceInput } from \"./Input\"; \r\n \r\nlet list = [];\r\nconst name = \"shareinfo\";\r\n\r\nfunction ShareAgreement() {\r\n\r\n    const {\r\n      register,\r\n      reset,\r\n      handleSubmit,\r\n      setValue,\r\n      control,\r\n    } = useForm();\r\n    const [shareInfo, setShareInfo] = useState([]);\r\n    const [founderInfo, setFounderInfo] = useState([]);\r\n    const [corpInfo, setCorpInfo] = useState([]); \r\n    const onSubmit = useEffect((data) => {\r\n        console.log(data, null, 2);\r\n    }); \r\n    \r\n    // useCallback(() => {\r\n    // const name = register(\"shareinfo\")\r\n    //     register({ name: \"founderinfo\"})\r\n    // }, [register])\r\n    \r\n    const addShareRow = function () {\r\n        let l = shareInfo.length + 1;\r\n        const d = [...shareInfo];\r\n\r\n\r\n        const item = {\r\n            refNum: l,\r\n            shareName: \"\",\r\n            shareClass: \"\",\r\n            shareType: \"\",\r\n            shareTotal: 0,\r\n        };\r\n        list.push(item.refNum);\r\n        d.push(item);\r\n        setShareInfo(d);\r\n        \r\n    }\r\n\r\n    const removeShareRow = function(){\r\n        let l = [...shareInfo];\r\n        setValue(`shareInfo[${shareInfo.length - 1}]`, \"\");\r\n        //l.splice(-1, 1);\r\n        l.pop();\r\n        \r\n        if (list[0] != null) {\r\n            list.pop();\r\n        }\r\n        //reset(`shareInfo[${-1}][shareName]`);\r\n        //setValue(`shareinfo[${shareInfo.length}]`, l);\r\n        //unregister(`shareinfo[${-1}][shareName]`);\r\n        setShareInfo(l);\r\n            \r\n        };\r\n    \r\n    const shareColumns = [\r\n      {\r\n        Header: \"Reference Number\",\r\n        accessor: \"refNum\",\r\n      },\r\n\r\n      {\r\n        Header: \"Share Name\",\r\n        accessor: \"shareName\",\r\n        Cell: ({ row: { index } }) => (\r\n          <NiceInput\r\n            type=\"text\"\r\n            name={`shareinfo[${index}][shareName]`}\r\n            control={control}\r\n          />\r\n        ),\r\n      },\r\n\r\n      {\r\n        Header: \"Share Type\",\r\n        columns: [\r\n          {\r\n            Header: \"Class\",\r\n            accessor: \"shareClass\",\r\n            Cell: ({ row: { index } }) => (\r\n              <Input\r\n                type=\"select\"\r\n                name={`shareinfo[${index}][shareClass]`}\r\n                // innerRef={register}\r\n              >\r\n                <option>Class A</option>\r\n                <option>Class B</option>\r\n                <option>None</option>\r\n              </Input>\r\n            ),\r\n          },\r\n          {\r\n            Header: \"Type\",\r\n            accessor: \"shareType\",\r\n            Cell: ({ row: { index } }) => (\r\n              <Input\r\n                type=\"select\"\r\n                name={`shareinfo[${index}][shareType]`}\r\n                // innerRef={register}\r\n              >\r\n                <option>Common</option>\r\n                <option>Preferred</option>\r\n              </Input>\r\n            ),\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        Header: \"Total Shares\",\r\n        accessor: \"shareTotal\",\r\n        Cell: ({ row: { index } }) => (\r\n          <Input\r\n            type=\"number\"\r\n            name={`shareinfo[${index}][shareTotal]`}\r\n            // innerRef={register}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const addFounderRow = function () {\r\n        let l = founderInfo.length + 1;\r\n        const d = [...founderInfo];\r\n\r\n        const item = {\r\n        fname: \"\",\r\n        refId: \"\",\r\n        numHeld: 0,\r\n        streetName: \"\",\r\n        cityName: \"\",\r\n        provinceName: \"\",\r\n        postalCode: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        };\r\n        d.push(item);\r\n        setValue(\"founderinfo\", d);\r\n        setFounderInfo(d);\r\n    };\r\n\r\n    // const founderColumns = [\r\n    //   {\r\n    //     Header: \"Full Name\",\r\n    //     accessor: \"fname\",\r\n    //     Cell: ({ row: { index } }) => (\r\n    //       <NiceInput\r\n    //         type=\"text\"\r\n    //         control={control}\r\n    //         name={`founderinfo[${index}][fname]`}\r\n    //         innerRef={register}\r\n    //       />\r\n    //     ),\r\n    //   },\r\n\r\n    //   {\r\n    //     Header: \"Shares Held\",\r\n    //     columns: [\r\n    //       {\r\n    //         Header: \"Reference #\",\r\n    //         accessor: \"refID\",\r\n    //       },\r\n\r\n    //       {\r\n    //         Header: \"# Held\",\r\n    //         accessor: \"numHeld\",\r\n    //         Cell: ({ row: { index } }) => (\r\n    //           <Input\r\n    //             type=\"number\"\r\n    //             name={`founderinfo[${index}][numHeld]`}\r\n    //             innerRef={register}\r\n    //           />\r\n    //         ),\r\n    //       },\r\n    //     ],\r\n    //   },\r\n\r\n    //   {\r\n    //     Header: \"Address\",\r\n    //     columns: [\r\n    //       {\r\n    //         Header: \"Street Name\",\r\n    //         accessor: \"streetName\",\r\n    //         Cell: ({ row: { index } }) => (\r\n    //           <Input\r\n    //             type=\"text\"\r\n    //             name={`founderinfo[${index}][streetName]`}\r\n    //             innerRef={register}\r\n    //           />\r\n    //         ),\r\n    //       },\r\n    //       {\r\n    //         Header: \"City\",\r\n    //         accessor: \"cityName\",\r\n    //         Cell: ({ row: { index } }) => (\r\n    //           <Input\r\n    //             type=\"text\"\r\n    //             name={`founderinfo[${index}][cityName]`}\r\n    //             innerRef={register}\r\n    //           />\r\n    //         ),\r\n    //       },\r\n    //       {\r\n    //         Header: \"Province\",\r\n    //         accessor: \"provinceName\",\r\n    //         Cell: ({ row: { index } }) => (\r\n    //           <Input\r\n    //             type=\"select\"\r\n    //             name={`founderinfo[${index}][provinceName]`}\r\n    //             innerRef={register}\r\n    //           >\r\n    //             <option value=\"AB\">Alberta</option>\r\n    //             <option value=\"BC\">British Columbia</option>\r\n    //             <option value=\"MB\">Manitoba</option>\r\n    //             <option value=\"NB\">New Brunswick</option>\r\n    //             <option value=\"NL\">Newfoundland and Labrador</option>\r\n    //             <option value=\"NS\">Nova Scotia</option>\r\n    //             <option value=\"ON\">Ontario</option>\r\n    //             <option value=\"PE\">Prince Edward Island</option>\r\n    //             <option value=\"QC\">Quebec</option>\r\n    //             <option value=\"SK\">Saskatchewan</option>\r\n    //             <option value=\"NT\">Northwest Territories</option>\r\n    //             <option value=\"NU\">Nunavut</option>\r\n    //             <option value=\"YT\">Yukon</option>\r\n    //           </Input>\r\n    //         ),\r\n    //       },\r\n    //       {\r\n    //         Header: \"Postal Code\",\r\n    //         accessor: \"postalCode\",\r\n    //         Cell: ({ row: { index } }) => (\r\n    //           <Input\r\n    //             type=\"text\"\r\n    //             name={`founderinfo[${index}][postalCode]`}\r\n    //             innerRef={register}\r\n    //           />\r\n    //         ),\r\n    //       },\r\n    //     ],\r\n    //   },\r\n\r\n    //   {\r\n    //     Header: \"Phone Number\",\r\n    //     accessor: \"phone\",\r\n    //     Cell: ({ row: { index } }) => (\r\n    //       <Input\r\n    //         type=\"tel\"\r\n    //         pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n    //         name={`founderinfo[${index}][phone]`}\r\n    //         innerRef={register}\r\n    //       />\r\n    //     ),\r\n    //   },\r\n\r\n    //   {\r\n    //     Header: \"Email(Optional)\",\r\n    //     accessor: \"email\",\r\n    //     Cell: ({ row: { index } }) => (\r\n    //       <Input\r\n    //         type=\"email\"\r\n    //         name={`founderinfo[${index}][email]`}\r\n    //         innerRef={register}\r\n    //       />\r\n    //     ),\r\n    //   },\r\n    // ];\r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup>\r\n          <label>What is your company’s Name?</label>\r\n          <Input type=\"text\" name=\"companyName\" inputRef={register} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <label>When was your company incorporated?</label>\r\n          <Input type=\"date\" name=\"companyDate\" inputRef={register} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"table1\">What Does Your Company Have?</Label>\r\n          <Table1 columns={shareColumns} data={shareInfo} />\r\n          <Button onClick={addShareRow}>Add Row </Button>{\" \"}\r\n          <Button onClick={removeShareRow}>Remove Row</Button>\r\n        </FormGroup>\r\n        {/* <FormGroup>\r\n          <Label for=\"table2\">Who are the founders?</Label>\r\n          <Table1 columns={founderColumns} data={founderInfo} />\r\n          <Button onClick={addFounderRow}>Add Row </Button>{\" \"}\r\n          <Button onClick={removeShareRow}>Remove Row</Button>\r\n        </FormGroup> */}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default ShareAgreement;"]},"metadata":{},"sourceType":"module"}