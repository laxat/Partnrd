{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst getToken = validate => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"token\")) {\n    return params.get(\"token\");\n  }\n\n  return \"\";\n};\n\nconst getUserId = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"id\")) {\n    return params.get(\"id\");\n  }\n\n  return \"\";\n};\n\nconst usePasswordReset = () => {\n  _s();\n\n  const [fields, setValues] = useState({\n    id: getUserId(),\n    token: getToken(),\n    password: \"\",\n    password2: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(\"http://127.0.0.1:8000/api/password/email\", data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        setSuccess(success);\n      }).catch(err => {\n        let errors = err.response.data.errors;\n        const response = {\n          error: true,\n          message: errors\n        }; //console.log(errors)\n\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s(usePasswordReset, \"jFRn5gUKv2kdukqvqOvVyJcPWQM=\");\n\nexport default usePasswordReset;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/pwd/usePasswordReset.js"],"names":["useState","useEffect","axios","getToken","validate","params","URLSearchParams","window","location","search","has","get","getUserId","usePasswordReset","fields","setValues","id","token","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","response","setResponse","error","message","success","setSuccess","state","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","catch","err"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst getToken = (validate) => {\r\n   const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"token\")) {\r\n    return params.get(\"token\");\r\n  }\r\n  return \"\";\r\n};   \r\n\r\nconst getUserId = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"id\")) {\r\n    return params.get(\"id\");\r\n  }\r\n  return \"\";\r\n};  \r\n\r\nconst usePasswordReset = () => {\r\n    const [fields, setValues] = useState({\r\n      id: getUserId(),\r\n      token: getToken(), \r\n      password: \"\",\r\n      password2: \"\"   \r\n    });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);  \r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n    \r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n    \r\nconst handleChange = (e) => {\r\n    \r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n        [name]: value,\r\n      \r\n    });\r\n\r\n\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n       error: false,\r\n       message: errors,\r\n     };\r\n     setResponse(response);\r\n     setErrors(validate(fields));\r\n     setIsSubmitting(true);\r\n  };\r\n\r\n   useEffect(() => {\r\n     if (Object.keys(errors).length === 0 && isSubmitting) {\r\n       const data = fields;\r\n       axios\r\n         .post(\"http://127.0.0.1:8000/api/password/email\", data)\r\n         .then((res) => {\r\n           const success = {\r\n             state: true,\r\n             message: res.message,\r\n           };\r\n           setSuccess(success);\r\n         })\r\n         .catch((err) => {\r\n           let errors = err.response.data.errors;\r\n\r\n           const response = {\r\n             error: true,\r\n             message: errors,\r\n           };\r\n\r\n           //console.log(errors)\r\n           setResponse(response);\r\n           setIsSubmitting(false);\r\n         });\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [errors]);\r\n\r\n    return {\r\n        handleChange,\r\n        fields,\r\n        handleSubmit,\r\n        errors,\r\n        response,\r\n        success\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default usePasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}