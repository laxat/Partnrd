{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\components\\\\Sidebar\\\\MenuComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTheme } from \"react-jss\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getMenuStyles = ({\n  theme\n}) => ({\n  bmBurgerButton: {\n    position: \"absolute\",\n    width: 26,\n    height: 20,\n    left: 30,\n    top: 40,\n    zIndex: 19\n  },\n  bmBurgerBars: {\n    background: theme.color.grey\n  },\n  bmBurgerBarsHover: {\n    background: theme.color.grey\n  },\n  bmCrossButton: {\n    display: \"none\"\n  },\n  bmCross: {\n    background: theme.color.grayishBlue3\n  },\n  bmMenuWrap: {\n    position: \"fixed\",\n    height: \"100%\",\n    width: 200,\n    zIndex: 30\n  },\n  bmMenu: {\n    background: theme.color.white,\n    boxShadow: \"1px 0 3px rgb(0 0 0 / 5%), 1px 0 0 rgb(0 0 0 / 10%)\"\n  },\n  bmItem: {\n    outline: \"none\",\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  },\n  bmMorphShape: {\n    fill: theme.color.veryDarkGrayishBlue\n  },\n  bmOverlay: {\n    background: \"rgba(0, 0, 0, 0.3)\",\n    zIndex: 20\n  }\n});\n\nfunction MenuComponent({\n  children,\n  isMobile\n}) {\n  _s();\n\n  const theme = useTheme();\n  const menuStyles = getMenuStyles({\n    theme\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    isOpen: !isMobile || isOpen,\n    noOverlay: !isMobile,\n    disableCloseOnEsc: true,\n    styles: menuStyles,\n    onStateChange: state => setIsOpen(state.isOpen),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuComponent, \"flmWDEfaJ/qOwBw3QdZqTlXnx38=\", false, function () {\n  return [useTheme];\n});\n\n_c = MenuComponent;\nexport default MenuComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuComponent\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/components/Sidebar/MenuComponent.js"],"names":["React","useState","useTheme","slide","Menu","getMenuStyles","theme","bmBurgerButton","position","width","height","left","top","zIndex","bmBurgerBars","background","color","grey","bmBurgerBarsHover","bmCrossButton","display","bmCross","grayishBlue3","bmMenuWrap","bmMenu","white","boxShadow","bmItem","outline","bmMorphShape","fill","veryDarkGrayishBlue","bmOverlay","MenuComponent","children","isMobile","menuStyles","isOpen","setIsOpen","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AACpCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,UADI;AAEdC,IAAAA,KAAK,EAAE,EAFO;AAGdC,IAAAA,MAAM,EAAE,EAHM;AAIdC,IAAAA,IAAI,EAAE,EAJQ;AAKdC,IAAAA,GAAG,EAAE,EALS;AAMdC,IAAAA,MAAM,EAAE;AANM,GADoB;AASpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYC;AADZ,GATsB;AAYpCC,EAAAA,iBAAiB,EAAE;AACjBH,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYC;AADP,GAZiB;AAepCE,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE;AADI,GAfqB;AAkBpCC,EAAAA,OAAO,EAAE;AACPN,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYM;AADjB,GAlB2B;AAqBpCC,EAAAA,UAAU,EAAE;AACVf,IAAAA,QAAQ,EAAE,OADA;AAEVE,IAAAA,MAAM,EAAE,MAFE;AAGVD,IAAAA,KAAK,EAAE,GAHG;AAIVI,IAAAA,MAAM,EAAE;AAJE,GArBwB;AA2BpCW,EAAAA,MAAM,EAAE;AACNT,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYS,KADlB;AAENC,IAAAA,SAAS,EAAE;AAFL,GA3B4B;AA+BpCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAEN,eAAW;AACTA,MAAAA,OAAO,EAAE;AADA;AAFL,GA/B4B;AAqCpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAExB,KAAK,CAACU,KAAN,CAAYe;AADN,GArCsB;AAwCpCC,EAAAA,SAAS,EAAE;AACTjB,IAAAA,UAAU,EAAE,oBADH;AAETF,IAAAA,MAAM,EAAE;AAFC;AAxCyB,CAAhB,CAAtB;;AA8CA,SAASoB,aAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvB,EAA+C;AAAA;;AAC7C,QAAM7B,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAMkC,UAAU,GAAG/B,aAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAAhC;AACA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBrC,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,MAAM,EAAE,CAACkC,QAAD,IAAaE,MADvB;AAEE,IAAA,SAAS,EAAE,CAACF,QAFd;AAGE,IAAA,iBAAiB,MAHnB;AAIE,IAAA,MAAM,EAAEC,UAJV;AAKE,IAAA,aAAa,EAAGG,KAAD,IAAWD,SAAS,CAACC,KAAK,CAACF,MAAP,CALrC;AAAA,cAOGH;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhBQD,a;UACO/B,Q;;;KADP+B,a;AAkBT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTheme } from \"react-jss\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\nconst getMenuStyles = ({ theme }) => ({\r\n  bmBurgerButton: {\r\n    position: \"absolute\",\r\n    width: 26,\r\n    height: 20,\r\n    left: 30,\r\n    top: 40,\r\n    zIndex: 19,\r\n  },\r\n  bmBurgerBars: {\r\n    background: theme.color.grey,\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: theme.color.grey,\r\n  },\r\n  bmCrossButton: {\r\n    display: \"none\",\r\n  },\r\n  bmCross: {\r\n    background: theme.color.grayishBlue3,\r\n  },\r\n  bmMenuWrap: {\r\n    position: \"fixed\",\r\n    height: \"100%\",\r\n    width: 200,\r\n    zIndex: 30,\r\n  },\r\n  bmMenu: {\r\n    background: theme.color.white,\r\n    boxShadow: \"1px 0 3px rgb(0 0 0 / 5%), 1px 0 0 rgb(0 0 0 / 10%)\",\r\n  },\r\n  bmItem: {\r\n    outline: \"none\",\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  bmMorphShape: {\r\n    fill: theme.color.veryDarkGrayishBlue,\r\n  },\r\n  bmOverlay: {\r\n    background: \"rgba(0, 0, 0, 0.3)\",\r\n    zIndex: 20,\r\n  },\r\n});\r\n\r\nfunction MenuComponent({ children, isMobile }) {\r\n  const theme = useTheme();\r\n  const menuStyles = getMenuStyles({ theme });\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <Menu\r\n      isOpen={!isMobile || isOpen}\r\n      noOverlay={!isMobile}\r\n      disableCloseOnEsc\r\n      styles={menuStyles}\r\n      onStateChange={(state) => setIsOpen(state.isOpen)}\r\n    >\r\n      {children}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MenuComponent;\r\n"]},"metadata":{},"sourceType":"module"}