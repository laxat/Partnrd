{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\CreateShareAgreement.js\";\nimport React, { useState } from \"react\";\nimport { ReactPDF, Page, Text, View, Document, StyleSheet, PDFViewer } from \"@react-pdf/renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\"\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n});\nexport function CreateShareAgreement() {\n  const data = localStorage.getItem(\"shareData\");\n  const val = JSON.parse(data);\n  const corpName = val.companyName;\n  const corpPlace = val.companyPlace;\n  const corpDate = val.companyDate;\n  const shareData = [];\n  const personData = [];\n  val.shareInfo.map((x, i) => {\n    return shareData[i] = {\n      shareID: x.shareID,\n      shareName: x.shareName,\n      shareClass: x.shareClass,\n      shareType: x.shareType,\n      shareTotal: x.shareTotal\n    };\n  });\n  val.founderInfo.map((x, i) => {\n    return personData[i] = {\n      personID: x.personID,\n      name: [x.fname, x.preferredName],\n      phone: x.phone,\n      email: x.email,\n      address: [x.streetName, x.provinceName, x.cityName, x.postalCode],\n      IsCompany: [x.role, x.corpName],\n      Ownership: x.shareinfo,\n      IsBoard: x.onBoard\n    };\n  });\n\n  const Beginning = () => {\n    const d = \"\";\n\n    /*#__PURE__*/\n    _jsxDEV(Document, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        size: \"A4\",\n        style: styles.page,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          style: styles.section,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"THIS AGREEMENT (the \\u201CAgreement\\u201D), is made as of \", corpDate, \", between\", \" \", corpName, \", a corporation incorporated under the laws of\", \" \", corpPlace, \"(the \\u201CCorporation\\u201D);\", personData.map((x, i) => {\n              return `${x.name[0]}, an individual residing in the City of ${x.address[2]},\n                                ${x.address[1]}(\"${x.name[1]}\")`;\n            }), \"each investor being listed on Schedule \\u201CA\\u201D annexed hereto, and any person who becomes a party hereto by executing an acknowledgement in the form annexed hereto as Schedule \\u201CB\\u201D.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  };\n}\n_c = CreateShareAgreement;\n;\nReactPDF.render( /*#__PURE__*/_jsxDEV(Beginning, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 17\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateShareAgreement\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/CreateShareAgreement.js"],"names":["React","useState","ReactPDF","Page","Text","View","Document","StyleSheet","PDFViewer","styles","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","CreateShareAgreement","data","localStorage","getItem","val","JSON","parse","corpName","companyName","corpPlace","companyPlace","corpDate","companyDate","shareData","personData","shareInfo","map","x","i","shareID","shareName","shareClass","shareType","shareTotal","founderInfo","personID","name","fname","preferredName","phone","email","address","streetName","provinceName","cityName","postalCode","IsCompany","role","Ownership","shareinfo","IsBoard","onBoard","Beginning","d","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ReactPDF, Page, Text, View, Document, StyleSheet, PDFViewer } from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#E4E4E4\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport function CreateShareAgreement() {\r\n\r\n    const data = localStorage.getItem(\"shareData\")\r\n    \r\n    const val = JSON.parse(data);\r\n    const corpName = val.companyName;\r\n    const corpPlace = val.companyPlace;\r\n    const corpDate = val.companyDate;\r\n    const shareData = [];\r\n    const personData = [];\r\n     \r\n    val.shareInfo.map((x, i) => {\r\n        return(shareData[i] = {\r\n            shareID: x.shareID,\r\n            shareName: x.shareName,\r\n            shareClass: x.shareClass,\r\n            shareType: x.shareType,\r\n            shareTotal: x.shareTotal\r\n        });\r\n    });\r\n\r\n    val.founderInfo.map((x, i) => {\r\n        return (personData[i] = {\r\n          personID: x.personID,\r\n          name: [x.fname, x.preferredName],\r\n          phone: x.phone,\r\n          email: x.email,\r\n          address: [x.streetName, x.provinceName, x.cityName, x.postalCode],\r\n          IsCompany: [x.role, x.corpName],\r\n          Ownership: x.shareinfo, \r\n          IsBoard: x.onBoard,\r\n          \r\n        });\r\n    }); \r\n    \r\n    const Beginning = () => {\r\n        \r\n        const d = \"\";\r\n        \r\n          <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                <Text>\r\n                    THIS AGREEMENT (the “Agreement”), is made as of {corpDate},\r\n                    between{\" \"}\r\n                    {corpName}, a corporation incorporated under the laws of{\" \"}\r\n                    {corpPlace}(the “Corporation”);\r\n                    {personData.map((x, i) => {\r\n                    return `${x.name[0]}, an individual residing in the City of ${x.address[2]},\r\n                                ${x.address[1]}(\"${x.name[1]}\")`;\r\n                    })}\r\n                    each investor being listed on Schedule “A” annexed hereto, and\r\n                    any person who becomes a party hereto by executing an\r\n                    acknowledgement in the form annexed hereto as Schedule “B”.\r\n                </Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n         \r\n    }\r\n};\r\n\r\nReactPDF.render(<Beginning/>)"]},"metadata":{},"sourceType":"module"}