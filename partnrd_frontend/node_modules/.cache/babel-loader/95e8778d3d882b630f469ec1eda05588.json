{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\components\\\\Sidebar\\\\MenuComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { slide as Menu } from 'react-burger-menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getMenuStyles = ({\n  theme\n}) => ({\n  bmBurgerButton: {\n    position: 'absolute',\n    width: 26,\n    height: 20,\n    left: 30,\n    top: 40,\n    zIndex: 19\n  },\n  bmBurgerBars: {\n    background: theme.color.veryDarkGrayishBlue\n  },\n  bmBurgerBarsHover: {\n    background: theme.color.darkRed\n  },\n  bmCrossButton: {\n    display: 'none'\n  },\n  bmCross: {\n    background: theme.color.grayishBlue3\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%',\n    width: 255,\n    zIndex: 30\n  },\n  bmMenu: {\n    background: theme.color.veryDarkGrayishBlue\n  },\n  bmItem: {\n    outline: 'none',\n    '&:focus': {\n      outline: 'none'\n    }\n  },\n  bmMorphShape: {\n    fill: theme.color.veryDarkGrayishBlue\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)',\n    zIndex: 20\n  }\n});\n\nfunction MenuComponent({\n  children,\n  isMobile\n}) {\n  _s();\n\n  const theme = useTheme();\n  const menuStyles = getMenuStyles({\n    theme\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    isOpen: !isMobile || isOpen,\n    noOverlay: !isMobile,\n    disableCloseOnEsc: true,\n    styles: menuStyles,\n    onStateChange: state => setIsOpen(state.isOpen),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MenuComponent, \"flmWDEfaJ/qOwBw3QdZqTlXnx38=\", false, function () {\n  return [useTheme];\n});\n\n_c = MenuComponent;\nexport default MenuComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuComponent\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/components/Sidebar/MenuComponent.js"],"names":["React","useState","useTheme","slide","Menu","getMenuStyles","theme","bmBurgerButton","position","width","height","left","top","zIndex","bmBurgerBars","background","color","veryDarkGrayishBlue","bmBurgerBarsHover","darkRed","bmCrossButton","display","bmCross","grayishBlue3","bmMenuWrap","bmMenu","bmItem","outline","bmMorphShape","fill","bmOverlay","MenuComponent","children","isMobile","menuStyles","isOpen","setIsOpen","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AAClCC,EAAAA,cAAc,EAAE;AACZC,IAAAA,QAAQ,EAAE,UADE;AAEZC,IAAAA,KAAK,EAAE,EAFK;AAGZC,IAAAA,MAAM,EAAE,EAHI;AAIZC,IAAAA,IAAI,EAAE,EAJM;AAKZC,IAAAA,GAAG,EAAE,EALO;AAMZC,IAAAA,MAAM,EAAE;AANI,GADkB;AASlCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYC;AADd,GAToB;AAYlCC,EAAAA,iBAAiB,EAAE;AACfH,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYG;AADT,GAZe;AAelCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE;AADE,GAfmB;AAkBlCC,EAAAA,OAAO,EAAE;AACLP,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYO;AADnB,GAlByB;AAqBlCC,EAAAA,UAAU,EAAE;AACRhB,IAAAA,QAAQ,EAAE,OADF;AAERE,IAAAA,MAAM,EAAE,MAFA;AAGRD,IAAAA,KAAK,EAAE,GAHC;AAIRI,IAAAA,MAAM,EAAE;AAJA,GArBsB;AA2BlCY,EAAAA,MAAM,EAAE;AACJV,IAAAA,UAAU,EAAET,KAAK,CAACU,KAAN,CAAYC;AADpB,GA3B0B;AA8BlCS,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ,eAAW;AACPA,MAAAA,OAAO,EAAE;AADF;AAFP,GA9B0B;AAoClCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAEvB,KAAK,CAACU,KAAN,CAAYC;AADR,GApCoB;AAuClCa,EAAAA,SAAS,EAAE;AACPf,IAAAA,UAAU,EAAE,oBADL;AAEPF,IAAAA,MAAM,EAAE;AAFD;AAvCuB,CAAhB,CAAtB;;AA6CA,SAASkB,aAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvB,EAA+C;AAAA;;AAC3C,QAAM3B,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAMgC,UAAU,GAAG7B,aAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAAhC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACI,QAAC,IAAD;AACI,IAAA,MAAM,EAAE,CAACgC,QAAD,IAAaE,MADzB;AAEI,IAAA,SAAS,EAAE,CAACF,QAFhB;AAGI,IAAA,iBAAiB,MAHrB;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,aAAa,EAAGG,KAAD,IAAWD,SAAS,CAACC,KAAK,CAACF,MAAP,CALvC;AAAA,cAOKH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhBQD,a;UACS7B,Q;;;KADT6B,a;AAkBT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTheme } from 'react-jss';\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst getMenuStyles = ({ theme }) => ({\r\n    bmBurgerButton: {\r\n        position: 'absolute',\r\n        width: 26,\r\n        height: 20,\r\n        left: 30,\r\n        top: 40,\r\n        zIndex: 19\r\n    },\r\n    bmBurgerBars: {\r\n        background: theme.color.veryDarkGrayishBlue\r\n    },\r\n    bmBurgerBarsHover: {\r\n        background: theme.color.darkRed\r\n    },\r\n    bmCrossButton: {\r\n        display: 'none'\r\n    },\r\n    bmCross: {\r\n        background: theme.color.grayishBlue3\r\n    },\r\n    bmMenuWrap: {\r\n        position: 'fixed',\r\n        height: '100%',\r\n        width: 255,\r\n        zIndex: 30\r\n    },\r\n    bmMenu: {\r\n        background: theme.color.veryDarkGrayishBlue\r\n    },\r\n    bmItem: {\r\n        outline: 'none',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    bmMorphShape: {\r\n        fill: theme.color.veryDarkGrayishBlue\r\n    },\r\n    bmOverlay: {\r\n        background: 'rgba(0, 0, 0, 0.3)',\r\n        zIndex: 20\r\n    }\r\n});\r\n\r\nfunction MenuComponent({ children, isMobile }) {\r\n    const theme = useTheme();\r\n    const menuStyles = getMenuStyles({ theme });\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <Menu\r\n            isOpen={!isMobile || isOpen}\r\n            noOverlay={!isMobile}\r\n            disableCloseOnEsc\r\n            styles={menuStyles}\r\n            onStateChange={(state) => setIsOpen(state.isOpen)}\r\n        >\r\n            {children}\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default MenuComponent;\r\n"]},"metadata":{},"sourceType":"module"}