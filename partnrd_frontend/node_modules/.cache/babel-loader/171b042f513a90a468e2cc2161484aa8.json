{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\r\n * User Signup function, uses api to validate user looking to register \r\n * and adds them to the database.\r\n * \r\n * @param {*} validate \r\n * @returns \r\n */\n\nexport const useSignup = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(\"http://127.0.0.1:8000/api/register\", data).then(res => {\n        const success = {\n          state: true,\n          message: \"Email Verification email sent\"\n        };\n        setSuccess(success);\n      }).catch(err => {\n        const error = err.response.data;\n        const s = Object.values(error.errors);\n        s.join(\" \");\n        const response = {\n          error: true,\n          message: s\n        };\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n/**\r\n * User Login logic, uses axios to post data to the server,\r\n * Validation is performed client side and server side. \r\n * Authentication is performed server side and messages are posted\r\n * to the front-end to display in the application. \r\n * @param {*} validate \r\n * @returns \r\n */\n\n_s(useSignup, \"vloql8By0ZYdDnGSHU+4Be/WDI0=\");\n\nexport const useLogin = validate => {\n  _s2();\n\n  const [fields, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(\"http://127.0.0.1:8000/api/login\", data).then(res => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.token);\n        history.push(\"/\");\n      }).catch(err => {\n        let errors = \"\";\n\n        if (err.response.data.errors.email) {\n          errors = err.response.data.errors.email;\n        } else {\n          errors = err.response.data.errors;\n        }\n\n        const response = {\n          error: true,\n          message: errors\n        };\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleLoginChange,\n    fields,\n    handleSubmit,\n    errors,\n    response\n  };\n};\n\n_s2(useLogin, \"9hsimNuguYqbBKQnVVxpe2c94Yc=\", false, function () {\n  return [useHistory];\n});\n\nexport const useEmail = validate => {\n  _s3();\n\n  const [fields, setValues] = useState({\n    email: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleEmailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(\"http://127.0.0.1:8000/api/password/email\", data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        setSuccess(success);\n      }).catch(err => {\n        let errors = err.response.data.errors;\n        const response = {\n          error: true,\n          message: errors\n        }; //console.log(errors)\n\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleEmailChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s3(useEmail, \"sLn47ELPERy1aDEWSWGM9zOuDq8=\");\n\nconst getToken = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"token\")) {\n    return params.get(\"token\");\n  }\n\n  return \"\";\n};\n\nconst getUserId = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has(\"id\")) {\n    return params.get(\"id\");\n  }\n\n  return \"\";\n};\n\nexport const usePasswordReset = validate => {\n  _s4();\n\n  const [fields, setValues] = useState({\n    id: getUserId(),\n    token: getToken(),\n    password: \"\",\n    password_confirmation: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [success, setSuccess] = useState({\n    state: false,\n    message: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const response = {\n      error: false,\n      message: errors\n    };\n    setResponse(response);\n    setErrors(validate(fields));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = fields;\n      axios.post(\"http://127.0.0.1:8000/api/password/reset\", data).then(res => {\n        const success = {\n          state: true,\n          message: res.message\n        };\n        console.log(success);\n        setSuccess(success);\n      }).catch(err => {\n        let errors = err.response.data.errors;\n        const response = {\n          error: true,\n          message: errors\n        };\n        console.log(errors); //setResponse(response);\n\n        setIsSubmitting(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors]);\n  return {\n    handleChange,\n    fields,\n    handleSubmit,\n    errors,\n    response,\n    success\n  };\n};\n\n_s4(usePasswordReset, \"jCGMW4R1kZ2a+fRAfOfsVO15Uik=\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/useSignup.js"],"names":["useState","useEffect","axios","useHistory","useSignup","validate","values","setValues","name","email","password","password2","response","setResponse","error","message","errors","setErrors","isSubmitting","setIsSubmitting","success","setSuccess","state","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","catch","err","s","join","useLogin","fields","history","handleLoginChange","localStorage","setItem","token","push","useEmail","handleEmailChange","getToken","params","URLSearchParams","window","location","search","has","get","getUserId","usePasswordReset","id","password_confirmation","handleChange","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,2CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IACzB;AAAA;;AACI,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACrCQ,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,SAAS,EAAE;AAJ0B,GAAD,CAApC;AAOF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAAxC;AAKC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAED,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AACrCsB,IAAAA,KAAK,EAAE,KAD8B;AAErCP,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,QAAMQ,oBAAoB,GAAIC,CAAD,IAAO;AAClC,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAnB,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAER,OAACE,IAAD,GAAOiB;AAFC,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMhB,QAAQ,GAAG;AACfE,MAAAA,KAAK,EAAE,KADQ;AAEfC,MAAAA,OAAO,EAAEC;AAFM,KAAjB;AAIAH,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,SAAS,CAACZ,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAa,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpD,YAAMc,IAAI,GAAG1B,MAAb;AACAJ,MAAAA,KAAK,CACF+B,IADH,CACQ,oCADR,EAC8CD,IAD9C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,cAAMf,OAAO,GAAG;AACdE,UAAAA,KAAK,EAAE,IADO;AAEdP,UAAAA,OAAO,EAAE;AAFK,SAAhB;AAIAM,QAAAA,UAAU,CAACD,OAAD,CAAV;AACD,OARH,EASGgB,KATH,CASUC,GAAD,IAAS;AACd,cAAMvB,KAAK,GAAGuB,GAAG,CAACzB,QAAJ,CAAaoB,IAA3B;AACA,cAAMM,CAAC,GAAGT,MAAM,CAACvB,MAAP,CAAcQ,KAAK,CAACE,MAApB,CAAV;AACAsB,QAAAA,CAAC,CAACC,IAAF,CAAO,GAAP;AACA,cAAM3B,QAAQ,GAAG;AACfE,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAEuB;AAFM,SAAjB;AAIAzB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAnBH;AAoBD,KAvBa,CAwBd;;AACD,GAzBQ,EAyBN,CAACH,MAAD,CAzBM,CAAT;AA2BA,SAAO;AACLO,IAAAA,oBADK;AAELjB,IAAAA,MAFK;AAGLqB,IAAAA,YAHK;AAILX,IAAAA,MAJK;AAKLJ,IAAAA,QALK;AAMLQ,IAAAA;AANK,GAAP;AAQD,CA7EM;AA+EP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtFahB,S;;AAwFb,OAAO,MAAMoC,QAAQ,GAAInC,QAAD,IACxB;AAAA;;AACE,QAAM,CAACoC,MAAD,EAASlC,SAAT,IAAsBP,QAAQ,CAAC;AACnCS,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAApC;AAKA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAAxC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM0C,OAAO,GAAGvC,UAAU,EAA1B;;AAEA,QAAMwC,iBAAiB,GAAInB,CAAD,IAAO;AAC/B,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAnB,IAAAA,SAAS,CAAC,EACR,GAAGkC,MADK;AAER,OAACjC,IAAD,GAAQiB;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMhB,QAAQ,GAAG;AACfE,MAAAA,KAAK,EAAE,KADQ;AAEfC,MAAAA,OAAO,EAAEC;AAFM,KAAjB;AAIAH,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,SAAS,CAACZ,QAAQ,CAACoC,MAAD,CAAT,CAAT;AAEAtB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpD,YAAMc,IAAI,GAAGS,MAAb;AACAvC,MAAAA,KAAK,CACF+B,IADH,CACQ,iCADR,EAC2CD,IAD3C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbS,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,GAAG,CAACH,IAAJ,CAASc,KAAvC;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BV,GAAG,CAACH,IAAJ,CAASc,KAAtC;AACAJ,QAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD,OANH,EAOGX,KAPH,CAOUC,GAAD,IAAS;AACd,YAAIrB,MAAM,GAAG,EAAb;;AACA,YAAIqB,GAAG,CAACzB,QAAJ,CAAaoB,IAAb,CAAkBhB,MAAlB,CAAyBP,KAA7B,EAAoC;AAClCO,UAAAA,MAAM,GAAGqB,GAAG,CAACzB,QAAJ,CAAaoB,IAAb,CAAkBhB,MAAlB,CAAyBP,KAAlC;AACD,SAFD,MAEO;AACLO,UAAAA,MAAM,GAAGqB,GAAG,CAACzB,QAAJ,CAAaoB,IAAb,CAAkBhB,MAA3B;AACD;;AACD,cAAMJ,QAAQ,GAAG;AACfE,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAEC;AAFM,SAAjB;AAIAH,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OApBH;AAqBD,KAxBa,CAyBd;;AACD,GA1BQ,EA0BN,CAACH,MAAD,CA1BM,CAAT;AA4BA,SAAO;AAAE2B,IAAAA,iBAAF;AAAqBF,IAAAA,MAArB;AAA6Bd,IAAAA,YAA7B;AAA2CX,IAAAA,MAA3C;AAAmDJ,IAAAA;AAAnD,GAAP;AACD,CAjEM;;IAAM4B,Q;UAcKrC,U;;;AAsDlB,OAAO,MAAM6C,QAAQ,GAAI3C,QAAD,IAAc;AAAA;;AACpC,QAAM,CAACoC,MAAD,EAASlC,SAAT,IAAsBP,QAAQ,CAAC;AACnCS,IAAAA,KAAK,EAAE;AAD4B,GAAD,CAApC;AAIA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAAxC;AAKA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AACrCsB,IAAAA,KAAK,EAAE,KAD8B;AAErCP,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,QAAMkC,iBAAiB,GAAIzB,CAAD,IAAO;AAC/B,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAnB,IAAAA,SAAS,CAAC,EACR,GAAGkC,MADK;AAER,OAACjC,IAAD,GAAQiB;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMhB,QAAQ,GAAG;AACfE,MAAAA,KAAK,EAAE,KADQ;AAEfC,MAAAA,OAAO,EAAEC;AAFM,KAAjB;AAIAH,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,SAAS,CAACZ,QAAQ,CAACoC,MAAD,CAAT,CAAT;AACAtB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpD,YAAMc,IAAI,GAAGS,MAAb;AACAvC,MAAAA,KAAK,CACF+B,IADH,CACQ,0CADR,EACoDD,IADpD,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,cAAMf,OAAO,GAAG;AACdE,UAAAA,KAAK,EAAE,IADO;AAEdP,UAAAA,OAAO,EAAEoB,GAAG,CAACpB;AAFC,SAAhB;AAIAM,QAAAA,UAAU,CAACD,OAAD,CAAV;AACD,OARH,EASGgB,KATH,CASUC,GAAD,IAAS;AACd,YAAIrB,MAAM,GAAGqB,GAAG,CAACzB,QAAJ,CAAaoB,IAAb,CAAkBhB,MAA/B;AAEA,cAAMJ,QAAQ,GAAG;AACfE,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAEC;AAFM,SAAjB,CAHc,CAQd;;AACAH,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OApBH;AAqBD,KAxBa,CAyBd;;AACD,GA1BQ,EA0BN,CAACH,MAAD,CA1BM,CAAT;AA4BA,SAAO;AACLiC,IAAAA,iBADK;AAELR,IAAAA,MAFK;AAGLd,IAAAA,YAHK;AAILX,IAAAA,MAJK;AAKLJ,IAAAA,QALK;AAMLQ,IAAAA;AANK,GAAP;AAQD,CAxEM;;IAAM4B,Q;;AA0Eb,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;;AACA,MAAIJ,MAAM,CAACK,GAAP,CAAW,OAAX,CAAJ,EAAyB;AACvB,WAAOL,MAAM,CAACM,GAAP,CAAW,OAAX,CAAP;AACD;;AACD,SAAO,EAAP;AACD,CAND;;AAQA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMP,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;;AACA,MAAIJ,MAAM,CAACK,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,WAAOL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAP;AACD;;AACD,SAAO,EAAP;AACD,CAND;;AAQA,OAAO,MAAME,gBAAgB,GAAItD,QAAD,IAAc;AAAA;;AAC5C,QAAM,CAACoC,MAAD,EAASlC,SAAT,IAAsBP,QAAQ,CAAC;AACnC4D,IAAAA,EAAE,EAAEF,SAAS,EADsB;AAEnCZ,IAAAA,KAAK,EAAEI,QAAQ,EAFoB;AAGnCxC,IAAAA,QAAQ,EAAE,EAHyB;AAInCmD,IAAAA,qBAAqB,EAAE;AAJY,GAAD,CAApC;AAOA,QAAM,CAAC7C,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAAxC;AAKA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AACrCsB,IAAAA,KAAK,EAAE,KAD8B;AAErCP,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,QAAM+C,YAAY,GAAItC,CAAD,IAAO;AAC1B,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAnB,IAAAA,SAAS,CAAC,EACR,GAAGkC,MADK;AAER,OAACjC,IAAD,GAAQiB;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMhB,QAAQ,GAAG;AACfE,MAAAA,KAAK,EAAE,KADQ;AAEfC,MAAAA,OAAO,EAAEC;AAFM,KAAjB;AAIAH,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,SAAS,CAACZ,QAAQ,CAACoC,MAAD,CAAT,CAAT;AACAtB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpD,YAAMc,IAAI,GAAGS,MAAb;AACAvC,MAAAA,KAAK,CACF+B,IADH,CACQ,0CADR,EACoDD,IADpD,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,cAAMf,OAAO,GAAG;AACdE,UAAAA,KAAK,EAAE,IADO;AAEdP,UAAAA,OAAO,EAAEoB,GAAG,CAACpB;AAFC,SAAhB;AAIAgD,QAAAA,OAAO,CAACC,GAAR,CAAY5C,OAAZ;AACAC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACD,OATH,EAUGgB,KAVH,CAUUC,GAAD,IAAS;AACd,YAAIrB,MAAM,GAAGqB,GAAG,CAACzB,QAAJ,CAAaoB,IAAb,CAAkBhB,MAA/B;AAEA,cAAMJ,QAAQ,GAAG;AACfE,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAEC;AAFM,SAAjB;AAKA+C,QAAAA,OAAO,CAACC,GAAR,CAAYhD,MAAZ,EARc,CASd;;AACAG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OArBH;AAsBD,KAzBa,CA0Bd;;AACD,GA3BQ,EA2BN,CAACH,MAAD,CA3BM,CAAT;AA6BA,SAAO;AACL8C,IAAAA,YADK;AAELrB,IAAAA,MAFK;AAGLd,IAAAA,YAHK;AAILX,IAAAA,MAJK;AAKLJ,IAAAA,QALK;AAMLQ,IAAAA;AANK,GAAP;AAQD,CA5EM;;IAAMuC,gB","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n/**\r\n * User Signup function, uses api to validate user looking to register \r\n * and adds them to the database.\r\n * \r\n * @param {*} validate \r\n * @returns \r\n */\r\nexport const useSignup = (validate) =>\r\n{\r\n    const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n    \r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n   const [errors, setErrors] = useState({});\r\n    \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n        ...values,\r\n      [name]:value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = values;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/register\", data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: \"Email Verification email sent\",\r\n          };\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          const error = err.response.data;\r\n          const s = Object.values(error.errors);\r\n          s.join(\" \");\r\n          const response = {\r\n            error: true,\r\n            message: s,\r\n          };\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleRegisterChange,\r\n    values,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success\r\n  };\r\n};\r\n\r\n/**\r\n * User Login logic, uses axios to post data to the server,\r\n * Validation is performed client side and server side. \r\n * Authentication is performed server side and messages are posted\r\n * to the front-end to display in the application. \r\n * @param {*} validate \r\n * @returns \r\n */\r\n\r\nexport const useLogin = (validate) =>\r\n{\r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleLoginChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/login\", data)\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          localStorage.setItem(\"user\", res.data.token);\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          let errors = \"\";\r\n          if (err.response.data.errors.email) {\r\n            errors = err.response.data.errors.email;\r\n          } else {\r\n            errors = err.response.data.errors;\r\n          }\r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return { handleLoginChange, fields, handleSubmit, errors, response };\r\n};\r\n\r\n\r\nexport const useEmail = (validate) => {\r\n  const [fields, setValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/password/email\", data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: res.message,\r\n          };\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          let errors = err.response.data.errors;\r\n\r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n\r\n          //console.log(errors)\r\n          setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleEmailChange,\r\n    fields,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success,\r\n  };\r\n};\r\n\r\nconst getToken = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"token\")) {\r\n    return params.get(\"token\");\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst getUserId = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  if (params.has(\"id\")) {\r\n    return params.get(\"id\");\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const usePasswordReset = (validate) => {\r\n  const [fields, setValues] = useState({\r\n    id: getUserId(),\r\n    token: getToken(),\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [success, setSuccess] = useState({\r\n    state: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = {\r\n      error: false,\r\n      message: errors,\r\n    };\r\n    setResponse(response);\r\n    setErrors(validate(fields));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = fields;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/password/reset\", data)\r\n        .then((res) => {\r\n          const success = {\r\n            state: true,\r\n            message: res.message,\r\n          };\r\n          console.log(success);\r\n          setSuccess(success);\r\n        })\r\n        .catch((err) => {\r\n          let errors = err.response.data.errors;\r\n\r\n          const response = {\r\n            error: true,\r\n            message: errors,\r\n          };\r\n\r\n          console.log(errors);\r\n          //setResponse(response);\r\n          setIsSubmitting(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleChange,\r\n    fields,\r\n    handleSubmit,\r\n    errors,\r\n    response,\r\n    success,\r\n  };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}