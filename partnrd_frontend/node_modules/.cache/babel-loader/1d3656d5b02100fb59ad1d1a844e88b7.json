{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { Input, Label, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharesTable = /*#__PURE__*/React.forwardRef(_c = _s(({\n  columns,\n  data,\n  methods\n}, ref) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              readOnly: true,\n              type: \"text\",\n              name: `shareInfo[${i}][refNum]`,\n              value: i + 1,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `shareInfo[${i}][shareName]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `shareInfo[${i}][shareClass]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `shareInfo[${i}][shareType]`,\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Preferred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: `shareInfo[${i}][shareTotal]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c2 = SharesTable;\nexport const FoundersTable = /*#__PURE__*/React.forwardRef(_c3 = _s2(({\n  columns,\n  data,\n  methods,\n  addRow\n}, ref) => {\n  _s2();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n  // const [person, setPerson] = useState({\n  //   refNum: \"\"\n  // });\n\n  let l = [];\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const index = parseInt(name[12]);\n\n    if (value === \"Investor\") {\n      l.push(name[12]);\n    } else {\n      l.splice(index, 1);\n    }\n\n    console.log(l);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              readOnly: true,\n              type: \"text\",\n              name: `founderInfo[${i}][refNum]`,\n              value: i + 1,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][fname]`,\n              placeholder: \"Full Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][preferredName]`,\n              placeholder: \"Preferred Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: `founderInfo[${i}][role]`,\n              innerRef: methods.register,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Investor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][refID]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: `founderInfo[${i}][numHeld]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][streetName]`,\n              placeholder: \"Street Name\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: `founderInfo[${i}][cityName]`,\n                placeholder: \"City\",\n                innerRef: methods.register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: `founderInfo[${i}][provinceName]`,\n                placeholder: \"Province\",\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB\",\n                  children: \"Alberta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"BC\",\n                  children: \"British Columbia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MB\",\n                  children: \"Manitoba\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NB\",\n                  children: \"New Brunswick\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NL\",\n                  children: \"Newfoundland and Labrador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NS\",\n                  children: \"Nova Scotia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ON\",\n                  children: \"Ontario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PE\",\n                  children: \"Prince Edward Island\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"QC\",\n                  children: \"Quebec\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SK\",\n                  children: \"Saskatchewan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NT\",\n                  children: \"Northwest Territories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NU\",\n                  children: \"Nunavut\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"YT\",\n                  children: \"Yukon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `founderInfo[${i}][postalCode]`,\n              placeholder: \"Postal Code\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n              name: `founderInfo[${i}][phone]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: `founderInfo[${i}][email]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `founderInfo[${i}][onBoard]`,\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c4 = FoundersTable;\nexport const CorpsTable = /*#__PURE__*/React.forwardRef(_c5 = _s3(({\n  columns,\n  data,\n  methods\n}, ref) => {\n  _s3();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `corpInfo[${i}][corpName]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: `shareInfo[${i}][shareName]`,\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 7\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c6 = CorpsTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SharesTable$React.forwardRef\");\n$RefreshReg$(_c2, \"SharesTable\");\n$RefreshReg$(_c3, \"FoundersTable$React.forwardRef\");\n$RefreshReg$(_c4, \"FoundersTable\");\n$RefreshReg$(_c5, \"CorpsTable$React.forwardRef\");\n$RefreshReg$(_c6, \"CorpsTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/Table.js"],"names":["React","useState","useTable","Input","Label","Button","SharesTable","forwardRef","columns","data","methods","ref","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","register","FoundersTable","addRow","l","handleChange","e","name","value","target","index","parseInt","push","splice","console","log","CorpsTable"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { Input, Label, Button } from \"reactstrap\";\r\n\r\nexport const SharesTable = React.forwardRef(({ columns, data, methods}, ref) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>\r\n                  <Input\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name={`shareInfo[${i}][refNum]`}\r\n                    value={i+1}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`shareInfo[${i}][shareName]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`shareInfo[${i}][shareClass]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Class A</option>\r\n                    <option>Class B</option>\r\n                    <option>None</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`shareInfo[${i}][shareType]`}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Common</option>\r\n                    <option>Preferred</option>\r\n                  </Input>\r\n                </td>\r\n\r\n                <td>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name={`shareInfo[${i}][shareTotal]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nexport const FoundersTable = React.forwardRef(\r\n  ({ columns, data, methods, addRow}, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n      });\r\n\r\n    // Render the UI for your table\r\n    // const [person, setPerson] = useState({\r\n    //   refNum: \"\"\r\n\r\n    // });\r\n    let l = []; \r\n    const handleChange = (e) => {\r\n      \r\n      const { name, value } = e.target\r\n      const index = parseInt(name[12])\r\n      if (value === \"Investor\")\r\n      {\r\n        l.push(name[12])\r\n      }\r\n      else {\r\n        l.splice(index, 1)\r\n      }\r\n      console.log(l)\r\n    };\r\n    \r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>\r\n                  <Input\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][refNum]`}\r\n                    value={i + 1}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][fname]`}\r\n                    placeholder=\"Full Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][preferredName]`}\r\n                    placeholder=\"Preferred Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name={`founderInfo[${i}][role]`}\r\n                    innerRef={methods.register}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option>Founder</option>\r\n                    <option>Investor</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][refID]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name={`founderInfo[${i}][numHeld]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][streetName]`}\r\n                    placeholder=\"Street Name\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name={`founderInfo[${i}][cityName]`}\r\n                      placeholder=\"City\"\r\n                      innerRef={methods.register}\r\n                    />\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name={`founderInfo[${i}][provinceName]`}\r\n                      placeholder=\"Province\"\r\n                      innerRef={methods.register}\r\n                    >\r\n                      <option value=\"AB\">Alberta</option>\r\n                      <option value=\"BC\">British Columbia</option>\r\n                      <option value=\"MB\">Manitoba</option>\r\n                      <option value=\"NB\">New Brunswick</option>\r\n                      <option value=\"NL\">Newfoundland and Labrador</option>\r\n                      <option value=\"NS\">Nova Scotia</option>\r\n                      <option value=\"ON\">Ontario</option>\r\n                      <option value=\"PE\">Prince Edward Island</option>\r\n                      <option value=\"QC\">Quebec</option>\r\n                      <option value=\"SK\">Saskatchewan</option>\r\n                      <option value=\"NT\">Northwest Territories</option>\r\n                      <option value=\"NU\">Nunavut</option>\r\n                      <option value=\"YT\">Yukon</option>\r\n                    </Input>\r\n                  </span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`founderInfo[${i}][postalCode]`}\r\n                    placeholder=\"Postal Code\"\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                    name={`founderInfo[${i}][phone]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name={`founderInfo[${i}][email]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name={`founderInfo[${i}][onBoard]`}\r\n                    ref={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n);\r\n\r\nexport const CorpsTable = React.forwardRef(\r\n  ({ columns, data, methods }, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n      });\r\n\r\n    // Render the UI for your table\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`corpInfo[${i}][corpName]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`shareInfo[${i}][shareName]`}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n);"]},"metadata":{},"sourceType":"module"}