{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst useSignup = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    conf_password: undefined\n  });\n  const [errors, setErrors] = useState({});\n  let [serverError, setServerErrors] = useState({\n    serverError: {}\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(\"http://127.0.0.1:8000/api/register\", data).then(res => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.token);\n        history.push(\"/\");\n      }).catch(err => serverError = err.response.data);\n    }\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useSignup, \"V1mCSy7vgVwJXCmRuWg5OmnG9Y4=\", false, function () {\n  return [useHistory];\n});\n\nexport default useSignup;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/useSignup.js"],"names":["useState","useEffect","axios","useHistory","useSignup","validate","values","setValues","name","email","password","conf_password","undefined","errors","setErrors","serverError","setServerErrors","isSubmitting","setIsSubmitting","history","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","localStorage","setItem","token","push","catch","err","response"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,2CAA3B;;AAGA,MAAMC,SAAS,GAAKC,QAAF,IAAgB;AAAA;;AAE9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,aAAa,EAAEC;AAJkB,GAAD,CAApC;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACe,WAAD,EAAcC,eAAd,IAAiChB,QAAQ,CAAC;AAC1Ce,IAAAA,WAAW,EAAE;AAD6B,GAAD,CAA7C;AAGA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMmB,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,oBAAoB,GAAGC,CAAC,IAAI;AAC9B,UAAM;AAAEb,MAAAA,IAAF;AAAQc,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAhB,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACE,IAAD,GAAQc;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAX,IAAAA,SAAS,CAACT,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAY,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEH,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IACAX,YADJ,EACkB;AACd,YAAMY,IAAI,GAAGvB,MAAb;AACAJ,MAAAA,KAAK,CACF4B,IADH,CACQ,oCADR,EAC8CD,IAD9C,EAEKE,IAFL,CAEWC,GAAD,IAAS;AACXC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACH,IAAJ,CAASM,KAAvC;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACH,IAAJ,CAASM,KAAtC;AACAhB,QAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACH,OANL,EAOKC,KAPL,CAOYC,GAAD,IACHvB,WAAW,GAAIuB,GAAG,CAACC,QAAJ,CAAaV,IARpC;AASC;AACR,GAdQ,EAcN,CAAChB,MAAD,CAdM,CAAT;AAgBA,SAAO;AAAEO,IAAAA,oBAAF;AAAwBd,IAAAA,MAAxB;AAAgCkB,IAAAA,YAAhC;AAA8CX,IAAAA;AAA9C,GAAP;AACH,CAlDD;;GAAMT,S;UAecD,U;;;AAqCpB,eAAeC,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; \r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n\r\nconst useSignup = ( validate ) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        conf_password: undefined\r\n        \r\n    });\r\n    \r\n    const [errors, setErrors] = useState({})\r\n    let [serverError, setServerErrors] = useState({\r\n        serverError: {}\r\n    })\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const handleRegisterChange = e => {\r\n        const { name, value } = e.target; \r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validate(values));\r\n        \r\n        setIsSubmitting(true);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && \r\n            isSubmitting) { \r\n            const data = values;\r\n            axios\r\n              .post(\"http://127.0.0.1:8000/api/register\", data)\r\n                .then((res) => {\r\n                    localStorage.setItem(\"token\", res.data.token);\r\n                    localStorage.setItem(\"user\", res.data.token);\r\n                    history.push(\"/\"); \r\n                })\r\n                .catch((err) =>\r\n                    serverError = (err.response.data));\r\n            }\r\n    }, [errors])\r\n\r\n    return { handleRegisterChange, values, handleSubmit, errors };\r\n};\r\n\r\nexport default useSignup;\r\n"]},"metadata":{},"sourceType":"module"}