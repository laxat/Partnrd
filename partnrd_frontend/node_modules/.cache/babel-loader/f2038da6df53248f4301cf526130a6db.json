{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\ShareAgreement\\\\Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { Controller } from \"react-hook-form\";\nimport { Input, Label, Button, Row, Col } from \"reactstrap\"; // import { ErrorMessage } from '@hookform/error-message'; \n\nimport \"./test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharesTable = /*#__PURE__*/React.forwardRef(_c = _s(({\n  columns,\n  data,\n  setData,\n  shareList,\n  setShareList,\n  methods\n}, ref) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups\n  } = useTable({\n    columns,\n    data\n  });\n  let errors = methods.formState.errors.shareInfo;\n\n  const handleInput = (i, e) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...data];\n    list[i][id] = value;\n    setData(list);\n  };\n\n  const addShareRow = function () {\n    let l = data.length + 1;\n    const d = [...data];\n    const list = [...shareList];\n    const item = {\n      shareID: l,\n      shareName: \"\",\n      shareClass: \"Class A\",\n      shareType: \"Common\",\n      shareTotal: 0\n    };\n    d.push(item);\n    list.push({\n      id: l,\n      selected: false\n    });\n    setShareList(list);\n    setData(d);\n  }; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: data.map((row, i) => {\n          //prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Controller, {\n                name: `shareInfo[${i}].shareID`,\n                control: methods.control,\n                defaultValue: data[i].shareID,\n                as: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: data[i].shareID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"shareName\",\n                name: `shareInfo[${i}].shareName`,\n                value: data[i].shareName,\n                onChange: e => handleInput(i, e),\n                innerRef: methods.register({\n                  required: \"ShareName is Required\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), errors && errors[i] && errors[i].shareName && errors[i].shareName.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors[i].shareName.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                required: true,\n                type: \"select\",\n                id: \"shareClass\",\n                name: `shareInfo[${i}].shareClass`,\n                value: data[i].shareClass,\n                onChange: e => handleInput(i, e),\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Class A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Class B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                required: true,\n                type: \"select\",\n                id: \"shareType\",\n                name: `shareInfo[${i}].shareType`,\n                value: data[i].shareType,\n                onChange: e => handleInput(i, e),\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Common\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Preferred\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                id: \"shareTotal\",\n                name: `shareInfo[${i}].shareTotal`,\n                value: data[i].shareTotal,\n                onChange: e => handleInput(i, e),\n                innerRef: methods.register({\n                  required: \"Total Shares is Required\",\n                  min: 1\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), errors && errors[i] && errors[i].shareTotal && errors[i].shareTotal.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors[i].shareTotal.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this), errors && errors[i] && errors[i].shareTotal && errors[i].shareTotal.type === \"min\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"There must be at least 1 share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => addShareRow(),\n                  children: \"Add Row \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), \" \", data.length !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    const newData = [...data];\n                    const list = [...shareList];\n                    newData.splice(i, 1);\n                    newData.map((row, index) => {\n                      if (index >= i) {\n                        row.shareID -= 1;\n                      }\n                    });\n                    list.pop();\n                    setShareList(list);\n                    setData(newData);\n                  },\n                  children: \"Remove Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}, \"4MaqQKCRIxFQEJ/ek5xX0BfB4W8=\", false, function () {\n  return [useTable];\n}));\n_c2 = SharesTable;\nexport const FoundersTable = /*#__PURE__*/React.forwardRef(_c3 = _s2(({\n  columns,\n  data,\n  setData,\n  methods,\n  shareData,\n  inputList,\n  setInputList\n}, ref) => {\n  _s2();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups\n  } = useTable({\n    columns,\n    data\n  });\n  const idata = `shareinfo[${0}]`; // const [inputList, setInputList] = useState([\n  //   [{ name: idata, index: 0, refID: \"1\", numHeld: 0 }],\n  // ]);\n\n  let errors = methods.formState.errors.founderInfo;\n\n  const handleFounderInput = (e, i) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...data];\n\n    if (id === \"onBoard\") {\n      let isChecked = e.target.checked;\n      list[i][id] = isChecked;\n      setData(list);\n    } else {\n      list[i][id] = value;\n      setData(list);\n    }\n  };\n\n  const addFounderRow = function () {\n    let l = data.length + 1;\n    const d = [...data];\n    const item = {\n      refNum: 1,\n      fname: \"\",\n      preferredName: \"\",\n      role: \"Founder\",\n      streetName: \"\",\n      cityName: \"\",\n      provinceName: \"\",\n      postalCode: \"\",\n      phone: \"\",\n      email: \"\",\n      isCorp: false,\n      onBoard: false,\n      corpName: \"\"\n    };\n    d.push(item);\n    addInputField();\n    setData(d);\n  };\n\n  const addInputField = function () {\n    const list = [...inputList];\n    const val = [{\n      name: idata,\n      index: 0,\n      refID: \"1\",\n      numHeld: 0\n    }]; // ?\n\n    list.push(val);\n    setInputList(list);\n  };\n\n  const handleInput = (e, i, index) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[i][index][id] = value;\n    setInputList(list);\n  };\n\n  const handleAddClick = (i, e) => {\n    e.preventDefault();\n    const list = [...inputList];\n    const lastIndex = inputList[i].length - 1;\n    list[i].push({\n      name: `shareinfo[${list[i][lastIndex].index + 1}]`,\n      index: list[i][lastIndex].index + 1,\n      refID: list[i][lastIndex].index + 2,\n      numHeld: 0\n    });\n    setInputList(list);\n  };\n\n  const handleRemoveClick = (i, e) => {\n    e.preventDefault();\n    const pos = [...inputList];\n    pos[i][inputList.length - 1].numHeld = 0;\n    pos[i].pop();\n    setInputList(pos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: data.map((row, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [inputList[i].map((x, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: `founderInfo[${i}][${x.name}][shareID]`,\n                      control: methods.control,\n                      defaultValue: inputList[i][index].refID,\n                      as: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: inputList[i][index].refID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 304,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][numHeld]`,\n                      id: `numHeld`,\n                      type: \"number\",\n                      value: inputList[i][index].numHeld,\n                      onChange: e => handleInput(e, i, index),\n                      innerRef: methods.register({\n                        min: 1\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 27\n                    }, this), errors && errors[i] && errors[i].shareinfo && errors[i].shareinfo[index] && errors[i].shareinfo[index].numHeld && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Must hold a share\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: [shareData.length !== inputList[i].length && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleAddClick(i, e),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), inputList[i].length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleRemoveClick(i, e),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"fname\",\n              name: `founderInfo[${i}][fname]`,\n              placeholder: \"Full Name\",\n              value: data[i].fname,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register({\n                required: \"Full Name Required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), errors && errors[i] && errors[i].fname && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors[i].fname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"preferredName\",\n              name: `founderInfo[${i}][preferredName]`,\n              placeholder: \"Preferred Name\",\n              value: data[i].preferredName,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"role\",\n              name: `founderInfo[${i}][role]`,\n              value: data[i].role,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Investor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"streetName\",\n              name: `founderInfo[${i}][streetName]`,\n              placeholder: \"Street Name\",\n              value: data[i].streetName,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"cityName\",\n              name: `founderInfo[${i}][cityName]`,\n              value: data[i].cityName,\n              onChange: e => handleFounderInput(e, i),\n              placeholder: \"City\",\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"provinceName\",\n              name: `founderInfo[${i}][provinceName]`,\n              value: data[i].provinceName,\n              onChange: e => handleFounderInput(e, i),\n              placeholder: \"Province\",\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AB\",\n                children: \"Alberta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BC\",\n                children: \"British Columbia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MB\",\n                children: \"Manitoba\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NB\",\n                children: \"New Brunswick\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NL\",\n                children: \"Newfoundland and Labrador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NS\",\n                children: \"Nova Scotia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ON\",\n                children: \"Ontario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PE\",\n                children: \"Prince Edward Island\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"QC\",\n                children: \"Quebec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SK\",\n                children: \"Saskatchewan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NT\",\n                children: \"Northwest Territories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NU\",\n                children: \"Nunavut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"YT\",\n                children: \"Yukon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"postalCode\",\n              name: `founderInfo[${i}][postalCode]`,\n              placeholder: \"Postal Code\",\n              value: data[i].postalCode,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              id: \"phone\",\n              name: `founderInfo[${i}][phone]`,\n              value: data[i].phone,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register({\n                required: \"Phone Number is Required\",\n                pattern: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), errors && errors[i] && errors[i].phone && errors[i].phone.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors[i].phone.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), errors && errors[i] && errors[i].phone && errors[i].phone.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please enter valid phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"email\",\n              name: `founderInfo[${i}][email]`,\n              value: data[i].email,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"onBoard\",\n              name: `founderInfo[${i}][onBoard]`,\n              checked: data[i].onBoard,\n              onChange: e => handleFounderInput(e, i),\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addFounderRow(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), \" \", data.length !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const newData = [...data];\n                  newData.splice(i, 1);\n                  newData.map((row, index) => {\n                    if (index >= i) {\n                      row.refNum -= 1;\n                    }\n                  });\n                  inputList.splice(i, 1);\n                  console.log(newData);\n                  setData(newData);\n                },\n                children: \"Del\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}, \"eY1HgRZqN4gV8xrkw0lpzrTlotE=\", false, function () {\n  return [useTable];\n}));\n_c4 = FoundersTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SharesTable$React.forwardRef\");\n$RefreshReg$(_c2, \"SharesTable\");\n$RefreshReg$(_c3, \"FoundersTable$React.forwardRef\");\n$RefreshReg$(_c4, \"FoundersTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/ShareAgreement/Table.js"],"names":["React","useState","useEffect","useTable","Controller","Input","Label","Button","Row","Col","SharesTable","forwardRef","columns","data","setData","shareList","setShareList","methods","ref","getTableProps","getTableBodyProps","headerGroups","errors","formState","shareInfo","handleInput","i","e","id","value","target","list","addShareRow","l","length","d","item","shareID","shareName","shareClass","shareType","shareTotal","push","selected","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","control","register","required","type","message","min","newData","splice","index","pop","FoundersTable","shareData","inputList","setInputList","idata","founderInfo","handleFounderInput","isChecked","checked","addFounderRow","refNum","fname","preferredName","role","streetName","cityName","provinceName","postalCode","phone","email","isCorp","onBoard","corpName","addInputField","val","name","refID","numHeld","handleAddClick","preventDefault","lastIndex","handleRemoveClick","pos","x","shareinfo","pattern","width","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\r\n// import { ErrorMessage } from '@hookform/error-message'; \r\nimport \"./test.css\"; \r\n\r\nexport const SharesTable = React.forwardRef(({\r\n  columns,\r\n  data,\r\n  setData,\r\n  shareList,\r\n  setShareList,\r\n  methods\r\n  }, ref) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n  \r\n  let errors = methods.formState.errors.shareInfo;\r\n\r\n  const handleInput = (i, e) => { \r\n    const { id, value } = e.target;\r\n    const list = [...data];\r\n    list[i][id] = value; \r\n    setData(list);\r\n    \r\n  }\r\n  \r\n   const addShareRow = function () {\r\n    let l = data.length + 1;\r\n    const d = [...data];\r\n    const list = [...shareList]; \r\n     \r\n    const item = {\r\n      shareID: l,\r\n      shareName: \"\",\r\n      shareClass: \"Class A\",\r\n      shareType: \"Common\",\r\n      shareTotal: 0,\r\n     };\r\n     \r\n\r\n    d.push(item);\r\n    list.push({\r\n       id: l,\r\n       selected: false\r\n     })\r\n    setShareList(list)\r\n    setData(d);\r\n  };\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {data.map((row, i) => {\r\n            //prepareRow(row);\r\n            return (\r\n              <tr key={i}>\r\n                <td>\r\n                  {\" \"}\r\n                  <Controller\r\n                    name={`shareInfo[${i}].shareID`}\r\n                    control={methods.control}\r\n                    defaultValue={data[i].shareID}\r\n                    as={<p>{data[i].shareID}</p>}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={\"shareName\"}\r\n                    name={`shareInfo[${i}].shareName`}\r\n                    value={data[i].shareName}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register({\r\n                      required: \"ShareName is Required\",\r\n                    })}\r\n                  />\r\n                  {errors &&\r\n                    errors[i] &&\r\n                    errors[i].shareName &&\r\n                    errors[i].shareName.type === \"required\" && (\r\n                      <p>{errors[i].shareName.message}</p>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    id={\"shareClass\"}\r\n                    name={`shareInfo[${i}].shareClass`}\r\n                    value={data[i].shareClass}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Class A</option>\r\n                    <option>Class B</option>\r\n                    <option>None</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    id={\"shareType\"}\r\n                    name={`shareInfo[${i}].shareType`}\r\n                    value={data[i].shareType}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Common</option>\r\n                    <option>Preferred</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"number\"\r\n                    id={\"shareTotal\"}\r\n                    name={`shareInfo[${i}].shareTotal`}\r\n                    value={data[i].shareTotal}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register({\r\n                      required: \"Total Shares is Required\",\r\n                      min: 1,\r\n                    })}\r\n                  />\r\n                  {errors &&\r\n                    errors[i] &&\r\n                    errors[i].shareTotal &&\r\n                    errors[i].shareTotal.type === \"required\" && (\r\n                      <p>{errors[i].shareTotal.message}</p>\r\n                    )}\r\n                  {errors &&\r\n                    errors[i] &&\r\n                    errors[i].shareTotal &&\r\n                    errors[i].shareTotal.type === \"min\" && (\r\n                      <p>There must be at least 1 share</p>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Button onClick={() => addShareRow()}>Add Row </Button>{\" \"}\r\n                    {data.length !== 1 && (\r\n                      <Button\r\n                        onClick={() => {\r\n                          const newData = [...data];\r\n                          const list = [...shareList]; \r\n                          newData.splice(i, 1);\r\n                          newData.map((row, index) => {\r\n                            if (index >= i) {\r\n                              row.shareID -= 1;\r\n                            }  \r\n                          });\r\n                          list.pop();\r\n                          setShareList(list);\r\n                          setData(newData);\r\n                        }}\r\n                      >\r\n                        Remove Row\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const FoundersTable = React.forwardRef(\r\n  ({ columns, data, setData, methods, shareData, inputList, setInputList }, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups} =\r\n    useTable({\r\n      columns,\r\n      data,\r\n      \r\n    });\r\n  \r\n  const idata = `shareinfo[${0}]`;\r\n  // const [inputList, setInputList] = useState([\r\n    \r\n  //   [{ name: idata, index: 0, refID: \"1\", numHeld: 0 }],\r\n  // ]);\r\n  \r\n  let errors = methods.formState.errors.founderInfo;\r\n    \r\n  const handleFounderInput = (e, i) => {\r\n    const { id, value } = e.target;\r\n    const list = [...data];\r\n    if (id === \"onBoard\") {\r\n      let isChecked = e.target.checked;\r\n      list[i][id] = isChecked;\r\n      setData(list);    \r\n    } else {\r\n      list[i][id] = value;\r\n      setData(list);\r\n    } \r\n  }\r\n\r\n  const addFounderRow = function () {\r\n    let l = data.length + 1;\r\n    const d = [...data];\r\n    const item = {\r\n      refNum: 1,\r\n      fname: \"\",\r\n      preferredName: \"\",\r\n      role: \"Founder\",\r\n      streetName: \"\",\r\n      cityName: \"\",\r\n      provinceName: \"\",\r\n      postalCode: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      isCorp: false,\r\n      onBoard: false,\r\n      corpName: \"\",\r\n    };\r\n\r\n    d.push(item);\r\n    addInputField();\r\n    setData(d);\r\n};\r\n  \r\n  const addInputField = function ()\r\n  {\r\n    const list = [...inputList]; \r\n    const val = [{ name: idata, index: 0, refID: \"1\", numHeld: 0 }];\r\n    // ?\r\n    list.push(val)\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleInput = (e, i, index) => {\r\n    const { id, value } = e.target;\r\n    const list = [...inputList];\r\n    \r\n    list[i][index][id] = value;\r\n    setInputList(list);\r\n  };\r\n  const handleAddClick = (i, e) => {\r\n    e.preventDefault()\r\n    const list = [...inputList];\r\n    const lastIndex = inputList[i].length - 1;\r\n    list[i].push({\r\n      name: `shareinfo[${list[i][lastIndex].index + 1}]`,\r\n      index: list[i][lastIndex].index + 1,\r\n      refID: list[i][lastIndex].index + 2,\r\n      numHeld: 0,\r\n    });\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (i, e) => {\r\n    e.preventDefault(); \r\n    const pos = [...inputList];\r\n    pos[i][inputList.length - 1].numHeld = 0; \r\n    pos[i].pop();\r\n    setInputList(pos);\r\n    };\r\n  \r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {data.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td colSpan=\"2\">\r\n                {inputList[i].map((x, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Row>\r\n                        <Col>\r\n                          <Controller\r\n                            name={`founderInfo[${i}][${x.name}][shareID]`}\r\n                            control={methods.control}\r\n                            defaultValue={inputList[i][index].refID}\r\n                            as={<p>{inputList[i][index].refID}</p>}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Input\r\n                            name={`founderInfo[${i}][${x.name}][numHeld]`}\r\n                            id={`numHeld`}\r\n                            type=\"number\"\r\n                            value={inputList[i][index].numHeld}\r\n                            onChange={(e) => handleInput(e, i, index)}\r\n                            innerRef={methods.register({\r\n                              min: 1,\r\n                            })}\r\n                          />\r\n                          {errors &&\r\n                            errors[i] &&\r\n                            errors[i].shareinfo &&\r\n                            errors[i].shareinfo[index] &&\r\n                            errors[i].shareinfo[index].numHeld && (\r\n                              <p>Must hold a share</p>\r\n                            )}\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"btn-box\">\r\n                  {shareData.length !== inputList[i].length && (\r\n                    <button\r\n                      className=\"mr10\"\r\n                      onClick={(e) => handleAddClick(i, e)}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                  )}\r\n                  {inputList[i].length !== 1 && (\r\n                    <button\r\n                      className=\"mr10\"\r\n                      onClick={(e) => handleRemoveClick(i, e)}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"fname\"\r\n                  name={`founderInfo[${i}][fname]`}\r\n                  placeholder=\"Full Name\"\r\n                  value={data[i].fname}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register({\r\n                    required: \"Full Name Required\",\r\n                  })}\r\n                />\r\n\r\n                {errors && errors[i] && errors[i].fname && (\r\n                  <p>{errors[i].fname.message}</p>\r\n                )}\r\n\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"preferredName\"\r\n                  name={`founderInfo[${i}][preferredName]`}\r\n                  placeholder=\"Preferred Name\"\r\n                  value={data[i].preferredName}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"role\"\r\n                  name={`founderInfo[${i}][role]`}\r\n                  value={data[i].role}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register}\r\n                >\r\n                  <option>Founder</option>\r\n                  <option>Investor</option>\r\n                </Input>\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"streetName\"\r\n                  name={`founderInfo[${i}][streetName]`}\r\n                  placeholder=\"Street Name\"\r\n                  value={data[i].streetName}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register}\r\n                />\r\n\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"cityName\"\r\n                  name={`founderInfo[${i}][cityName]`}\r\n                  value={data[i].cityName}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  placeholder=\"City\"\r\n                  innerRef={methods.register}\r\n                />\r\n\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"provinceName\"\r\n                  name={`founderInfo[${i}][provinceName]`}\r\n                  value={data[i].provinceName}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  placeholder=\"Province\"\r\n                  innerRef={methods.register}\r\n                >\r\n                  <option value=\"AB\">Alberta</option>\r\n                  <option value=\"BC\">British Columbia</option>\r\n                  <option value=\"MB\">Manitoba</option>\r\n                  <option value=\"NB\">New Brunswick</option>\r\n                  <option value=\"NL\">Newfoundland and Labrador</option>\r\n                  <option value=\"NS\">Nova Scotia</option>\r\n                  <option value=\"ON\">Ontario</option>\r\n                  <option value=\"PE\">Prince Edward Island</option>\r\n                  <option value=\"QC\">Quebec</option>\r\n                  <option value=\"SK\">Saskatchewan</option>\r\n                  <option value=\"NT\">Northwest Territories</option>\r\n                  <option value=\"NU\">Nunavut</option>\r\n                  <option value=\"YT\">Yukon</option>\r\n                </Input>\r\n\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"postalCode\"\r\n                  name={`founderInfo[${i}][postalCode]`}\r\n                  placeholder=\"Postal Code\"\r\n                  value={data[i].postalCode}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  type=\"tel\"\r\n                  id=\"phone\"\r\n                  name={`founderInfo[${i}][phone]`}\r\n                  value={data[i].phone}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register({\r\n                    required: \"Phone Number is Required\",\r\n                    pattern: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\r\n                  })}\r\n                />\r\n                {errors &&\r\n                  errors[i] &&\r\n                  errors[i].phone &&\r\n                  errors[i].phone.type === \"required\" && (\r\n                    <p>{errors[i].phone.message}</p>\r\n                  )}\r\n\r\n                {errors &&\r\n                  errors[i] &&\r\n                  errors[i].phone &&\r\n                  errors[i].phone.type === \"pattern\" && (\r\n                    <p>Please enter valid phone number</p>\r\n                  )}\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name={`founderInfo[${i}][email]`}\r\n                  value={data[i].email}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  innerRef={methods.register}\r\n                />\r\n              </td>\r\n              <td style={{width: 10}}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"onBoard\"\r\n                  name={`founderInfo[${i}][onBoard]`}\r\n                  checked={data[i].onBoard}\r\n                  onChange={(e) => handleFounderInput(e, i)}\r\n                  ref={methods.register}\r\n                />\r\n              </td>\r\n              <td>\r\n                <div>\r\n                  <Button onClick={() => addFounderRow()}>Add</Button>{\" \"}\r\n                  {data.length !== 1 && (\r\n                    <Button\r\n                      onClick={() => {\r\n                        const newData = [...data];\r\n                        newData.splice(i, 1);\r\n                        newData.map((row, index) => {\r\n                          if (index >= i) { \r\n                            row.refNum -= 1;\r\n                          }\r\n                        }); \r\n                        inputList.splice(i, 1);\r\n                        console.log(newData);\r\n                        setData(newData);\r\n                      }}\r\n                    >\r\n                      Del\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n} \r\n);\r\n"]},"metadata":{},"sourceType":"module"}