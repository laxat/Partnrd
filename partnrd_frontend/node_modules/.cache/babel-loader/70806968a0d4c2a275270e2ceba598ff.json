{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\components\\\\Collapsible\\\\CollapsibleContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useScrollHeight } from \"react-collapsible-content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS = {\n  COLLAPSED: \"COLLAPSED\",\n  PRE_EXPANDED: \"PRE_EXPANDED\",\n  EXPANDED: \"EXPANDED\",\n  PRE_COLLAPSED: \"PRE_COLLAPSED\"\n};\n\nfunction CollapsibleContent({\n  children,\n  expanded,\n  style,\n  transitionDuration,\n  transitionTimingFunction,\n  onTransitionStart,\n  onTransitionEnd,\n  ...others\n}) {\n  _s();\n\n  const contentContainerRef = useRef(null);\n  const [status, setStatus] = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED);\n  const {\n    scrollHeight\n  } = useScrollHeight(contentContainerRef, {\n    onTransitionStart,\n    onTransitionEnd\n  });\n  let transitionStyles;\n\n  switch (status) {\n    case STATUS.EXPANDED:\n      transitionStyles = {\n        maxHeight: \"100vh\",\n        transitionDuration: \".001s\"\n      };\n      break;\n\n    case STATUS.PRE_COLLAPSED:\n      transitionStyles = {\n        maxHeight: scrollHeight,\n        transitionDuration: \".001s\"\n      };\n      break;\n\n    case STATUS.PRE_EXPANDED:\n      transitionStyles = {\n        maxHeight: scrollHeight\n      };\n      break;\n\n    case STATUS.COLLAPSED:\n      transitionStyles = {\n        maxHeight: 0\n      };\n      break;\n\n    default:\n      transitionStyles = {\n        maxHeight: scrollHeight,\n        transitionDuration: \".001s\"\n      };\n  }\n\n  useEffect(() => {\n    if (expanded) {\n      if (status === STATUS.COLLAPSED) {\n        setStatus(STATUS.PRE_EXPANDED);\n      } else if (status === STATUS.PRE_EXPANDED) {\n        setTimeout(() => setStatus(STATUS.EXPANDED), 800);\n      }\n    } else if (!expanded) {\n      if (status === STATUS.EXPANDED) {\n        setStatus(STATUS.PRE_COLLAPSED);\n      } else if (status === STATUS.PRE_COLLAPSED) {\n        setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\n      }\n    }\n  }, [expanded, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...others,\n    style: {\n      overflow: \"hidden\",\n      transitionProperty: \"max-height\",\n      transitionTimingFunction,\n      transitionDuration,\n      ...transitionStyles,\n      ...style\n    },\n    ref: contentContainerRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CollapsibleContent, \"3mI5R4GrDajiKuSOEkGBaZEZju8=\", false, function () {\n  return [useScrollHeight];\n});\n\n_c = CollapsibleContent;\nCollapsibleContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]).isRequired,\n  expanded: PropTypes.bool,\n  onTransitionStart: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n  style: PropTypes.object,\n  transitionDuration: PropTypes.string,\n  transitionTimingFunction: PropTypes.string\n};\nCollapsibleContent.defaultProps = {\n  transitionDuration: \".425s\",\n  transitionTimingFunction: \"ease-in-out\"\n};\nexport default CollapsibleContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapsibleContent\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/components/Collapsible/CollapsibleContent.js"],"names":["React","useEffect","useRef","useState","PropTypes","useScrollHeight","STATUS","COLLAPSED","PRE_EXPANDED","EXPANDED","PRE_COLLAPSED","CollapsibleContent","children","expanded","style","transitionDuration","transitionTimingFunction","onTransitionStart","onTransitionEnd","others","contentContainerRef","status","setStatus","scrollHeight","transitionStyles","maxHeight","setTimeout","overflow","transitionProperty","propTypes","oneOfType","arrayOf","element","isRequired","bool","func","object","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useScrollHeight } from \"react-collapsible-content\";\r\n\r\nconst STATUS = {\r\n  COLLAPSED: \"COLLAPSED\",\r\n  PRE_EXPANDED: \"PRE_EXPANDED\",\r\n  EXPANDED: \"EXPANDED\",\r\n  PRE_COLLAPSED: \"PRE_COLLAPSED\",\r\n};\r\n\r\nfunction CollapsibleContent({\r\n  children,\r\n  expanded,\r\n  style,\r\n  transitionDuration,\r\n  transitionTimingFunction,\r\n  onTransitionStart,\r\n  onTransitionEnd,\r\n  ...others\r\n}) {\r\n  const contentContainerRef = useRef(null);\r\n  const [status, setStatus] = useState(\r\n    expanded ? STATUS.EXPANDED : STATUS.COLLAPSED\r\n  );\r\n  const { scrollHeight } = useScrollHeight(contentContainerRef, {\r\n    onTransitionStart,\r\n    onTransitionEnd,\r\n  });\r\n  let transitionStyles;\r\n  switch (status) {\r\n    case STATUS.EXPANDED:\r\n      transitionStyles = { maxHeight: \"100vh\", transitionDuration: \".001s\" };\r\n      break;\r\n    case STATUS.PRE_COLLAPSED:\r\n      transitionStyles = {\r\n        maxHeight: scrollHeight,\r\n        transitionDuration: \".001s\",\r\n      };\r\n      break;\r\n    case STATUS.PRE_EXPANDED:\r\n      transitionStyles = { maxHeight: scrollHeight };\r\n      break;\r\n    case STATUS.COLLAPSED:\r\n      transitionStyles = { maxHeight: 0 };\r\n      break;\r\n    default:\r\n      transitionStyles = {\r\n        maxHeight: scrollHeight,\r\n        transitionDuration: \".001s\",\r\n      };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (expanded) {\r\n      if (status === STATUS.COLLAPSED) {\r\n        setStatus(STATUS.PRE_EXPANDED);\r\n      } else if (status === STATUS.PRE_EXPANDED) {\r\n        setTimeout(() => setStatus(STATUS.EXPANDED), 800);\r\n      }\r\n    } else if (!expanded) {\r\n      if (status === STATUS.EXPANDED) {\r\n        setStatus(STATUS.PRE_COLLAPSED);\r\n      } else if (status === STATUS.PRE_COLLAPSED) {\r\n        setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\r\n      }\r\n    }\r\n  }, [expanded, status]);\r\n\r\n  return (\r\n    <div\r\n      {...others}\r\n      style={{\r\n        overflow: \"hidden\",\r\n        transitionProperty: \"max-height\",\r\n        transitionTimingFunction,\r\n        transitionDuration,\r\n        ...transitionStyles,\r\n        ...style,\r\n      }}\r\n      ref={contentContainerRef}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCollapsibleContent.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.element),\r\n    PropTypes.element,\r\n  ]).isRequired,\r\n  expanded: PropTypes.bool,\r\n  onTransitionStart: PropTypes.func,\r\n  onTransitionEnd: PropTypes.func,\r\n  style: PropTypes.object,\r\n  transitionDuration: PropTypes.string,\r\n  transitionTimingFunction: PropTypes.string,\r\n};\r\n\r\nCollapsibleContent.defaultProps = {\r\n  transitionDuration: \".425s\",\r\n  transitionTimingFunction: \"ease-in-out\",\r\n};\r\n\r\nexport default CollapsibleContent;\r\n"]},"metadata":{},"sourceType":"module"}