{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst useSignup = validate => {\n  _s();\n\n  const [password2, setPassword2] = useState({});\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    conf_password: password2\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === password2) {\n      setPassword2(values);\n    }\n\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(\"http://127.0.0.1:8000/api/register\", data).then(res => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.token);\n        history.push(\"/\");\n      }).catch(err => {\n        const error = err.response.data;\n        const s = Object.values(error.errors);\n        s.join(' ');\n        const response = {\n          error: true,\n          message: s\n        };\n        setResponse(response);\n        setIsSubmitting(false);\n      });\n    }\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors,\n    response\n  };\n};\n\n_s(useSignup, \"lY77MCaKIHeJQsHGaJ+zkTDMYnc=\", false, function () {\n  return [useHistory];\n});\n\nexport default useSignup;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/useSignup.js"],"names":["useState","useEffect","axios","useHistory","useSignup","validate","password2","setPassword2","values","setValues","name","email","password","conf_password","response","setResponse","error","message","errors","setErrors","isSubmitting","setIsSubmitting","history","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","localStorage","setItem","token","push","catch","err","s","join"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst useSignup = (validate) => {\r\n    const [password2, setPassword2] = useState({}); \r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    conf_password: password2,\r\n  });\r\n    \r\n  const [response, setResponse] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n\r\n   const [errors, setErrors] = useState({});\r\n    \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n     if (name === password2) {\r\n       setPassword2(values);\r\n     }\r\n    setValues({\r\n        ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = values;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/register\", data)\r\n        .then((res) => {\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            localStorage.setItem(\"user\", res.data.token);\r\n            history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response.data;\r\n            const s = Object.values(error.errors);\r\n            s.join(' '); \r\n            const response = {\r\n                error: true,\r\n                message: s\r\n\r\n            };\r\n            setResponse(response);\r\n            setIsSubmitting(false);\r\n        });\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleRegisterChange, values, handleSubmit, errors, response };\r\n};\r\n\r\nexport default useSignup;\r\n"]},"metadata":{},"sourceType":"module"}