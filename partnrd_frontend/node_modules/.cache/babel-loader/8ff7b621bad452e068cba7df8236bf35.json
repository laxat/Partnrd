{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst useSignup = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    conf_password: undefined\n  });\n  const [errors, setErrors] = useState({});\n  const [serverErrors, setServerErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const data = values;\n      axios.post(\"http://127.0.0.1:8000/api/register\", data).then(res => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.token);\n        history.push(\"/\");\n      }).catch(err => {\n        const error = err.response.data;\n        const s = Object.values(error.errors);\n        s.join(' ');\n        const response = {\n          error: true,\n          message: s\n        };\n\n        if (response.message === values.email) {\n          console.log('ya');\n        } //setServerErrors(serverValidate(response, error))\n\n\n        console.log(response);\n      });\n    }\n  }, [errors]);\n  return {\n    handleRegisterChange,\n    values,\n    handleSubmit,\n    errors,\n    serverErrors\n  };\n};\n\n_s(useSignup, \"DCi0PE5UsO3CF3peW2ZR/uUyZps=\", false, function () {\n  return [useHistory];\n});\n\nexport default useSignup;","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd_frontend/src/components/ClientAuth/useSignup.js"],"names":["useState","useEffect","axios","useHistory","useSignup","validate","values","setValues","name","email","password","conf_password","undefined","errors","setErrors","serverErrors","setServerErrors","isSubmitting","setIsSubmitting","history","handleRegisterChange","e","value","target","handleSubmit","preventDefault","Object","keys","length","data","post","then","res","localStorage","setItem","token","push","catch","err","error","response","s","join","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,2CAA3B;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,aAAa,EAAEC;AAJoB,GAAD,CAApC;AAOA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMmB,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,oBAAoB,GAAIC,CAAD,IAAO;AAClC,UAAM;AAAEb,MAAAA,IAAF;AAAQc,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAhB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQc;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAX,IAAAA,SAAS,CAACT,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAY,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AACpD,YAAMY,IAAI,GAAGvB,MAAb;AACAJ,MAAAA,KAAK,CACF4B,IADH,CACQ,oCADR,EAC8CD,IAD9C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACH,IAAJ,CAASM,KAAvC;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACH,IAAJ,CAASM,KAAtC;AACAhB,QAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,OANH,EAOKC,KAPL,CAOYC,GAAD,IAAS;AACZ,cAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaX,IAA3B;AACA,cAAMY,CAAC,GAAGf,MAAM,CAACpB,MAAP,CAAciC,KAAK,CAAC1B,MAApB,CAAV;AACA4B,QAAAA,CAAC,CAACC,IAAF,CAAO,GAAP;AACA,cAAMF,QAAQ,GAAG;AACfD,UAAAA,KAAK,EAAE,IADQ;AAEfI,UAAAA,OAAO,EAAEF;AAFM,SAAjB;;AAKA,YAAID,QAAQ,CAACG,OAAT,KAAqBrC,MAAM,CAACG,KAAhC,EAAuC;AACnCmC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,SAXW,CAYZ;;;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,OArBL;AAsBD;AACF,GA1BQ,EA0BN,CAAC3B,MAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEO,IAAAA,oBAAF;AAAwBd,IAAAA,MAAxB;AAAgCkB,IAAAA,YAAhC;AAA8CX,IAAAA,MAA9C;AAAsDE,IAAAA;AAAtD,GAAP;AACD,CAzDD;;GAAMX,S;UAWYD,U;;;AAgDlB,eAAeC,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst useSignup = (validate) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    conf_password: undefined,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [serverErrors, setServerErrors] = useState({})\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      const data = values;\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/register\", data)\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          localStorage.setItem(\"user\", res.data.token);\r\n          history.push(\"/\");\r\n        })\r\n          .catch((err) => {\r\n              const error = err.response.data;\r\n              const s = Object.values(error.errors);\r\n              s.join(' '); \r\n              const response = {\r\n                error: true, \r\n                message: s\r\n\r\n              }\r\n              if (response.message === values.email) {\r\n                  console.log('ya')\r\n              }\r\n              //setServerErrors(serverValidate(response, error))\r\n              console.log(response)\r\n          });\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleRegisterChange, values, handleSubmit, errors, serverErrors };\r\n};\r\n\r\nexport default useSignup;\r\n"]},"metadata":{},"sourceType":"module"}