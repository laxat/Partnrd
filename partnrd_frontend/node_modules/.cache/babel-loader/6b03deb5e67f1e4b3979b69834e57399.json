{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\CreateShareAgreement.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateShareAgreement(data) {\n  const val = JSON.parse(data);\n  const corpName = val.companyName;\n  const corpPlace = val.companyPlace;\n  const corpDate = val.companyDate;\n  const shareData = [];\n  const personData = [];\n  val.shareInfo.map((x, i) => {\n    return shareData[i] = {\n      shareID: x.shareID,\n      shareName: x.shareName,\n      shareClass: x.shareClass,\n      shareType: x.shareType,\n      shareTotal: x.shareTotal\n    };\n  });\n  val.founderInfo.map((x, i) => {\n    return personData[i] = {\n      personID: x.personID,\n      name: [x.fname, x.preferredName],\n      phone: x.phone,\n      email: x.email,\n      address: [x.streetName, x.provinceName, x.cityName, x.postalCode],\n      IsCompany: [x.role, x.corpName],\n      Ownership: x.shareinfo,\n      IsBoard: x.onBoard\n    };\n  });\n  console.log(personData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = CreateShareAgreement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateShareAgreement\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/CreateShareAgreement.js"],"names":["React","useState","CreateShareAgreement","data","val","JSON","parse","corpName","companyName","corpPlace","companyPlace","corpDate","companyDate","shareData","personData","shareInfo","map","x","i","shareID","shareName","shareClass","shareType","shareTotal","founderInfo","personID","name","fname","preferredName","phone","email","address","streetName","provinceName","cityName","postalCode","IsCompany","role","Ownership","shareinfo","IsBoard","onBoard","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAEvC,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;AACA,QAAMI,QAAQ,GAAGH,GAAG,CAACI,WAArB;AACA,QAAMC,SAAS,GAAGL,GAAG,CAACM,YAAtB;AACA,QAAMC,QAAQ,GAAGP,GAAG,CAACQ,WAArB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEAV,EAAAA,GAAG,CAACW,SAAJ,CAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,WAAOL,SAAS,CAACK,CAAD,CAAT,GAAe;AAClBC,MAAAA,OAAO,EAAEF,CAAC,CAACE,OADO;AAElBC,MAAAA,SAAS,EAAEH,CAAC,CAACG,SAFK;AAGlBC,MAAAA,UAAU,EAAEJ,CAAC,CAACI,UAHI;AAIlBC,MAAAA,SAAS,EAAEL,CAAC,CAACK,SAJK;AAKlBC,MAAAA,UAAU,EAAEN,CAAC,CAACM;AALI,KAAtB;AAOH,GARD;AAUAnB,EAAAA,GAAG,CAACoB,WAAJ,CAAgBR,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,WAAQJ,UAAU,CAACI,CAAD,CAAV,GAAgB;AACtBO,MAAAA,QAAQ,EAAER,CAAC,CAACQ,QADU;AAEtBC,MAAAA,IAAI,EAAE,CAACT,CAAC,CAACU,KAAH,EAAUV,CAAC,CAACW,aAAZ,CAFgB;AAGtBC,MAAAA,KAAK,EAAEZ,CAAC,CAACY,KAHa;AAItBC,MAAAA,KAAK,EAAEb,CAAC,CAACa,KAJa;AAKtBC,MAAAA,OAAO,EAAE,CAACd,CAAC,CAACe,UAAH,EAAef,CAAC,CAACgB,YAAjB,EAA+BhB,CAAC,CAACiB,QAAjC,EAA2CjB,CAAC,CAACkB,UAA7C,CALa;AAMtBC,MAAAA,SAAS,EAAE,CAACnB,CAAC,CAACoB,IAAH,EAASpB,CAAC,CAACV,QAAX,CANW;AAOtB+B,MAAAA,SAAS,EAAErB,CAAC,CAACsB,SAPS;AAQtBC,MAAAA,OAAO,EAAEvB,CAAC,CAACwB;AARW,KAAxB;AAWH,GAZD;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAY7B,UAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAtCeZ,oB","sourcesContent":["import React, {useState} from \"react\";\r\nexport function CreateShareAgreement(data) {\r\n\r\n    const val = JSON.parse(data); \r\n    const corpName = val.companyName;\r\n    const corpPlace = val.companyPlace; \r\n    const corpDate = val.companyDate;\r\n    const shareData = [];\r\n    const personData = [];\r\n     \r\n    val.shareInfo.map((x, i) => {\r\n        return(shareData[i] = {\r\n            shareID: x.shareID,\r\n            shareName: x.shareName,\r\n            shareClass: x.shareClass,\r\n            shareType: x.shareType,\r\n            shareTotal: x.shareTotal\r\n        });\r\n    });\r\n\r\n    val.founderInfo.map((x, i) => {\r\n        return (personData[i] = {\r\n          personID: x.personID,\r\n          name: [x.fname, x.preferredName],\r\n          phone: x.phone,\r\n          email: x.email,\r\n          address: [x.streetName, x.provinceName, x.cityName, x.postalCode],\r\n          IsCompany: [x.role, x.corpName],\r\n          Ownership: x.shareinfo, \r\n          IsBoard: x.onBoard,\r\n          \r\n        });\r\n    }); \r\n    \r\n    console.log(personData)\r\n\r\n    return (\r\n        <div>Hello</div>\r\n    ); \r\n}"]},"metadata":{},"sourceType":"module"}