{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\components\\\\Sidebar\\\\useSidebar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import { createContext } from 'istanbul-lib-report';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SidebarContext = /*#__PURE__*/createContext();\nexport function SidebarProvider({\n  children,\n  defaultItem\n}) {\n  _s();\n\n  const [currentItem, setCurrentItem] = useState(defaultItem);\n  useEffect(() => {\n    if (defaultItem !== currentItem) {\n      return setCurrentItem(currentItem);\n    }\n  }, [currentItem, defaultItem]);\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      currentItem,\n      setCurrentItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SidebarProvider, \"d/71ftzlNj1iBfCMHXZR9m3ibKM=\");\n\n_c = SidebarProvider;\nexport const useSidebar = ({\n  isCollapsable,\n  item,\n  items = []\n} = {}) => {\n  _s2();\n\n  const {\n    currentItem,\n    setCurrentItem\n  } = useContext(SidebarContext);\n  const isActive = item === currentItem || items.includes(currentItem);\n  const [isExpanded, setIsExpanded] = useState(isActive);\n  useEffect(() => {\n    if (!isActive && isExpanded) {\n      return setIsExpanded(false);\n    }\n\n    if (isActive && !isExpanded) {\n      return setIsExpanded(true);\n    }\n  }, [currentItem]);\n\n  const onItemClick = () => {\n    if (!isCollapsable) {\n      setCurrentItem(item);\n    }\n\n    setIsExpanded(prev => !prev);\n  };\n\n  return {\n    isExpanded,\n    isActive,\n    onItemClick\n  };\n};\n\n_s2(useSidebar, \"J525aVYWLYIIN45x4C6QSwp+zvc=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/components/Sidebar/useSidebar.js"],"names":["React","createContext","useContext","useEffect","useState","SidebarContext","SidebarProvider","children","defaultItem","currentItem","setCurrentItem","useSidebar","isCollapsable","item","items","isActive","includes","isExpanded","setIsExpanded","onItemClick","prev"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA4CC,SAA5C,EAAuDC,QAAvD,QAAsE,OAAtE;;AAEA,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;AAEP,OAAO,SAASK,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAoD;AAAA;;AACvD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACI,WAAD,CAA9C;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,WAAW,KAAKC,WAApB,EAAiC;AAC7B,aAAOC,cAAc,CAACD,WAAD,CAArB;AACH;AACJ,GAJQ,EAIN,CAACA,WAAD,EAAcD,WAAd,CAJM,CAAT;AAKA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAhC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAbeD,e;;KAAAA,e;AAchB,OAAO,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,KAAK,GAAG;AAA/B,IAAsC,EAAvC,KAA8C;AAAA;;AACpE,QAAM;AAAEL,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCR,UAAU,CAACG,cAAD,CAAlD;AACA,QAAMU,QAAQ,GAAGF,IAAI,KAAKJ,WAAT,IAAwBK,KAAK,CAACE,QAAN,CAAeP,WAAf,CAAzC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACW,QAAD,CAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,QAAD,IAAaE,UAAjB,EAA6B;AACzB,aAAOC,aAAa,CAAC,KAAD,CAApB;AACH;;AACD,QAAIH,QAAQ,IAAI,CAACE,UAAjB,EAA6B;AACzB,aAAOC,aAAa,CAAC,IAAD,CAApB;AACH;AAEJ,GARQ,EAQN,CAACT,WAAD,CARM,CAAT;;AAWA,QAAMU,WAAW,GAAG,MAAM;AAEtB,QAAI,CAACP,aAAL,EAAoB;AAChBF,MAAAA,cAAc,CAACG,IAAD,CAAd;AACH;;AACDK,IAAAA,aAAa,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAb;AACH,GAND;;AAQA,SAAO;AACHH,IAAAA,UADG;AAEHF,IAAAA,QAFG;AAGHI,IAAAA;AAHG,GAAP;AAMH,CA9BM;;IAAMR,U","sourcesContent":["//import { createContext } from 'istanbul-lib-report';\r\nimport React, { createContext, useContext,  useEffect, useState} from 'react';\r\n\r\nexport const SidebarContext = createContext(); \r\n\r\nexport function SidebarProvider({ children, defaultItem }) {\r\n    const [currentItem, setCurrentItem] = useState(defaultItem);\r\n    useEffect(() => {\r\n        if (defaultItem !== currentItem) {\r\n            return setCurrentItem(currentItem);\r\n        }\r\n    }, [currentItem, defaultItem]);\r\n    return (\r\n        <SidebarContext.Provider value={{ currentItem, setCurrentItem }}>\r\n            {children}\r\n        </SidebarContext.Provider>\r\n    \r\n    );\r\n}\r\nexport const useSidebar = ({ isCollapsable, item, items = [] } = {}) => {\r\n    const { currentItem, setCurrentItem } = useContext(SidebarContext);\r\n    const isActive = item === currentItem || items.includes(currentItem);\r\n    const [isExpanded, setIsExpanded] = useState(isActive);\r\n    \r\n    useEffect(() => {\r\n        if (!isActive && isExpanded) {\r\n            return setIsExpanded(false);\r\n        }\r\n        if (isActive && !isExpanded) {\r\n            return setIsExpanded(true);\r\n        }\r\n\r\n    }, [currentItem]);\r\n    \r\n\r\n    const onItemClick = () => {\r\n\r\n        if (!isCollapsable) {\r\n            setCurrentItem(item);\r\n        }\r\n        setIsExpanded((prev) => !prev);\r\n    };\r\n    \r\n    return {\r\n        isExpanded,\r\n        isActive,\r\n        onItemClick\r\n    };\r\n\r\n}; \r\n"]},"metadata":{},"sourceType":"module"}