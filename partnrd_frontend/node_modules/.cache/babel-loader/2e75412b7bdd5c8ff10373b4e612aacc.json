{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Partnr\\\\partnrd\\\\partnrd_frontend\\\\src\\\\pages\\\\Templates\\\\Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { Controller } from \"react-hook-form\";\nimport { Input, Label, Button, Row, Col } from \"reactstrap\"; // import { ErrorMessage } from '@hookform/error-message'; \n\nimport \"./test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharesTable = /*#__PURE__*/React.forwardRef(_c = _s(({\n  columns,\n  data,\n  setData,\n  methods\n}, ref) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); //const [shareData, setShareData] = useState(data)\n\n  const handleInput = (i, e) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...data];\n    list[i][id] = value;\n    setData(list);\n  };\n\n  const addShareRow = function () {\n    let l = data.length + 1;\n    const d = [...data];\n    const item = {\n      shareID: l,\n      shareName: \"\",\n      shareClass: \"Class A\",\n      shareType: \"Common\",\n      shareTotal: 0\n    };\n    d.push(item);\n    setData(d);\n  }; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: data.map((row, i) => {\n        //prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Controller, {\n              name: `shareInfo[${i}].shareID`,\n              control: methods.control,\n              defaultValue: data[i].shareID,\n              as: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data[i].shareID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"text\",\n              id: \"shareName\",\n              name: `shareInfo[${i}].shareName`,\n              value: data[i].shareName,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"select\",\n              id: \"shareClass\",\n              name: `shareInfo[${i}].shareClass`,\n              value: data[i].shareClass,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Class B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"select\",\n              id: \"shareType\",\n              name: `shareInfo[${i}].shareType`,\n              value: data[i].shareType,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Preferred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"number\",\n              id: \"shareTotal\",\n              name: `shareInfo[${i}].shareTotal`,\n              value: data[i].shareTotal,\n              onChange: e => handleInput(i, e),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addShareRow(),\n                children: \"Add Row \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), \" \", data.length !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const newData = [...data];\n                  newData.splice(i, 1);\n                  newData.map((row, index) => {\n                    if (index >= i) {\n                      row.shareID -= 1;\n                    }\n                  });\n                  setData(newData);\n                },\n                children: \"Remove Row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n}));\n_c2 = SharesTable;\nexport const FoundersTable = /*#__PURE__*/React.forwardRef(_c3 = _s2(({\n  columns,\n  data,\n  setData,\n  methods,\n  shareData\n}, ref) => {\n  _s2();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  const idata = `shareinfo[${0}]`;\n  const [inputList, setInputList] = useState([[{\n    name: idata,\n    index: 0,\n    refID: \"\",\n    numHeld: 0\n  }]]);\n\n  const handleFounderInput = (e, i) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...data];\n\n    if (id === \"onBoard\") {\n      let isChecked = e.target.checked;\n      list[i][id] = isChecked;\n      setData(list);\n    } else {\n      list[i][id] = value;\n      setData(list);\n    }\n  };\n\n  const addFounderRow = function () {\n    let l = data.length + 1;\n    const d = [...data];\n    const item = {\n      refNum: 1,\n      fname: \"\",\n      preferredName: \"\",\n      role: \"Founder\",\n      streetName: \"\",\n      cityName: \"\",\n      provinceName: \"\",\n      postalCode: \"\",\n      phone: \"\",\n      email: \"\",\n      isCorp: false,\n      onBoard: false,\n      corpName: \"\",\n      shareinfo: [{\n        refId: \"\",\n        numHeld: 0\n      }]\n    };\n    d.push(item);\n    addInputField();\n    setData(d);\n  };\n\n  const addInputField = function () {\n    const l = inputList.length - 1;\n    const val = [{\n      name: idata,\n      index: 0,\n      refID: \"\",\n      numHeld: 0\n    }];\n    inputList.push(val);\n    setInputList(inputList);\n  };\n\n  const handleInput = (e, i, index) => {\n    const {\n      id,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[i][index][id] = value;\n    setInputList(list);\n  };\n\n  const handleAddClick = (i, e) => {\n    e.preventDefault();\n    const list = [...inputList];\n    const lastIndex = inputList[i].length - 1;\n    list[i].push({\n      name: `shareinfo[${list[i][lastIndex].index + 1}]`,\n      index: list[i][lastIndex].index + 1,\n      refID: \"\",\n      numHeld: 0\n    });\n    setInputList(list);\n  };\n\n  const handleRemoveClick = (i, e) => {\n    e.preventDefault();\n    const pos = [...inputList];\n    pos[i].pop();\n    setInputList(pos);\n  };\n\n  console.log(methods.errors);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: data.map((row, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: `founderInfo[${i}][personID]`,\n              control: methods.control,\n              defaultValue: i + 1,\n              as: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [inputList[i].map((x, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][refID]`,\n                      id: `refID`,\n                      value: inputList[i][index].refID,\n                      onChange: e => handleInput(e, i, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: `founderInfo[${i}][${x.name}][numHeld]`,\n                      id: `numHeld`,\n                      type: \"number\",\n                      value: inputList[i][index].numHeld,\n                      onChange: e => handleInput(e, i, index),\n                      innerRef: methods.register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: [shareData.length !== inputList[i].length && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleAddClick(i, e),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 23\n              }, this), inputList[i].length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr10\",\n                onClick: e => handleRemoveClick(i, e),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: methods.errors.founderInfo[i].fname && methods.errors.founderInfo[i].fname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"fname\",\n              name: `founderInfo[${i}][fname]`,\n              placeholder: \"Full Name\",\n              value: data[i].fname,\n              onChange: e => handleFounderInput(e, i),\n              ref: methods.register({\n                required: \"This field is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"preferredName\",\n              name: `founderInfo[${i}][preferredName]`,\n              placeholder: \"Preferred Name\",\n              value: data[i].preferredName,\n              onChange: e => handleFounderInput(e, i),\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), methods.errors.fname && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: methods.errors.fname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"role\",\n              name: `founderInfo[${i}][role]`,\n              value: data[i].role,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Investor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Corporation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"streetName\",\n              name: `founderInfo[${i}][streetName]`,\n              placeholder: \"Street Name\",\n              value: data[i].streetName,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"cityName\",\n                name: `founderInfo[${i}][cityName]`,\n                value: data[i].cityName,\n                onChange: e => handleFounderInput(e, i),\n                placeholder: \"City\",\n                innerRef: methods.register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                id: \"provinceName\",\n                name: `founderInfo[${i}][provinceName]`,\n                value: data[i].provinceName,\n                onChange: e => handleFounderInput(e, i),\n                placeholder: \"Province\",\n                innerRef: methods.register,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB\",\n                  children: \"Alberta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"BC\",\n                  children: \"British Columbia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MB\",\n                  children: \"Manitoba\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NB\",\n                  children: \"New Brunswick\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NL\",\n                  children: \"Newfoundland and Labrador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NS\",\n                  children: \"Nova Scotia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ON\",\n                  children: \"Ontario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PE\",\n                  children: \"Prince Edward Island\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"QC\",\n                  children: \"Quebec\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SK\",\n                  children: \"Saskatchewan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NT\",\n                  children: \"Northwest Territories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NU\",\n                  children: \"Nunavut\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"YT\",\n                  children: \"Yukon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"postalCode\",\n              name: `founderInfo[${i}][postalCode]`,\n              placeholder: \"Postal Code\",\n              value: data[i].postalCode,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              id: \"phone\",\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n              name: `founderInfo[${i}][phone]`,\n              value: data[i].phone,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"email\",\n              name: `founderInfo[${i}][email]`,\n              value: data[i].email,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"onBoard\",\n              name: `founderInfo[${i}][onBoard]`,\n              checked: data[i].onBoard,\n              onChange: e => handleFounderInput(e, i),\n              ref: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"corpName\",\n              name: `founderInfo[${i}][corpName]`,\n              value: data[i].corpName,\n              onChange: e => handleFounderInput(e, i),\n              innerRef: methods.register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addFounderRow(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this), \" \", data.length !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const newData = [...data];\n                  newData.splice(i, 1);\n                  newData.map((row, index) => {\n                    if (index >= i) {\n                      row.refNum -= 1;\n                    }\n                  });\n                  inputList.splice(i, 1);\n                  console.log(newData);\n                  setData(newData);\n                },\n                children: \"Del\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 7\n  }, this);\n}, \"9jr5jqN0/E6pOk+imnouP4La8cY=\", false, function () {\n  return [useTable];\n}));\n_c4 = FoundersTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SharesTable$React.forwardRef\");\n$RefreshReg$(_c2, \"SharesTable\");\n$RefreshReg$(_c3, \"FoundersTable$React.forwardRef\");\n$RefreshReg$(_c4, \"FoundersTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/Partnr/partnrd/partnrd_frontend/src/pages/Templates/Table.js"],"names":["React","useState","useEffect","useTable","Controller","Input","Label","Button","Row","Col","SharesTable","forwardRef","columns","data","setData","methods","ref","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleInput","i","e","id","value","target","list","addShareRow","l","length","d","item","shareID","shareName","shareClass","shareType","shareTotal","push","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","control","register","newData","splice","index","FoundersTable","shareData","idata","inputList","setInputList","name","refID","numHeld","handleFounderInput","isChecked","checked","addFounderRow","refNum","fname","preferredName","role","streetName","cityName","provinceName","postalCode","phone","email","isCorp","onBoard","corpName","shareinfo","refId","addInputField","val","handleAddClick","preventDefault","lastIndex","handleRemoveClick","pos","pop","console","log","errors","x","founderInfo","message","required"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,YAA/C,C,CACA;;AACA,OAAO,YAAP;;AAEA,OAAO,MAAMC,WAAW,gBAAGV,KAAK,CAACW,UAAN,SAAiB,CAAC;AAC3CC,EAAAA,OAD2C;AAE3CC,EAAAA,IAF2C;AAG3CC,EAAAA,OAH2C;AAI3CC,EAAAA;AAJ2C,CAAD,EAKvCC,GALuC,KAK/B;AAAA;;AACX;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJlB,QAAQ,CAAC;AACPS,IAAAA,OADO;AAEPC,IAAAA;AAFO,GAAD,CADV,CAFW,CAQX;;AAEA,QAAMS,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AACA,UAAMC,IAAI,GAAG,CAAC,GAAGf,IAAJ,CAAb;AACAe,IAAAA,IAAI,CAACL,CAAD,CAAJ,CAAQE,EAAR,IAAcC,KAAd;AACAZ,IAAAA,OAAO,CAACc,IAAD,CAAP;AACD,GALD;;AAOC,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAIC,CAAC,GAAGjB,IAAI,CAACkB,MAAL,GAAc,CAAtB;AACA,UAAMC,CAAC,GAAG,CAAC,GAAGnB,IAAJ,CAAV;AAEA,UAAMoB,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAEJ,CADE;AAEXK,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAE,SAHD;AAIXC,MAAAA,SAAS,EAAE,QAJA;AAKXC,MAAAA,UAAU,EAAE;AALD,KAAb;AAOAN,IAAAA,CAAC,CAACO,IAAF,CAAON,IAAP;AACAnB,IAAAA,OAAO,CAACkB,CAAD,CAAP;AACF,GAbA,CAjBU,CAgCX;;;AACA,sBACE,sBAAWf,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACqB,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAW5B,iBAAiB,EAA5B;AAAA,gBACGL,IAAI,CAAC2B,GAAL,CAAS,CAACO,GAAD,EAAMxB,CAAN,KAAY;AAClB;AACA,4BACE;AAAA,kCACE;AAAA,uBACG,GADH,eAEE,QAAC,UAAD;AACE,cAAA,IAAI,EAAG,aAAYA,CAAE,WADvB;AAEE,cAAA,OAAO,EAAER,OAAO,CAACiC,OAFnB;AAGE,cAAA,YAAY,EAAEnC,IAAI,CAACU,CAAD,CAAJ,CAAQW,OAHxB;AAIE,cAAA,EAAE,eACA;AAAA,0BAAIrB,IAAI,CAACU,CAAD,CAAJ,CAAQW;AAAZ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,EAAE,EAAE,WAHN;AAIE,cAAA,IAAI,EAAG,aAAYX,CAAE,aAJvB;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQY,SALjB;AAME,cAAA,QAAQ,EAAGX,CAAD,IAAOF,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAN9B;AAOE,cAAA,QAAQ,EAAET,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,EAAE,EAAE,YAHN;AAIE,cAAA,IAAI,EAAG,aAAY1B,CAAE,cAJvB;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQa,UALjB;AAME,cAAA,QAAQ,EAAGZ,CAAD,IAAOF,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAN9B;AAOE,cAAA,QAAQ,EAAET,OAAO,CAACkC,QAPpB;AAAA,sCASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAwCE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,EAAE,EAAE,WAHN;AAIE,cAAA,IAAI,EAAG,aAAY1B,CAAE,aAJvB;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQc,SALjB;AAME,cAAA,QAAQ,EAAGb,CAAD,IAAOF,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAN9B;AAOE,cAAA,QAAQ,EAAET,OAAO,CAACkC,QAPpB;AAAA,sCASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxCF,eAsDE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,EAAE,EAAE,YAHN;AAIE,cAAA,IAAI,EAAG,aAAY1B,CAAE,cAJvB;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQe,UALjB;AAME,cAAA,QAAQ,EAAGd,CAAD,IAAOF,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAN9B;AAOE,cAAA,QAAQ,EAAET,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtDF,eAiEE;AAAA,mCACE;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMpB,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAC0D,GAD1D,EAEGhB,IAAI,CAACkB,MAAL,KAAgB,CAAhB,iBACC,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACb,wBAAMmB,OAAO,GAAG,CAAC,GAAGrC,IAAJ,CAAhB;AACAqC,kBAAAA,OAAO,CAACC,MAAR,CAAe5B,CAAf,EAAkB,CAAlB;AACA2B,kBAAAA,OAAO,CAACV,GAAR,CAAY,CAACO,GAAD,EAAMK,KAAN,KAAgB;AAC1B,wBAAIA,KAAK,IAAI7B,CAAb,EAAgB;AACdwB,sBAAAA,GAAG,CAACb,OAAJ,IAAe,CAAf;AACD;AACF,mBAJD;AAKApB,kBAAAA,OAAO,CAACoC,OAAD,CAAP;AACD,iBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjEF;AAAA,WAAS3B,CAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAyFH,OA3FA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2GD,CAjJ0B;AAAA,UAQvBpB,QARuB;AAAA,GAApB;MAAMO,W;AAmJb,OAAO,MAAM2C,aAAa,gBAAGrD,KAAK,CAACW,UAAN,WAC3B,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA,OAA1B;AAAmCuC,EAAAA;AAAnC,CAAD,EAAgDtC,GAAhD,KAAwD;AAAA;;AACtD;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJlB,QAAQ,CAAC;AACPS,IAAAA,OADO;AAEPC,IAAAA;AAFO,GAAD,CADV;AAOA,QAAM0C,KAAK,GAAI,aAAY,CAAE,GAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxD,QAAQ,CAAC,CACzC,CAAC;AAAEyD,IAAAA,IAAI,EAAEH,KAAR;AAAeH,IAAAA,KAAK,EAAE,CAAtB;AAAyBO,IAAAA,KAAK,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CADyC,CAAD,CAA1C;;AAIA,QAAMC,kBAAkB,GAAG,CAACrC,CAAD,EAAID,CAAJ,KAAU;AAEnC,UAAM;AAAEE,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AACA,UAAMC,IAAI,GAAG,CAAC,GAAGf,IAAJ,CAAb;;AACA,QAAIY,EAAE,KAAK,SAAX,EAAsB;AACpB,UAAIqC,SAAS,GAAGtC,CAAC,CAACG,MAAF,CAASoC,OAAzB;AACAnC,MAAAA,IAAI,CAACL,CAAD,CAAJ,CAAQE,EAAR,IAAcqC,SAAd;AACAhD,MAAAA,OAAO,CAACc,IAAD,CAAP;AAED,KALD,MAKO;AACLA,MAAAA,IAAI,CAACL,CAAD,CAAJ,CAAQE,EAAR,IAAcC,KAAd;AACAZ,MAAAA,OAAO,CAACc,IAAD,CAAP;AACD;AACF,GAbD;;AAcE,QAAMoC,aAAa,GAAG,YAAY;AAChC,QAAIlC,CAAC,GAAGjB,IAAI,CAACkB,MAAL,GAAc,CAAtB;AACA,UAAMC,CAAC,GAAG,CAAC,GAAGnB,IAAJ,CAAV;AACA,UAAMoB,IAAI,GAAG;AACXgC,MAAAA,MAAM,EAAE,CADG;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,IAAI,EAAE,SAJK;AAKXC,MAAAA,UAAU,EAAE,EALD;AAMXC,MAAAA,QAAQ,EAAE,EANC;AAOXC,MAAAA,YAAY,EAAE,EAPH;AAQXC,MAAAA,UAAU,EAAE,EARD;AASXC,MAAAA,KAAK,EAAE,EATI;AAUXC,MAAAA,KAAK,EAAE,EAVI;AAWXC,MAAAA,MAAM,EAAE,KAXG;AAYXC,MAAAA,OAAO,EAAE,KAZE;AAaXC,MAAAA,QAAQ,EAAE,EAbC;AAcXC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,KAAK,EAAE,EADT;AAEEnB,QAAAA,OAAO,EAAE;AAFX,OADS;AAdA,KAAb;AAsBA5B,IAAAA,CAAC,CAACO,IAAF,CAAON,IAAP;AACA+C,IAAAA,aAAa;AACblE,IAAAA,OAAO,CAACkB,CAAD,CAAP;AACH,GA5BC;;AA8BF,QAAMgD,aAAa,GAAG,YAAY;AAChC,UAAMlD,CAAC,GAAG0B,SAAS,CAACzB,MAAV,GAAmB,CAA7B;AAEA,UAAMkD,GAAG,GAAG,CAAC;AAAEvB,MAAAA,IAAI,EAAEH,KAAR;AAAeH,MAAAA,KAAK,EAAE,CAAtB;AAAyBO,MAAAA,KAAK,EAAE,EAAhC;AAAoCC,MAAAA,OAAO,EAAE;AAA7C,KAAD,CAAZ;AACAJ,IAAAA,SAAS,CAACjB,IAAV,CAAe0C,GAAf;AACAxB,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAND;;AAQA,QAAMlC,WAAW,GAAG,CAACE,CAAD,EAAID,CAAJ,EAAO6B,KAAP,KAAiB;AACnC,UAAM;AAAE3B,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AACA,UAAMC,IAAI,GAAG,CAAC,GAAG4B,SAAJ,CAAb;AACA5B,IAAAA,IAAI,CAACL,CAAD,CAAJ,CAAQ6B,KAAR,EAAe3B,EAAf,IAAqBC,KAArB;AACA+B,IAAAA,YAAY,CAAC7B,IAAD,CAAZ;AACD,GALD;;AAOA,QAAMsD,cAAc,GAAG,CAAC3D,CAAD,EAAIC,CAAJ,KAAU;AAC/BA,IAAAA,CAAC,CAAC2D,cAAF;AACA,UAAMvD,IAAI,GAAG,CAAC,GAAG4B,SAAJ,CAAb;AACA,UAAM4B,SAAS,GAAG5B,SAAS,CAACjC,CAAD,CAAT,CAAaQ,MAAb,GAAsB,CAAxC;AACAH,IAAAA,IAAI,CAACL,CAAD,CAAJ,CAAQgB,IAAR,CAAa;AACXmB,MAAAA,IAAI,EAAG,aAAY9B,IAAI,CAACL,CAAD,CAAJ,CAAQ6D,SAAR,EAAmBhC,KAAnB,GAA2B,CAAE,GADrC;AAEXA,MAAAA,KAAK,EAAExB,IAAI,CAACL,CAAD,CAAJ,CAAQ6D,SAAR,EAAmBhC,KAAnB,GAA2B,CAFvB;AAGXO,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMAH,IAAAA,YAAY,CAAC7B,IAAD,CAAZ;AACD,GAXD;;AAaA,QAAMyD,iBAAiB,GAAG,CAAC9D,CAAD,EAAIC,CAAJ,KAAU;AAClCA,IAAAA,CAAC,CAAC2D,cAAF;AACA,UAAMG,GAAG,GAAG,CAAC,GAAG9B,SAAJ,CAAZ;AACA8B,IAAAA,GAAG,CAAC/D,CAAD,CAAH,CAAOgE,GAAP;AACA9B,IAAAA,YAAY,CAAC6B,GAAD,CAAZ;AACD,GALD;;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY1E,OAAO,CAAC2E,MAApB;AACA,sBACE,sBAAWzE,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACqB,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAW5B,iBAAiB,EAA5B;AAAA,gBACGL,IAAI,CAAC2B,GAAL,CAAS,CAACO,GAAD,EAAMxB,CAAN,KAAY;AACpB,4BACE;AAAA,kCACE;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAG,eAAcA,CAAE,aADzB;AAEE,cAAA,OAAO,EAAER,OAAO,CAACiC,OAFnB;AAGE,cAAA,YAAY,EAAEzB,CAAC,GAAG,CAHpB;AAIE,cAAA,EAAE,eAAE;AAAA,0BAAIA,CAAC,GAAG;AAAR;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,uBACGiC,SAAS,CAACjC,CAAD,CAAT,CAAaiB,GAAb,CAAiB,CAACmD,CAAD,EAAIvC,KAAJ,KAAc;AAC9B,kCACE;AAAA,uCACE,QAAC,GAAD;AAAA,0CACE,QAAC,GAAD;AAAA,2CACE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAG,eAAc7B,CAAE,KAAIoE,CAAC,CAACjC,IAAK,UADpC;AAEE,sBAAA,EAAE,EAAG,OAFP;AAGE,sBAAA,KAAK,EAAEF,SAAS,CAACjC,CAAD,CAAT,CAAa6B,KAAb,EAAoBO,KAH7B;AAIE,sBAAA,QAAQ,EAAGnC,CAAD,IAAOF,WAAW,CAACE,CAAD,EAAID,CAAJ,EAAO6B,KAAP,CAJ9B;AAKE,sBAAA,QAAQ,EAAErC,OAAO,CAACkC;AALpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE,QAAC,GAAD;AAAA,2CACE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAG,eAAc1B,CAAE,KAAIoE,CAAC,CAACjC,IAAK,YADpC;AAEE,sBAAA,EAAE,EAAG,SAFP;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,KAAK,EAAEF,SAAS,CAACjC,CAAD,CAAT,CAAa6B,KAAb,EAAoBQ,OAJ7B;AAKE,sBAAA,QAAQ,EAAGpC,CAAD,IAAOF,WAAW,CAACE,CAAD,EAAID,CAAJ,EAAO6B,KAAP,CAL9B;AAME,sBAAA,QAAQ,EAAErC,OAAO,CAACkC;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,sBADF;AAyBD,aA1BA,CADH,eA4BE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,yBACGE,SAAS,CAACvB,MAAV,KAAqByB,SAAS,CAACjC,CAAD,CAAT,CAAaQ,MAAlC,iBACC;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAGP,CAAD,IAAO0D,cAAc,CAAC3D,CAAD,EAAIC,CAAJ,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EASGgC,SAAS,CAACjC,CAAD,CAAT,CAAaQ,MAAb,KAAwB,CAAxB,iBACC;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAGP,CAAD,IAAO6D,iBAAiB,CAAC9D,CAAD,EAAIC,CAAJ,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAwDE;AAAA,oCACE;AAAA,wBACGT,OAAO,CAAC2E,MAAR,CAAeE,WAAf,CAA2BrE,CAA3B,EAA8B2C,KAA9B,IACCnD,OAAO,CAAC2E,MAAR,CAAeE,WAAf,CAA2BrE,CAA3B,EAA8B2C,KAA9B,CAAoC2B;AAFxC;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,IAAI,EAAG,eAActE,CAAE,UAHzB;AAIE,cAAA,WAAW,EAAC,WAJd;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQ2C,KALjB;AAME,cAAA,QAAQ,EAAG1C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CANrC;AAOE,cAAA,GAAG,EAAER,OAAO,CAACkC,QAAR,CAAiB;AACpB6C,gBAAAA,QAAQ,EAAE;AADU,eAAjB;AAPP;AAAA;AAAA;AAAA;AAAA,oBALF,eAiBE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,eAFL;AAGE,cAAA,IAAI,EAAG,eAAcvE,CAAE,kBAHzB;AAIE,cAAA,WAAW,EAAC,gBAJd;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQ4C,aALjB;AAME,cAAA,QAAQ,EAAG3C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CANrC;AAOE,cAAA,GAAG,EAAER,OAAO,CAACkC;AAPf;AAAA;AAAA;AAAA;AAAA,oBAjBF,EA0BGlC,OAAO,CAAC2E,MAAR,CAAexB,KAAf,iBACC;AAAA,wBAAInD,OAAO,CAAC2E,MAAR,CAAexB,KAAf,CAAqB2B;AAAzB;AAAA;AAAA;AAAA;AAAA,oBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxDF,eAsFE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,EAAE,EAAC,MAFL;AAGE,cAAA,IAAI,EAAG,eAActE,CAAE,SAHzB;AAIE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQ6C,IAJjB;AAKE,cAAA,QAAQ,EAAG5C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,cAAA,QAAQ,EAAER,OAAO,CAACkC,QANpB;AAAA,sCAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtFF,eAoGE;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,YAFL;AAGE,cAAA,IAAI,EAAG,eAAc1B,CAAE,eAHzB;AAIE,cAAA,WAAW,EAAC,aAJd;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQ8C,UALjB;AAME,cAAA,QAAQ,EAAG7C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CANrC;AAOE,cAAA,QAAQ,EAAER,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,sCACE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,EAAE,EAAC,UAFL;AAGE,gBAAA,IAAI,EAAG,eAAc1B,CAAE,aAHzB;AAIE,gBAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQ+C,QAJjB;AAKE,gBAAA,QAAQ,EAAG9C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,gBAAA,WAAW,EAAC,MANd;AAOE,gBAAA,QAAQ,EAAER,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,EAAE,EAAC,cAFL;AAGE,gBAAA,IAAI,EAAG,eAAc1B,CAAE,iBAHzB;AAIE,gBAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQgD,YAJjB;AAKE,gBAAA,QAAQ,EAAG/C,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,gBAAA,WAAW,EAAC,UANd;AAOE,gBAAA,QAAQ,EAAER,OAAO,CAACkC,QAPpB;AAAA,wCASE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAUE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAWE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF,eAYE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,eAaE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF,eAcE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdF,eAeE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF,eAgBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,eAiBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF,eAkBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF,eAmBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF,eAoBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,eAqBE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eA6CE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,YAFL;AAGE,cAAA,IAAI,EAAG,eAAc1B,CAAE,eAHzB;AAIE,cAAA,WAAW,EAAC,aAJd;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQiD,UALjB;AAME,cAAA,QAAQ,EAAGhD,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CANrC;AAOE,cAAA,QAAQ,EAAER,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA,oBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApGF,eA2JE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,OAAO,EAAC,4BAHV;AAIE,cAAA,IAAI,EAAG,eAAc1B,CAAE,UAJzB;AAKE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQkD,KALjB;AAME,cAAA,QAAQ,EAAGjD,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CANrC;AAOE,cAAA,QAAQ,EAAER,OAAO,CAACkC;AAPpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3JF,eAsKE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,IAAI,EAAG,eAAc1B,CAAE,UAHzB;AAIE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQmD,KAJjB;AAKE,cAAA,QAAQ,EAAGlD,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,cAAA,QAAQ,EAAER,OAAO,CAACkC;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtKF,eAgLE;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,EAAE,EAAC,SAFL;AAGE,cAAA,IAAI,EAAG,eAAc1B,CAAE,YAHzB;AAIE,cAAA,OAAO,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQqD,OAJnB;AAKE,cAAA,QAAQ,EAAGpD,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,cAAA,GAAG,EAAER,OAAO,CAACkC;AANf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhLF,eA0LE;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,UAFL;AAGE,cAAA,IAAI,EAAG,eAAc1B,CAAE,aAHzB;AAIE,cAAA,KAAK,EAAEV,IAAI,CAACU,CAAD,CAAJ,CAAQsD,QAJjB;AAKE,cAAA,QAAQ,EAAGrD,CAAD,IAAOqC,kBAAkB,CAACrC,CAAD,EAAID,CAAJ,CALrC;AAME,cAAA,QAAQ,EAAER,OAAO,CAACkC;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA1LF,eAoME;AAAA,mCACE;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMe,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EACuD,GADvD,EAEGnD,IAAI,CAACkB,MAAL,KAAgB,CAAhB,iBACC,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACb,wBAAMmB,OAAO,GAAG,CAAC,GAAGrC,IAAJ,CAAhB;AACAqC,kBAAAA,OAAO,CAACC,MAAR,CAAe5B,CAAf,EAAkB,CAAlB;AACA2B,kBAAAA,OAAO,CAACV,GAAR,CAAY,CAACO,GAAD,EAAMK,KAAN,KAAgB;AAC1B,wBAAIA,KAAK,IAAI7B,CAAb,EAAgB;AACdwB,sBAAAA,GAAG,CAACkB,MAAJ,IAAc,CAAd;AACD;AACF,mBAJD;AAKAT,kBAAAA,SAAS,CAACL,MAAV,CAAiB5B,CAAjB,EAAoB,CAApB;AACAiE,kBAAAA,OAAO,CAACC,GAAR,CAAYvC,OAAZ;AACApC,kBAAAA,OAAO,CAACoC,OAAD,CAAP;AACD,iBAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApMF;AAAA,WAAS3B,CAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AA8ND,OA/NA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+OD,CA9U0B;AAAA,UAIvBpB,QAJuB;AAAA,GAAtB;MAAMkD,a","sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { Input, Label, Button, Row, Col } from \"reactstrap\";\r\n// import { ErrorMessage } from '@hookform/error-message'; \r\nimport \"./test.css\"; \r\n\r\nexport const SharesTable = React.forwardRef(({\r\n  columns,\r\n  data,\r\n  setData, \r\n  methods\r\n  }, ref) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n  \r\n  //const [shareData, setShareData] = useState(data)\r\n\r\n  const handleInput = (i, e) => { \r\n    const { id, value } = e.target;\r\n    const list = [...data];\r\n    list[i][id] = value; \r\n    setData(list);\r\n  }\r\n\r\n   const addShareRow = function () {\r\n     let l = data.length + 1;\r\n     const d = [...data];\r\n\r\n     const item = {\r\n       shareID: l,\r\n       shareName: \"\",\r\n       shareClass: \"Class A\",\r\n       shareType: \"Common\",\r\n       shareTotal: 0,\r\n     };\r\n     d.push(item);\r\n     setData(d);\r\n  };\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {data.map((row, i) => {\r\n            //prepareRow(row);\r\n            return (\r\n              <tr key={i}>\r\n                <td>\r\n                  {\" \"}\r\n                  <Controller\r\n                    name={`shareInfo[${i}].shareID`}\r\n                    control={methods.control}\r\n                    defaultValue={data[i].shareID}\r\n                    as={\r\n                      <p>{data[i].shareID}</p>\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    id={\"shareName\"}\r\n                    name={`shareInfo[${i}].shareName`}\r\n                    value={data[i].shareName}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    id={\"shareClass\"}\r\n                    name={`shareInfo[${i}].shareClass`}\r\n                    value={data[i].shareClass}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Class A</option>\r\n                    <option>Class B</option>\r\n                    <option>None</option>\r\n                  </Input>\r\n                  {/* }\r\n                  /> */}\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    id={\"shareType\"}\r\n                    name={`shareInfo[${i}].shareType`}\r\n                    value={data[i].shareType}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Common</option>\r\n                    <option>Preferred</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    id={\"shareTotal\"}\r\n                    name={`shareInfo[${i}].shareTotal`}\r\n                    value={data[i].shareTotal}\r\n                    onChange={(e) => handleInput(i, e)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Button onClick={() => addShareRow()}>Add Row </Button>{\" \"}\r\n                    {data.length !== 1 && (\r\n                      <Button\r\n                        onClick={() => {\r\n                          const newData = [...data];\r\n                          newData.splice(i, 1);\r\n                          newData.map((row, index) => {\r\n                            if (index >= i) {\r\n                              row.shareID -= 1;\r\n                            }\r\n                          });\r\n                          setData(newData);\r\n                        }}\r\n                      >\r\n                        Remove Row\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nexport const FoundersTable = React.forwardRef(\r\n  ({ columns, data, setData, methods, shareData}, ref) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n        \r\n      });\r\n    \r\n    const idata = `shareinfo[${0}]`;\r\n    const [inputList, setInputList] = useState([\r\n      [{ name: idata, index: 0, refID: \"\", numHeld: 0 }],\r\n    ]);\r\n    \r\n    const handleFounderInput = (e, i) => {\r\n\r\n      const { id, value } = e.target;\r\n      const list = [...data];\r\n      if (id === \"onBoard\") {\r\n        let isChecked = e.target.checked;\r\n        list[i][id] = isChecked;\r\n        setData(list);\r\n        \r\n      } else {\r\n        list[i][id] = value;\r\n        setData(list);\r\n      }\r\n    }\r\n      const addFounderRow = function () {\r\n        let l = data.length + 1;\r\n        const d = [...data];\r\n        const item = {\r\n          refNum: 1,\r\n          fname: \"\",\r\n          preferredName: \"\",\r\n          role: \"Founder\",\r\n          streetName: \"\",\r\n          cityName: \"\",\r\n          provinceName: \"\",\r\n          postalCode: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          isCorp: false,\r\n          onBoard: false,\r\n          corpName: \"\",\r\n          shareinfo: [\r\n            {\r\n              refId: \"\",\r\n              numHeld: 0,\r\n            },\r\n          ]\r\n        };\r\n\r\n        d.push(item);\r\n        addInputField();\r\n        setData(d);\r\n    };\r\n    \r\n    const addInputField = function () {\r\n      const l = inputList.length - 1;\r\n\r\n      const val = [{ name: idata, index: 0, refID: \"\", numHeld: 0 }];\r\n      inputList.push(val);\r\n      setInputList(inputList);\r\n    };\r\n\r\n    const handleInput = (e, i, index) => {\r\n      const { id, value } = e.target;\r\n      const list = [...inputList];\r\n      list[i][index][id] = value;\r\n      setInputList(list);\r\n    };\r\n    \r\n    const handleAddClick = (i, e) => {\r\n      e.preventDefault()\r\n      const list = [...inputList];\r\n      const lastIndex = inputList[i].length - 1;\r\n      list[i].push({\r\n        name: `shareinfo[${list[i][lastIndex].index + 1}]`,\r\n        index: list[i][lastIndex].index + 1,\r\n        refID: \"\",\r\n        numHeld: 0\r\n      });\r\n      setInputList(list);\r\n    };\r\n\r\n    const handleRemoveClick = (i, e) => {\r\n      e.preventDefault(); \r\n      const pos = [...inputList];\r\n      pos[i].pop();\r\n      setInputList(pos);\r\n    };\r\n\r\n    console.log(methods.errors);\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {data.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>\r\n                  <Controller\r\n                    name={`founderInfo[${i}][personID]`}\r\n                    control={methods.control}\r\n                    defaultValue={i + 1}\r\n                    as={<p>{i + 1}</p>}\r\n                  />\r\n                </td>\r\n                <td colSpan=\"2\">\r\n                  {inputList[i].map((x, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Row>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][refID]`}\r\n                              id={`refID`}\r\n                              value={inputList[i][index].refID}\r\n                              onChange={(e) => handleInput(e, i, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Input\r\n                              name={`founderInfo[${i}][${x.name}][numHeld]`}\r\n                              id={`numHeld`}\r\n                              type=\"number\"\r\n                              value={inputList[i][index].numHeld}\r\n                              onChange={(e) => handleInput(e, i, index)}\r\n                              innerRef={methods.register}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div className=\"btn-box\">\r\n                    {shareData.length !== inputList[i].length && (\r\n                      <button\r\n                        className=\"mr10\"\r\n                        onClick={(e) => handleAddClick(i, e)}\r\n                      >\r\n                        Add\r\n                      </button>\r\n                    )}\r\n                    {inputList[i].length !== 1 && (\r\n                      <button\r\n                        className=\"mr10\"\r\n                        onClick={(e) => handleRemoveClick(i, e)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span>\r\n                    {methods.errors.founderInfo[i].fname &&\r\n                      methods.errors.founderInfo[i].fname.message}\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    name={`founderInfo[${i}][fname]`}\r\n                    placeholder=\"Full Name\"\r\n                    value={data[i].fname}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    ref={methods.register({\r\n                      required: \"This field is required\",\r\n                    })}\r\n                  />\r\n                  \r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"preferredName\"\r\n                    name={`founderInfo[${i}][preferredName]`}\r\n                    placeholder=\"Preferred Name\"\r\n                    value={data[i].preferredName}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    ref={methods.register}\r\n                  />\r\n                  {methods.errors.fname && (\r\n                    <p>{methods.errors.fname.message}</p>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"role\"\r\n                    name={`founderInfo[${i}][role]`}\r\n                    value={data[i].role}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  >\r\n                    <option>Founder</option>\r\n                    <option>Investor</option>\r\n                    <option>Corporation</option>\r\n                  </Input>\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"streetName\"\r\n                    name={`founderInfo[${i}][streetName]`}\r\n                    placeholder=\"Street Name\"\r\n                    value={data[i].streetName}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                  <span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"cityName\"\r\n                      name={`founderInfo[${i}][cityName]`}\r\n                      value={data[i].cityName}\r\n                      onChange={(e) => handleFounderInput(e, i)}\r\n                      placeholder=\"City\"\r\n                      innerRef={methods.register}\r\n                    />\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"provinceName\"\r\n                      name={`founderInfo[${i}][provinceName]`}\r\n                      value={data[i].provinceName}\r\n                      onChange={(e) => handleFounderInput(e, i)}\r\n                      placeholder=\"Province\"\r\n                      innerRef={methods.register}\r\n                    >\r\n                      <option value=\"AB\">Alberta</option>\r\n                      <option value=\"BC\">British Columbia</option>\r\n                      <option value=\"MB\">Manitoba</option>\r\n                      <option value=\"NB\">New Brunswick</option>\r\n                      <option value=\"NL\">Newfoundland and Labrador</option>\r\n                      <option value=\"NS\">Nova Scotia</option>\r\n                      <option value=\"ON\">Ontario</option>\r\n                      <option value=\"PE\">Prince Edward Island</option>\r\n                      <option value=\"QC\">Quebec</option>\r\n                      <option value=\"SK\">Saskatchewan</option>\r\n                      <option value=\"NT\">Northwest Territories</option>\r\n                      <option value=\"NU\">Nunavut</option>\r\n                      <option value=\"YT\">Yukon</option>\r\n                    </Input>\r\n                  </span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"postalCode\"\r\n                    name={`founderInfo[${i}][postalCode]`}\r\n                    placeholder=\"Postal Code\"\r\n                    value={data[i].postalCode}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    id=\"phone\"\r\n                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                    name={`founderInfo[${i}][phone]`}\r\n                    value={data[i].phone}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name={`founderInfo[${i}][email]`}\r\n                    value={data[i].email}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"onBoard\"\r\n                    name={`founderInfo[${i}][onBoard]`}\r\n                    checked={data[i].onBoard}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    ref={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"corpName\"\r\n                    name={`founderInfo[${i}][corpName]`}\r\n                    value={data[i].corpName}\r\n                    onChange={(e) => handleFounderInput(e, i)}\r\n                    innerRef={methods.register}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Button onClick={() => addFounderRow()}>Add</Button>{\" \"}\r\n                    {data.length !== 1 && (\r\n                      <Button\r\n                        onClick={() => {\r\n                          const newData = [...data];\r\n                          newData.splice(i, 1);\r\n                          newData.map((row, index) => {\r\n                            if (index >= i) {\r\n                              row.refNum -= 1;\r\n                            }\r\n                          });\r\n                          inputList.splice(i, 1);\r\n                          console.log(newData);\r\n                          setData(newData);\r\n                        }}\r\n                      >\r\n                        Del\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}